{"version":3,"sources":["vendor/ZSDK.js","components/WTemplates/WTemplateBoard/WTemplateBoard.module.css","js/constants/index.js","js/actions/errors.js","components/Login/Login.js","components/Login/index.js","components/Menuheader/Menuheader.js","components/Loaders/LoadToMsgs/LoadToMsgs.js","js/actions/index.js","components/Loaders/LoadFromMsgs/LoadFromMsgs.js","components/Zohos/WriteToZohoFromMsg/WriteToZohoFromMsg.js","components/Zohos/DeleteToZohoMsg/DeleteToZohoMsg.js","components/Writers/WriteToPrevMsgs/WriteToPrevMsgs.js","components/Writers/WriteFromPrevMsgs/WriteFromPrevMsgs.js","components/Writers/WriteToLiveMsgs/WriteToLiveMsgs.js","components/Error/Error.js","components/WTemplates/WTemplate/WTemplate.js","components/WTemplates/WMediaTemplate/WMediaTemplate.js","components/WTemplates/WriteWTemplates/WriteWTemplates.js","components/WTemplates/WTemplateBoard/WTemplateBoard.js","components/Board/Board.js","components/Zoho/Zoho.js","App.js","reportWebVitals.js","js/reducers/index.js","js/reducers/errors.js","js/store/index.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","ZOHO","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","ZSDKUtil","GlobalLogger","QueryParams","GetQueryParams","ZLogger","mode","URL","qParams","window","location","href","substr","indexOf","split","forEach","ele","idx","miniSplit","hasOwnProperty","serviceOrigin","decodeURIComponent","prototype","Info","isDevMode","isLogEnabled","console","info","apply","arguments","Error","error","getLogger","Sleep","milliSeconds","startTime","Date","getTime","ZSDKMessageManager","SDKContext","AuthParentWindow","AuthParentOrigin","Logger","promiseIDCtr","PromiseQueue","RegExp","HandleSetContext","MessageEvent","payload","origin","parent","SetContext","data","ExecuteLoadHandler","HandleUpdateContext","HandleEventResponse","HandlePromiseCallback","promiseid","HandleEventFailure","promiseID","isSuccess","response","resolve","reject","undefined","getNextPromiseID","AddToPromiseQueue","Promise","time","PostMessage","appOrigin","encodeURIComponent","getCurrentURLPath","postMessage","protocol","host","pathname","Init","ctx","config","JSON","parse","e","messageType","type","eventName","MEvent","incomingSource","source","incomingOrigin","isAppRegistered","isAuthorizedMessage","eventHandler","SET_CONTEXT","UPDATE_CONTEXT","EVENT_RESPONSE","EVENT_RESPONSE_FAILURE","ZSDKEventManager","NotifyEventListeners","AppContext","HandleCustomEvent","HandleEvent","MessageInterceptor","stack","bind","RegisterApp","registerSDKClient","DERegisterApp","uniqueID","getUniqueID","SendRequest","options","isPromiseEvent","PromiseID","SendEvent","TriggerEvent","EventListeners","AttachEventListener","fn","Array","isArray","push","eventData","internalEventCheck","match","bindedListeners","length","i","call","NotifyInternalEventHandler","UpdateContext","ExecuteContextUpdateHandler","ZSDK","that","this","AppCode","ContextUpdateHandler","connectors","paramsObj","localeResource","version","_isAppRegistered","isOnLoadTriggered","isContextReady","HelperContext","getContext","GetRequest","isPromise","RegisterClient","contextData","modelData","model","locale","Object","keys","constructor","LoadLocaleResource","ZSDKModelManager","key","AddModel","Model","GetModelStore","eventHandlerFn","GetConnectors","_loadJSON","InitI18n","filepath","callback","xobj","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","send","Translate","valStr","_getKeyByString","translateOptions","stringify","eval","keysArr","_replaceString","str","find","replace","$r","o","s","a","k","all","document","querySelectorAll","getAttribute","hasAttribute","innerHTML","Bootstrap","MessageHandler","addEventListener","Event","Listen","Trigger","OnLoad","AppLoadHandler","OnUnLoad","AppUnLoadHandler","OnContextUpdate","AppCtxUpdateHandler","appSDK","initPromise","eventListenerMap","isInitTriggered","embeddedApp","on","event","init","promiseResolve","CRM","newRequestPromise","sdkVersion","createNewFileObj","file","oldfile","File","name","createRecord","Entity","APIdata","RecordID","RelatedEntity","FileData","newfileObj","category","RelatedID","APIData","getBluePrint","getAllActions","remoteCall","method","requestData","FILE","newfileobj","reqData","url","params","headers","body","Parts","PARTS","partBoundary","PART_BOUNDARY","ContentType","CONTENT_TYPE","responseType","RESPONSE_TYPE","Message","queryString","array","join","constructQueryString","Header","Body","PARTS_BOUNDARY","nameSpace","manipulateUI","$","action","obj","object","user","promiseData","ID","Type","page","per_page","getMeta","Id","HTTPRequest","ACTION","setConfig","enableAccountAccess","FUNCTIONS","execute","func_name","req_data","request","auth_type","customFunctionName","CONFIG","getOrgInfo","getCurrentUser","GetCurrentEnvironment","META","getFields","getModules","getAssignmentRules","getLayouts","id","LayoutId","getRelatedList","getCustomViews","API","addNotes","Note_Title","Title","Note_Content","Content","addNotesAttachment","RelatedRecordID","updateNotes","Files","FileName","Name","insertRecord","trigger","upsertRecord","duplicate_check_fields","getRecord","recordID","relatedListSysRef","RelatedList","updateBluePrint","BlueprintData","uploadFile","getFile","getAllRecords","updateRecord","deleteRecord","searchRecord","Query","delay","getApprovalRecords","newdata","getApprovalById","getApprovalsHistory","approveRecord","getAllUsers","getUser","getRelatedRecords","updateRelatedRecords","updateRelatedRecord","delinkRelatedRecord","deleteRelatedRecord","attachFile","getAllProfiles","getProfile","Category","updateProfile","getOrgVariable","UI","Resize","width","height","Dialer","maximize","telephony","minimize","notify","Record","record","target","Target","edit","create","populate","recordData","Popup","close","popup","closeReload","Widget","webTab","HTTP","get","post","put","patch","delete","CONNECTOR","invokeAPI","authorize","CONNECTION","invoke","conn_name","reqObj","param_type","parameters","connectionName","module","exports","WTemplateBoard","OWN_MESSAGE_IN","ERROR_IN","FROM_PREV_MSG","TO_PREV_MSG","FROM_LIVE_MSG","DELETE_FROM_PREV_MSG","DELETE_TO_PREV_MSG","DELETE_FROM_LIVE_MSG","errorsIn","dispatch","Login","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","myKey","handleSubmit","_this2","axios","password","then","res","localStorage","setItem","token","defaults","common","catch","err","removeItem","statusText","react_default","createElement","React","Component","connect","message","Menuheader","class","src","alt","usrAll","Full_Name","Email","Description","Lead_Source","Created_Time","Last_Activity_Time","isEmpty","Account_Name","Mobile","Phone","State","City","Street","defaultProps","LoadToMsgs","useDispatch","orderBy","msgTo","LoadFromMsgs","msgFrom","WriteToZohoFromMsg","messages","useSelector","store","messages_in","last_in_message","last","zeus4waba__Whatsapp_From","zeus4waba__w","concat","zeus4waba__Whatsapp_Status","dataMessage","details","log","DeleteToZohoMsg","messages_id","last_id_message","WriteToPrevMsgs","to_prev_messages","map","msg","onClick","WriteFromPrevMsgs","from_prev_messages","WriteToLiveMsgs","from_live_messages","ErrorComponent","_React$Component","inherits","createClass","value","errors_in","connected","WTemplate","_useState","useState","visible","title","language","message_text","_useState2","slicedToArray","setData","handleInputChange","objectSpread","defineProperty","for","placeholder","onChange","selected","template_name","template_text","getItem","Accept","Content-Type","Authorization","fetch","json","isObject","errors","WMediaTemplate","WriteWTemplates","setParams","temp","dataset","template","handler","data-testid","templates","data-template","handlerTemp","rr","WTemplates_WriteWTemplates_WriteWTemplates","getTemplates","BoardComponent","template_board","handleTemplate","tmp","setState","showAllTemplates","mobileTo","showTextTemplateForm","showMediaTemplateForm","handleMessage","assertThisInitialized","mobile","fullname","preventDefault","messageRouter","addOwnMessage","WTemplates_WTemplate_WTemplate","WTemplates_WMediaTemplate_WMediaTemplate","WTemplates_WTemplateBoard_WTemplateBoard","components_Error_Error","Writers_WriteToPrevMsgs_WriteToPrevMsgs","Writers_WriteFromPrevMsgs_WriteFromPrevMsgs","Writers_WriteToLiveMsgs_WriteToLiveMsgs","payloadSend","App","_React$useState","_React$useState2","userAll","setUsr","_React$useState3","_React$useState4","messagesToPrev","getMessagesTo","_React$useState5","_React$useState6","messagesFromPrev","getMessagesFrom","_React$useState7","_React$useState8","getAllMessages","_React$useState9","_React$useState10","userId","getUserId","_React$useState11","_React$useState12","entity","getEntity","_React$useState13","_React$useState14","getMobile","_React$useState15","_React$useState16","isLoaded","setIsLoaded","_React$useState17","_React$useState18","useEffect","_init","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","EntityId","toString","sort_order","messagesTo","filter","zeus4waba__Whatsapp_To","messagesFrom","abrupt","sent","t0","stop","Board_Board","components_Menuheader_Menuheader","Loaders_LoadToMsgs_LoadToMsgs","Loaders_LoadFromMsgs_LoadFromMsgs","WriteToZohoFromMsg_WriteToZohoFromMsg","Zohos_DeleteToZohoMsg_DeleteToZohoMsg","className","Zoho_Zoho","components_Login","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","articles","rootReducer","assign","byId","errorReducer","storeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","createRoot","getElementById","render","es","src_App_0"],"mappings":"kIAAAA,oBAAAC,EAAAC,oBAAA,sBAAAC,OAAA,IAAAC,oCAAAJ,oBAAA,IAAAK,4CAAAL,oBAAAM,EAAAF,qCAGMG,SAAY,SAAUA,GACxB,IAGIC,EAHEC,EAAcC,IAMpB,SAASC,EAASC,IAmBlB,SAASF,EAAgBG,GAErB,IAAMC,EAAU,GAahB,OAZAD,EAAMA,GAAOE,OAAOC,SAASC,MACFC,OAAOL,EAAIM,QAAQ,KAAO,GAAGC,MAAM,KAC/CC,QAAQ,SAAUC,EAAKC,GAClC,IAAMC,EAAYF,EAAIF,MAAM,KAC5BN,EAAQU,EAAU,IAAMA,EAAU,KAIlCV,EAAQW,eAAe,mBACvBX,EAAQY,cAAgBC,mBAAmBb,EAAQY,gBAGhDZ,EAoBX,OArDAH,EAAQiB,UAAUC,KAAO,YACjBtB,EAASuB,aAAevB,EAASwB,iBACjChB,OAAOiB,QAAQC,KAAKC,MAAM,KAAMC,YAGxCxB,EAAQiB,UAAUQ,MAAQ,YAClB7B,EAASuB,aAAevB,EAASwB,iBACjChB,OAAOiB,QAAQK,MAAMH,MAAM,KAAMC,YAwCzC5B,EAASG,eAAiBA,EAC1BH,EAASuB,UAbT,WACI,OAAOrB,GAAeA,EAAYqB,WAatCvB,EAASwB,aAXT,WACI,OAAOtB,GAAeA,EAAYsB,cAWtCxB,EAAS+B,UAxCT,WAKI,OAJK9B,GAAkBA,aAAwBG,IAC3CH,EAAe,IAAIG,GAGhBH,GAoCXD,EAASgC,MART,SAAgBC,GAEZ,IADA,IAAMC,GAAY,IAAIC,MAAOC,UACrBF,EAAYD,GAAgB,IAAIE,MAAOC,cAQ5CpC,EA7DO,CA8DfQ,OAAOR,UAAY,IAEhBqC,mBAAsB,SAAUA,GAClC,IAAIC,EAQAC,EAAsBC,EAPpBC,EAASzC,SAAS+B,YAEpBW,EAAe,IACbC,EAAe,GAEE,IAAIC,OAAO,uIAyElC,SAASC,EAAkBC,EAAcC,GAChBD,EAAaE,OAClCT,EAAmB/B,OAAOyC,OAC1BT,EAAmBF,EAAWpC,YAAYiB,cAE1CmB,EAAWY,WAAWH,EAAQI,MAC9Bb,EAAWc,qBAEf,SAASC,EAAqBP,EAAcC,IAQ5C,SAASO,EAAqBR,EAAcC,GAGxCQ,EAFkBR,EAAQS,WAEO,EADhBT,EAAQI,MAG7B,SAASM,EAAoBX,EAAcC,GAGvCQ,EAFkBR,EAAQS,WAEO,EADhBT,EAAQI,MAG7B,SAASI,EAAuBG,EAAWC,EAAWC,GAC9CjB,EAAazB,eAAewC,KACxBC,EACAhB,EAAae,GAAWG,QAAQD,GAEhCjB,EAAae,GAAWI,OAAOF,GAGnCjB,EAAae,QAAaK,SACnBpB,EAAae,IA8D5B,SAASM,IACL,MAAO,UAAYtB,IAEvB,SAASuB,EAAmBP,GAsBxB,OArBgB,IAAIQ,QAAQ,SAAUL,EAASC,GAE3CnB,EAAae,GAAa,CACtBG,QAASA,EACTC,OAAQA,EACRK,MAAM,IAAIhC,MAAOC,aAwC7B,SAASgC,EAAajB,GAKlB,GAJoB,kBAATA,IACPA,EAAKkB,UAAYC,mBAAmBC,OAGnChC,EACD,MAAM,IAAIV,MAAM,qCAEpBU,EAAiBiC,YAAYrB,EAAMb,EAAWpC,YAAYiB,eAE9D,SAASoD,IACL,OAAO/D,OAAOC,SAASgE,SAAW,KAAOjE,OAAOC,SAASiE,KAAOlE,OAAOC,SAASkE,SASpF,OAPAtC,EAAmBuC,KApOnB,SAAeC,EAAKC,GAChB,IAAKD,GAAsB,kBAARA,EACf,MAAMhD,MAAM,iCAEhB,GAAIiD,GAA4B,kBAAXA,EACjB,MAAMjD,MAAM,kDAKhB,OAFAS,EAAauC,EAgBjB,SAAyB/B,GAErB,IACI,IAAIK,EAAoC,kBAAtBL,EAAaK,KAAoB4B,KAAKC,MAAMlC,EAAaK,MAAQL,EAAaK,KAClG,MAAO8B,GACL,IAAI9B,EAAOL,EAAaK,KAE5B,IAAM+B,EAAc/B,EAAKgC,KACnBC,EAAYjC,EAAKiC,UAEvB,IACI,GAAkB,gBAAdA,GArBZ,SAA8BC,GAC1B,IAAMC,EAAiBD,EAAOE,OACxBC,EAAiBH,EAAOrC,OAE9B,SAAIV,EAAWmD,mBAAqBlD,IAAqB+C,GAAkB9C,IAAqBgD,IAIzF,IAAI3D,MAAM,0BAasB6D,CAAoB5C,GACnD,OAAQoC,GACR,IAAK,mBAcjB,SAAsBpC,EAAcC,GACnBA,EAAQI,KAArB,IAUMwC,EAPgB,CAClBC,YAAa/C,EACbgD,eAAgBxC,EAChByC,eAAgBxC,EAChByC,uBAAwBtC,GANVV,EAAQqC,WAUtBO,GAAwC,oBAAjBA,EACvBA,EAAa7C,EAAcC,GAiBnC,SAA4BD,EAAcC,GACtCiD,iBAAiBC,qBAAqB3D,EAAW4D,WAAYnD,EAAQqC,UAAWrC,EAAQI,MAhBpFgD,CAAkBrD,EAAcC,GA5BxBqD,CAAYtD,EAAcK,GAC1B,MAEJ,QACIb,EAAW+D,mBAAmBvD,EAAcK,IAItD,MAAO8B,GACLxC,EAAOZ,MAAM,2BAA4BoD,EAAEqB,SArCzBC,KAAKlE,IA2N/BA,EAAmBmE,YAnCnB,WACI,IAAMC,EAAoB,CACtBtB,KAAM,YACNC,UAAW,WACXf,UAAWC,mBAAmBC,MAIlC/D,OAAOyC,OAAOuB,YAAYiC,EAAmBnE,EAAWpC,YAAYiB,gBA4BxEkB,EAAmBqE,cA1BnB,WAOItC,EAN4B,CACxBe,KAAM,YACNC,UAAW,aACXuB,SAAUrE,EAAWsE,iBAwB7BvE,EAAmBwE,YA3HnB,SAAsBC,GAClB,IAAKA,GAA8B,kBAAZA,EACnB,MAAM,IAAIjF,MAAM,0BAGpB,OA4BJ,SAAoBuD,EAAWrC,EAASgE,GACpC,IAAK3B,EACD,MAAM,IAAIvD,MAAM,uBAAwBuD,GAG5C,IAAM4B,EAAYD,EAAiB/C,SAAqBD,EAexD,GAFAK,EAZoB,CAEhBe,KAAM,YACNC,UAAWA,EACXuB,SAAUrE,EAAWsE,cACrBzC,MAAM,IAAIhC,MAAOC,UACjBoB,UAAWwD,EAGX7D,KAAMJ,IAKNgE,EACA,OAAO9C,EAAkB+C,GAjDtBC,CAAU,eAAgBH,GAAS,IAuH9CzE,EAAmB6E,aArHnB,SAAuB9B,EAAWrC,EAASgE,GACvC,IAAK3B,EACD,MAAM,IAAIvD,MAAM,uBAAwBuD,GAG5C,IAAM4B,EAAYD,EAAiB/C,SAAqBD,EAexD,GAFAK,EAZoB,CAEhBe,KAAM,YACNC,UAAWA,EACXuB,SAAUrE,EAAWsE,cACrBzC,MAAM,IAAIhC,MAAOC,UACjBoB,UAAWwD,EAGX7D,KAAMJ,IAKNgE,EACA,OAAO9C,EAAkB+C,IAkG1B3E,EAtPiB,CAuPzB7B,OAAO6B,oBAAsB,IAE5B2D,iBAAoB,SAAUA,GAC9B,IAAMvD,EAASzC,SAAS+B,YAElBoF,EAAiB,GA8CvB,OAJAnB,EAAiBoB,oBAvCjB,SAA8BhC,EAAWiC,GACnB,oBAAPA,IAKNC,MAAMC,QAAQJ,EAAe/B,MAC9B+B,EAAe/B,GAAa,IAEhC+B,EAAe/B,GAAWoC,KAAKH,KA+BnCrB,EAAiBC,qBA5BjB,SAA+BC,EAAYd,EAAWqC,GAClD,IAAMC,EAAqBtC,EAAUuC,MAAM,wBAGrCC,GAFkBN,MAAMC,QAAQG,IAAuBA,EAAmBG,OAExDV,EAAe/B,IACvC,GAAIwC,GAAmBN,MAAMC,QAAQK,GACjC,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAgBC,OAAQC,IAC7BF,EAAgBE,GACxBC,KAAK7B,EAAYuB,QAGxBhF,EAAOnB,KAAK,0CAA2C8D,IAkB/DY,EAAiBgC,2BAdjB,SAAqC1F,EAAYS,GAC7C,IAAMqC,EAAYrC,EAAQqC,UAER,iBAAdA,GACA9C,EAAWY,WAAWH,EAAQI,MAC9Bb,EAAWc,sBACU,2BAAdgC,IACP9C,EAAW2F,cAAclF,EAAQI,MACjCb,EAAW4F,gCAQZlC,EAjDa,CAkDrBxF,OAAOwF,kBAAoB,IAE9B,SAASmC,OAEL,IAAMC,KAAOC,KACTC,QACAC,qBACAC,WACAtI,YACAyG,SACE8B,UAAY,GACdC,eAAiB,GAEfC,QAAU,QAEVlG,OAASzC,SAAS+B,YAEpB6G,kBAAmB,EACnBC,mBAAoB,EAGxBR,KAAKS,gBAAiB,EACtBT,KAAKU,cAAgB,GACrBV,KAAK9G,WAAY,EACjB8G,KAAKW,WAAa,WACd,OAAO9C,YAGX,IAAIA,WAAa,GA4BjB,SAAS9C,qBACkB,oBAAZkF,QACPO,kBAAqBpG,OAAOZ,MAAM,oCAEtCyG,QAAQP,KAAK7B,WAAYA,YACzB2C,mBAAoB,GAJiBpG,OAAOZ,MAAM,0CAMtD,SAASqG,8BACLK,qBAAqBR,KAAK7B,WAAYA,YAE1C,SAAST,kBACL,OAAOmD,iBAIX,SAASK,WAAYnC,GACjB,OAAOzE,mBAAmBwE,YAAYC,GAI1C,SAASI,aAAc9B,EAAWrC,EAASmG,GACvC,OAAO7G,mBAAmB6E,aAAa9B,EAAWrC,EAASmG,GAE/D,SAASC,iBACL9G,mBAAmBmE,cAIvB,SAAStD,WAAYkG,GACjB3G,OAAOnB,KAAK,2BAEZ,IAAM+H,EAAaD,GAAeA,EAAYE,OAAU,GAC1CF,GAAeA,EAAYG,OACnBH,GAAeA,EAAYV,eAYjD,GAVIlI,OAAOe,WACH6H,EAAYG,QAAUH,EAAYV,gBACW,IAAnDc,OAAOC,KAAKL,EAAYV,gBAAgBb,QACxCuB,EAAYV,eAAegB,cAAgBF,QACjCJ,EAAYG,QACZI,mBAAmBP,EAAYG,QAKX,qBAArBK,iBAAkC,CACzC,IAAK,IAAMC,KAAOR,EACd7I,OAAOoJ,iBAAiBE,SAASD,EAAKR,EAAUQ,IAEpD3D,WAAW6D,MAAQvJ,OAAOoJ,iBAAiBI,gBAI/CrD,SAAWyC,EAAYzC,SAGvB6B,WAAaY,EAAYZ,WACzB/F,OAAOnB,KAAK,kBAAmBkH,YAE/BI,kBAAmB,EAEvB,SAAShC,cACL,OAAOD,SAEX,SAASsB,cAAemB,IAGxB,SAAShC,oBAAqBhC,EAAW6E,GACrCjE,iBAAiBoB,oBAAoBhC,EAAW6E,GAGpD,SAASC,gBACL,OAAO1B,WAGX,SAASmB,mBAAoBJ,GACzBY,UAAU,qBAAuBZ,EAAS,QAAS,SAAU3F,GAEzD8E,eAAiB3D,KAAKC,MAAMpB,GAC5BwG,aAIR,SAASD,UAAWE,EAAUC,GAC1B,IAAMC,EAAO,IAAIC,eAEjBD,EAAKE,KAAK,MAAOJ,GAAU,GAC3BE,EAAKG,mBAAqB,WACC,GAAnBH,EAAKI,YAAkC,OAAfJ,EAAKK,QAE7BN,EAASC,EAAKM,eAItBN,EAAKO,KAAK,MAGd,SAASC,UAAWlB,IAAK/C,SACrB,IAAIkE,OAAS,GAKb,GAJInB,MACAmB,OAASC,gBAAgBvC,eAAgBmB,OAGxCmB,OACD,OAAO,EAGX,GAAIlE,QAAS,CACT,IAAI+C,IACEqB,iBAAmBnG,KAAKC,MAAMD,KAAKoG,UAAUC,KAAKtE,WAClDuE,QAAU7B,OAAOC,KAAKyB,kBAC5B,IAAKrB,OAAOwB,QACRL,OAASM,eAAeN,OAAQ,KAAOK,QAAQxB,KAAO,IAAKqB,iBAAiBG,QAAQxB,OAI5F,OAAOmB,OAGX,SAASM,eAAgBC,EAAKC,EAAMC,GAEhC,IADA,IAAIC,EAAK,GACFA,GAAMH,GACTG,EAAKH,EACLA,EAAMA,EAAIE,QAAQD,EAAMC,GAE5B,OAAOF,EAGX,SAASN,gBAAiBU,EAAGC,GAIzB,IADA,IAAMC,GADND,GADAA,EAAIA,EAAEH,QAAQ,aAAc,QACtBA,QAAQ,MAAO,KACT5K,MAAM,KACTiH,EAAI,EAAG/H,EAAI8L,EAAEhE,OAAQC,EAAI/H,IAAK+H,EAAG,CACtC,IAAMgE,EAAID,EAAE/D,GACZ,KAAIgE,KAAKH,GAGL,OAFAA,EAAIA,EAAEG,GAKd,OAAOH,EAGX,SAASvB,WACL,IAAM2B,IAAMC,SAASC,iBAAiB,eACtC,IAAK,IAAMnE,KAAKiE,IACZ,GAAIA,IAAI7K,eAAe4G,GAAI,CACvB,IAAIkD,OAASC,gBAAgBvC,eAAgBqD,IAAIjE,GAAGoE,aAAa,cACjE,IAAKlB,OACD,OAAO,EAGX,GAAIe,IAAIjE,GAAGqE,aAAa,gBAAiB,CACrC,IAAMrF,QAAU/B,KAAKC,MAAMD,KAAKoG,UAAUC,KAAK,IAAMW,IAAIjE,GAAGoE,aAAa,gBAAkB,OACrFb,QAAU7B,OAAOC,KAAK3C,SACxB+C,IACJ,IAAKA,OAAOwB,QACRL,OAASM,eAAeN,OAAQ,KAAOK,QAAQxB,KAAO,IAAK/C,QAAQuE,QAAQxB,OAGnFkC,IAAIjE,GAAGsE,UAAYpB,QAK/B,SAASqB,YACLnM,YAAcF,SAASG,iBAGvBK,OAAOe,YAAcrB,YAAYqB,UAEjC,IAAMe,EAAa,GACnBA,EAAWf,UAAYf,OAAOe,UAC9Be,EAAWc,mBAAqBA,mBAChCd,EAAWY,WAAaA,WACxBZ,EAAW2F,cAAgBA,cAC3B3F,EAAWpC,YAAcA,YACzBoC,EAAW4H,cAAgBA,cAC3B5H,EAAW4E,aAAeA,aAC1B5E,EAAW4F,4BAA8BA,4BACzC5F,EAAWsE,YAAcA,YACzBtE,EAAWmD,gBAAkBA,gBAG7B,IAAM6G,EAAiBjK,mBAAmBuC,KAAKtC,GAC/C9B,OAAO+L,iBAAiB,UAAWD,GACnC9L,OAAO+L,iBAAiB,SAAU,WAC9BlK,mBAAmBqE,kBAGS,qBAArBkD,kBACPpJ,OAAOoJ,iBAAiBhF,KAAKtC,GAGjC6G,iBA5NJjD,WAAW6D,MAAQ,GAEnB7D,WAAWsG,MAAQ,GACnBtG,WAAWsG,MAAMC,OAASrF,oBAC1BlB,WAAWsG,MAAME,QAAUxF,aAE3BhB,WAAW+C,WAAaA,WACxB/C,WAAWhG,YAAcA,YACzBgG,WAAW6E,UAAYA,UAEvB1C,KAAKsE,OAAS,SAAUC,GAEpB,GAA8B,oBAAnBA,EACP,MAAM,IAAI/K,MAAM,oCAEpByG,QAAUsE,EACNhE,kBAAoBxF,sBAE5BiF,KAAKwE,SAAW,SAAUC,KAG1BzE,KAAK0E,gBAAkB,SAAUC,GAE7BzE,qBAAuByE,GAwM3BX,YAGG,IAAMzM,KAAQ,WACjB,IAAIqN,EAGAC,EAFEC,EAAmB,GACrBC,GAAkB,EAEtB,MAAO,CACHC,YAAa,CACTC,GAAI,SAAUC,EAAOlG,GACjB8F,EAAiBI,GAASlG,GAE9BmG,KAAM,WAIE,IAAIC,EAHX,IAAKL,EAUE,IAAK,IAAMvD,KATjBuD,GAAkB,EACZH,EAAS,IAAI9E,KAEb+E,EAAc,IAAIhJ,QAAQ,SAAUL,EAASC,GACzC2J,EAAiB5J,IAErBoJ,EAAON,OAAO,WACVc,MAEcN,EACdF,EAAOjE,aAAawD,MAAMC,OAAO5C,EAAKsD,EAAiBtD,IAG/D,OAAOqD,IAGfQ,IAAM,WACF,SAASC,EAAmBxK,GAKxB,OADAA,EAAKyK,WAAa,IACXX,EAAOjE,aAAawD,MAAME,QAAQ,YAAavJ,GAAM,GAGhE,SAAS0K,EAAkBC,GACvB,IAAMC,EAAUD,EAErB,OADqB,IAAIE,KAAK,CAACD,GAAUA,EAAQE,KAAM,CAAE9I,KAAM4I,EAAQ5I,OAGtE,SAAS+I,EAAcC,EAAQC,EAASC,EAAUC,GACjD,GAAIF,EAAQG,SAAU,CACpB,IAAMC,EAAaX,EAAiBO,EAAQG,UACvCH,EAAQG,SAAWC,EAEvB,IAAMrL,EAAO,CACTsL,SAAU,SACVN,OAAQA,EACRO,UAAWL,EACXM,QAASP,GAGb,OADAjL,EAAKgC,KAAOmJ,GAAiB,SACtBX,EAAkBxK,GAc7B,SAASyL,EAAcD,GAEnB,OADAA,EAAQF,SAAW,YACZd,EAAkBgB,GAmB7B,SAASE,EAAeF,GAEpB,OADAA,EAAQF,SAAW,YACZd,EAAkBgB,GA4H7B,SAASG,EAAYC,EAAQC,EAAa7J,GACzC,GAAI6J,EAAYC,KAAM,CACrB,IAAMC,EAAarB,EAAiBmB,EAAYC,KAAKnB,MACrDkB,EAAYC,KAAKnB,KAAOoB,EAEtB,IAAIC,EACJ,GAAKhK,EA4BDgK,EAAUH,MA5BH,CACP,IAAII,EAAMJ,EAAYI,IAChBC,EAASL,EAAYK,OACrBC,EAAUN,EAAYM,QACtBC,EAAOP,EAAYO,KACnBC,EAAQR,EAAYS,MACpBC,EAAeV,EAAYW,cAC3BC,EAAcZ,EAAYa,aAC1BC,EAAed,EAAYe,cAC3BjC,EAAOkB,EAAYC,KACzB,IAAKG,EACD,KAAM,CAAEY,QAAS,eAErB,GAAIX,EAAQ,CACR,IAAMY,EA7BlB,SAA+B1K,GAC3B,IAAM2K,EAAQ,GAEd,IAAK,IAAMrG,KAAOtE,EACd2K,EAAM1I,KAAKlD,mBAAmBuF,GAAO,IAAMvF,mBAAmBiB,EAAOsE,KAEzE,OAAOqG,EAAMC,KAAK,KAuBUC,CAAqBf,GACzCD,IAAQA,EAAIxO,QAAQ,MAAQ,EAAI,IAAM,KAAOqP,EAEjDd,EAAU,CACNC,IAAKA,EACLiB,OAAQf,EACRgB,KAAMf,EACNM,aAAcD,EACdG,cAAeD,EACfL,MAAOD,EACPe,eAAgBb,EAChBT,KAAMnB,GAYd,OAAOH,EANM,CACTc,SAAU,YACV+B,UAAWzB,EACX5L,KAAMgM,EACNhK,KAAMA,IAKd,SAASsL,EAActN,GAKnB,OADAuN,2CAASvN,EAHM,CACXsL,SAAU,OAGPd,EAAkBxK,GAG7B,SAAS2B,EAAQK,EAAMqL,EAAWxB,GAO9B,OAAOrB,EANM,CACTc,SAAU,SACVtJ,KAAMA,EACNqL,UAAWA,EACX7B,QAASK,IAKjB,SAAS2B,EAAQxL,EAAMyL,GAMnB,OAAOjD,EALM,CACTc,SAAU,SACVtJ,KAAMA,EACN0L,OAAQD,IAKhB,SAASE,EAAM3N,GACX,IAAM4N,EAAc,CAChBtC,SAAU,QAad,OAXItL,EAAK6N,GACLD,EAAYC,GAAK7N,EAAK6N,GACf7N,EAAK8N,OACZF,EAAYE,KAAO9N,EAAK8N,KACpB9N,EAAK+N,OACLH,EAAYG,KAAO/N,EAAK+N,MAExB/N,EAAKgO,WACLJ,EAAYI,SAAWhO,EAAKgO,WAG7BxD,EAAkBoD,GAG7B,SAASK,EAASjO,GAOd,OAAOwK,EANS,CACZc,SAAU,OACVtJ,KAAMhC,EAAKgC,KACXgJ,OAAQhL,EAAKgL,OACbkD,GAAIlO,EAAKkO,KAIjB,IAAMC,EACI,YADJA,EAEG,WAFHA,EAGG,WAHHA,EAIK,aAJLA,EAKM,cAEZ,MAAO,CACHC,OAAQ,CACJC,UAAW,SAAUZ,GACjB,OAAOD,EAAO,4BAA6BC,IAE/Ca,oBAAqB,SAAUb,GAC3B,OAAOD,EAAO,wBAAyBC,KAM/Cc,UAAW,CA+BPC,QAAS,SAAUC,EAAWC,GAC1B,IAAMC,EAAU,GAQhB,OAPAD,EAASE,UAAY,QACrBD,EAAQ3O,KAAO0O,EAMRlE,EALM,CACTc,SAAU,oBACVuD,mBAAoBJ,EACpBzO,KAAM2O,MASlBG,OAAQ,CAmBJC,WAAY,SAAU1B,GAClB,OAAO1L,EAAO,QAkClBqN,eAAgB,WACZ,OAAOrN,EAAO,iBAyBlBsN,sBAAuB,WACnB,OAAOtN,EAAO,oBA0ItBuN,KAAM,CAkRFC,UAAW,SAAUnP,GAEjB,OADAA,EAAKgC,KAAO,aACLiM,EAAQjO,IA8MnBoP,WAAY,WAIR,OAAOnB,EAHM,CACTjM,KAAM,iBAmDdqN,mBAAoB,SAAUrP,GAE1B,OADAA,EAAKgC,KAAO,mBACLiM,EAAQjO,IAm+CnBsP,WAAY,SAAUtP,GAGlB,OAFAA,EAAKuP,GAAKvP,EAAKuP,GAAKvP,EAAKuP,GAAKvP,EAAKwP,SACnCxP,EAAKgC,KAAOhC,EAAKkO,GAAK,SAAW,UAC1BD,EAAQjO,IA0MnByP,eAAgB,SAAUzP,GAEtB,OADAA,EAAKgC,KAAO,eACLiM,EAAQjO,IAiNnB0P,eAAgB,SAAU1P,GAEtB,OADAA,EAAKgC,KAAOhC,EAAKkO,GAAK,cAAgB,eAC/BD,EAAQjO,KAMvB2P,IAAK,CAwCDC,SAAU,SAAU5P,GAChB,IAAMgL,EAAShL,EAAKgL,OAEdE,EAAWlL,EAAKkL,SAOtB,OAAOH,EAAaC,EANJ,CACZhL,KAAM,CAAC,CACH6P,WAAY7P,EAAK8P,MACjBC,aAAc/P,EAAKgQ,WAGU9E,EARf,UAU1B+E,mBAAoB,SAAUjQ,GAU1B,OAt7FZ,SAAsBgL,EAAQE,EAAUgF,EAAiB1E,GASrD,OAAOhB,EARM,CACTc,SAAU,SACVtJ,KAAM,QACNgJ,OAAQA,EACRE,SAAUA,EACVgF,gBAAiBA,EACjB1E,QAASA,IA+6FE2E,CATQnQ,EAAKgL,OACHhL,EAAKkL,SACElL,EAAKkQ,gBACb,CACZE,MAAO,CACHC,SAAUxF,KAAKyF,KACflF,SAAUP,KAAKmF,YAsG3BO,aAAc,SAAUvQ,GACpB,IAAMgL,EAAShL,EAAKgL,OACdQ,EAAUxL,EAAKwL,QAErB,OADAA,EAAQgF,QAAUxQ,EAAKuJ,QAChBwB,EAAaC,EAAQQ,IA8EhCiF,aAAc,SAAUzQ,GACpB,IAAMgL,EAAShL,EAAKgL,OACdQ,EAAUxL,EAAKwL,QAMrB,OALAA,EAAQgF,QAAUxQ,EAAKuJ,QACvBiC,EAAQgC,OAAS,SACbxN,EAAK0Q,wBAA0B1Q,EAAK0Q,kCAAkCvM,QACtEqH,EAAQkF,uBAAyB1Q,EAAK0Q,uBAAuB1D,KAAK,MAE/DjC,EAAaC,EAAQQ,IAiFhCmF,UAAW,SAAU3Q,GAGjB,OAlxGZ,SAAoBgL,EAAQ4F,EAAUC,GASlC,OAAOrG,EARM,CACTc,SAAU,OACVE,QAAS,CACLR,OAAQA,EACRE,SAAU0F,EACVE,YAAaD,KA4wGNF,CAFQ3Q,EAAKgL,OACHhL,EAAKkL,WAyE1BO,aAAc,SAAUzL,GAMpB,OAAOyL,EALS,CACZT,OAAQhL,EAAKgL,OACbE,SAAUlL,EAAKkL,SACfsC,OAAQ,0BAuFhBuD,gBAAiB,SAAU/Q,GAOvB,OAAOyL,EANS,CACZT,OAAQhL,EAAKgL,OACbE,SAAUlL,EAAKkL,SACf8F,cAAehR,EAAKgR,cACpBxD,OAAQ,6BAmDhByD,WAAY,SAAUjR,GAClB,OA/9GZ,SAAqBwL,GACpB,GAAIA,EAAQM,KAAM,CACjB,IAAMC,EAAarB,EAAiBc,EAAQM,KAAKnB,MACjDa,EAAQM,KAAKnB,KAAOoB,EAOlB,OAAOvB,EALM,CACTY,SAAUI,EACVF,SAAU,QACVtJ,KAAM,gBAu9GKiP,CAAWjR,IAgBtBkR,QAAS,SAAUlR,GACf,OAp+GMwL,EAo+GSxL,GAn+GfsL,SAAW,QACnBE,EAAQxJ,KAAO,gBACRwI,EAAkBgB,GAH7B,IAAkBA,GA0nHV2F,cAAe,SAAUnR,GACrB,OA7mHDwK,EAJM,CACTc,SAAU,OACVE,QA+mHyBxL,KAkDzBoR,aAAc,SAAUpR,GACpB,IAAMgL,EAAShL,EAAKgL,OACdQ,EAAUxL,EAAKwL,QAErB,OADAA,EAAQgF,QAAUxQ,EAAKuJ,QA/pHnC,SAAuByB,EAAQQ,GAO3B,OAAOhB,EANM,CACTc,SAAU,SACVtJ,KAAM,SACNgJ,OAAQA,EACRQ,QAASA,IA2pHE4F,CAAapG,EAAQQ,IA8BhC6F,aAAc,SAAUrR,GAGpB,OAtpHZ,SAAuBgL,EAAQE,GAO3B,OAAOV,EANM,CACTc,SAAU,SACVtJ,KAAM,SACNgJ,OAAQA,EACRE,SAAUA,IAipHCmG,CAFQrR,EAAKgL,OACHhL,EAAKkL,WAyC1BoG,aAAc,SAAUtR,GAOpB,OA/qHZ,SAAuBgL,EAAQ8C,EAAMyD,EAAOxD,EAAMC,EAAUwD,GAUxD,OAAOhH,EATM,CACTc,SAAU,SACVN,OAAQA,EACR8C,KAAMA,EACNyD,MAAOA,EACPxD,KAAMA,EACNC,SAAUA,EACVwD,MAAOA,IAuqHIF,CANQtR,EAAKgL,OACPhL,EAAK8N,KACJ9N,EAAKuR,MACNvR,EAAK+N,KACD/N,EAAKgO,SACRhO,EAAKwR,QAiFvB9F,cAAe,SAAU1L,GAErB,OADAA,EAAKwN,OAAS,kBACP9B,EAAc1L,IA0EzByR,mBAAoB,SAAUzR,GAC1B,IAAM0R,EAAU,GAOhB,OANI1R,EACAA,EAAKwN,OAAS,wBAEdkE,EAAQlE,OAAS,uBACjBxN,EAAO0R,GAEJhG,EAAc1L,IAuEzB2R,gBAAiB,SAAU3R,GAEvB,OADAA,EAAKwN,OAAS,mBACP9B,EAAc1L,IAiDzB4R,oBAAqB,WACjB,IAAM5R,EAAO,CACbA,OAAc,yBACd,OAAO0L,EAAc1L,IA0CzB6R,cAAe,SAAU7R,GAErB,OADAA,EAAKwN,OAAS,kBACP9B,EAAc1L,IAgDzB8R,YAAa,SAAU9R,GAInB,OAAO2N,EAAK,CAAEG,KAHD9N,EAAK8N,KAGQC,KAFb/N,EAAK+N,KAEoBC,SADrBhO,EAAKgO,YA2G1B+D,QAAS,SAAU/R,GAEf,OAAO2N,EAAK,CAAEE,GADH7N,EAAK6N,MA0FpBmE,kBAAmB,SAAUhS,GACzB,OAxyIDwK,EAJM,CACTc,SAAU,OACVE,QA0yI4BxL,KAmC5BiS,qBAAsB,SAAUjS,GAM5B,OA90IZ,SAA8BgL,EAAQE,EAAU4F,EAAaZ,EAAiB1E,GAU1E,OAAOhB,EATM,CACTc,SAAU,SACVtJ,KAAM,iBACNgJ,OAAQA,EACRE,SAAUA,EACV4F,YAAaA,EACbZ,gBAAiBA,EACjB1E,QAASA,IAs0IE0G,CALQlS,EAAKgL,OACHhL,EAAKkL,SACFlL,EAAK8Q,YACD9Q,EAAKkQ,gBACblQ,EAAKwL,UAgCzB2G,oBAAqB,SAAUnS,GAK3B,OA/0IZ,SAA8BgL,EAAQE,EAAU4F,EAAaZ,GASzD,OAAO1F,EARM,CACTc,SAAU,SACVtJ,KAAM,iBACNgJ,OAAQA,EACRE,SAAUA,EACV4F,YAAaA,EACbZ,gBAAiBA,IAw0INkC,CAJQpS,EAAKgL,OACHhL,EAAKkL,SACFlL,EAAK8Q,YACD9Q,EAAKkQ,kBA2CjCmC,WAAY,SAAUrS,GAClB,IAAMgL,EAAShL,EAAKgL,OACdE,EAAWlL,EAAKkL,SAChBL,EAAO7K,EAAK6K,KAKlB,OAAOE,EAAaC,EAJhBhL,EAAO,CACPqQ,SAAUxF,EAAKyF,KACflF,SAAUP,EAAKmF,SAEe9E,EAAU,eAuDhDoH,eAAgB,SAAUtS,GAGtB,OA75IDwK,EAJM,CACTc,SA85IqB,WA75IrBtJ,KA85IiB,sBAiFjBuQ,WAAY,SAAUvS,GAIlB,OA9+IZ,SAAqBwS,EAAU1E,EAAMD,GAMjC,OAAOrD,EALM,CACTc,SAAUkH,EACVxQ,KAAM8L,EACND,GAAIA,IA0+IO0E,CAHU,WACJ,cACFvS,EAAK6N,KA6CpB4E,cAAe,SAAUzS,GAKrB,OAthJZ,SAAwBwS,EAAU1E,EAAMD,EAAIrC,GAOxC,OAAOhB,EANM,CACTc,SAAUkH,EACVxQ,KAAM8L,EACND,GAAIA,EACJrC,QAASA,IAihJEiH,CAJU,SACJ,UACFzS,EAAK6N,GACA7N,EAAKwL,UAkDzBkH,eAAgB,SAAUrF,GACtB,OAAO1L,EAAO,WAAY0L,KAMlCsF,GAAI,CAqBAC,OAAQ,SAAU5S,GAQd,OAAOsN,EAPHtN,EAAO,CACPwN,OAAQ,SACRxN,KAAM,CACF6S,MAAO7S,EAAK6S,MACZC,OAAQ9S,EAAK8S,WAQzBC,OAAQ,CAOJC,SAAU,WAMN,OAAO1F,EALM,CACTE,OAAQ,CACJyF,UAAW,eAWvBC,SAAU,WAMN,OAAO5F,EALM,CACTE,OAAQ,CACJyF,UAAW,eAWvBE,OAAQ,WAMJ,OAAO7F,EALM,CACTE,OAAQ,CACJyF,UAAW,cAS3BG,OAAQ,CAeJ9L,KAAM,SAAUtH,GAcZ,OAAOsN,EAVHtN,EAAO,CACPwN,OAAQ,CACJ6F,OAAQ,QAEZrT,KAAM,CACFgL,OAAQhL,EAAKgL,OACbE,SAAUlL,EAAKkL,SACfoI,OAAQtT,EAAKuT,WAmBzBC,KAAM,SAAUxT,GAcZ,OAAOsN,EAVHtN,EAAO,CACPwN,OAAQ,CACJ6F,OAAQ,QAEZrT,KAAM,CACFgL,OAAQhL,EAAKgL,OACbE,SAAUlL,EAAKkL,SACfoI,OAAQtT,EAAKuT,WAkBzBE,OAAQ,SAAUzT,GAcd,OAAOsN,EAVHtN,EAAO,CACPwN,OAAQ,CACJ6F,OAAQ,UAEZrT,KAAM,CACFgL,OAAQhL,EAAKgL,OACbE,SAAUlL,EAAKkL,SACfoI,OAAQtT,EAAKuT,WAiBzBG,SAAU,SAAUC,GAUhB,OAAOrG,EANM,CACTE,OAAQ,CACJ6F,OAAQ,YAEZrT,KAAM2T,MAQlBC,MAAO,CAYHC,MAAO,WASH,OAAOvG,EALM,CACTE,OAAQ,CACJsG,MAAO,YAgBnBC,YAAa,WAST,OAAOzG,EALM,CACTE,OAAQ,CACJsG,MAAO,oBASvBE,OAAQ,CAsBJ1M,KAAM,SAAUtH,GAUZ,OAAOsN,EANHtN,EAAO,CACPwN,OAAQ,CACPyG,OAAQ,QAETjU,KAAMA,OAUtBkU,KAAM,CA2EFC,IAAK,SAAUnU,GACX,OAAO2L,EAAWwC,EAAiBnO,IA2CvCoU,KAAM,SAAUpU,GACZ,OAAO2L,EAAWwC,EAAkBnO,IAwDxCqU,IAAK,SAAUrU,GACX,OAAO2L,EAAWwC,EAAiBnO,IAgDvCsU,MAAO,SAAUtU,GACb,OAAO2L,EAAWwC,EAAmBnO,IAuCzCuU,OAAQ,SAAUvU,GACd,OAAO2L,EAAWwC,EAAoBnO,KAM9CwU,UAAW,CA0FPC,UAAW,SAAUpH,EAAWrN,GAC5B,OAAO2L,EAAW0B,EAAWrN,EAAM,kBAavC0U,UAAW,SAAUrH,GACjB,OAAO1B,EAAW0B,EAAW,GAAI,yBA0BzCsH,WAAY,CAwCRC,OAAQ,SAAUC,EAAWnG,GACzB,IAAMC,EAAU,GACVmG,EAAS,GAYf,OAXAA,EAAO7I,IAAMyC,EAASzC,IACtB6I,EAAOlJ,OAAS8C,EAAS9C,OACzBkJ,EAAOC,WAAarG,EAASqG,WAC7BD,EAAOE,WAAapT,KAAKoG,UAAU0G,EAASsG,YAC5CF,EAAO3I,QAAUvK,KAAKoG,UAAU0G,EAASvC,SACzCwC,EAAQ3O,KAAO8U,EAMRtK,EALM,CACTc,SAAU,iBACV2J,eAAgBJ,EAChB7U,KAAM2O,OA79KpB,IA5BO,mOC7mBrBuG,EAAAC,QAAA,CAAkBC,eAAA,wOCALC,EAAiB,iBAEjBC,EAAW,WAEXC,EAAgB,gBAChBC,EAAc,cACdC,EAAgB,gBAChBC,EAAuB,uBACvBC,EAAqB,qBACrBC,EAAuB,uBCR7B,SAASC,EAASjW,GAErB,OAAO,SAAAkW,GACHA,EAAS,CAAE9T,KAAMsT,EAAU1V,QAASA,SCQtCmW,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA5P,OAAA6P,EAAA,EAAA7P,CAAAnB,KAAA6Q,IACjBE,EAAA5P,OAAA8P,EAAA,EAAA9P,CAAAnB,KAAAmB,OAAA+P,EAAA,EAAA/P,CAAA0P,GAAAnR,KAAAM,KAAM8Q,KACDK,MAAQ,CACTC,MAAO,gBAHML,mFASjB/Q,KAAKqR,oDAIMzU,GAAG,IAAA0U,EAAAtR,KAEduR,IAAMrC,KAAK,kBAAmB,CAACsC,SAAUxR,KAAKmR,MAAMC,QACnDK,KAAK,SAAAC,GACHC,aAAaC,QAAQ,WAAYF,EAAI5W,KAAK+W,OAC1CN,IAAMO,SAAS7K,QAAQ8K,OAAvB,cAAkD,SAASL,EAAI5W,KAAK+W,QAEtEG,MAAM,SAAAC,GAEL,GADAN,aAAaO,WAAW,YACI,MAAxBD,EAAI1W,SAASgH,OAAgB,CAE/B+O,EAAKR,MAAMrX,MADG,0CAId6X,EAAKR,MAAMrX,MAAMwY,EAAI1W,SAAS4W,+CAOpC,OACEC,EAAA5O,EAAA6O,cAAA,mBApCgBC,IAAMC,WCZX1B,EDyDG2B,YAAQ,KApD1B,SAA4B5B,GAC1B,MAAO,CACLnX,MAAO,SAAAgZ,GAAO,OAAI7B,EAASD,EAAS8B,OAkDtBD,CAAkC3B,iCEtD9C6B,SAAa,SAAC5B,GAAD,OACjBsB,EAAA5O,EAAA6O,cAAA,OAAKhI,GAAG,eACN+H,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,yBACTP,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,2BAA2BC,IAAI,gBACtCT,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,iCACTP,EAAA5O,EAAA6O,cAAA,4BAIND,EAAA5O,EAAA6O,cAAA,OAAKhI,GAAG,cACN+H,EAAA5O,EAAA6O,cAAA,OAAKhI,GAAG,aACN+H,EAAA5O,EAAA6O,cAAA,OAAKhI,GAAG,WACN+H,EAAA5O,EAAA6O,cAAA,OAAKhI,GAAG,SACN+H,EAAA5O,EAAA6O,cAAA,OAAKhI,GAAG,gBAAgBuI,IAAI,uBAAuBC,IAAI,WACrDT,EAAA5O,EAAA6O,cAAA,KAAGha,KAAK,QAAO+Z,EAAA5O,EAAA6O,cAAA,KAAGM,MAAM,oCAE5BP,EAAA5O,EAAA6O,cAAA,KAAGhI,GAAG,QAAQyG,EAAMgC,OAAOC,UAAUX,EAAA5O,EAAA6O,cAAA,WACnCD,EAAA5O,EAAA6O,cAAA,QAAMhI,GAAG,SAASyG,EAAMgC,OAAOE,QAEjCZ,EAAA5O,EAAA6O,cAAA,KAAGhI,GAAG,eAAeyG,EAAMgC,OAAOlI,MAAMwH,EAAA5O,EAAA6O,cAAA,WACtCD,EAAA5O,EAAA6O,cAAA,QAAMhI,GAAG,WAAWyG,EAAMgC,OAAOG,cAEnCb,EAAA5O,EAAA6O,cAAA,KAAGhI,GAAG,eAAN,gBAAkCyG,EAAMgC,OAAOI,aAE/Cd,EAAA5O,EAAA6O,cAAA,KAAGhI,GAAG,eAAN,kBAAoCyG,EAAMgC,OAAOK,cACjDf,EAAA5O,EAAA6O,cAAA,KAAGhI,GAAG,eAAN,wBAA0CyG,EAAMgC,OAAOM,oBAEvDhB,EAAA5O,EAAA6O,cAAA,iBAAQD,EAAA5O,EAAA6O,cAAA,yBAAR,gCACAD,EAAA5O,EAAA6O,cAAA,iBAAQD,EAAA5O,EAAA6O,cAAA,0BAAR,iCACAD,EAAA5O,EAAA6O,cAAA,iBAAQD,EAAA5O,EAAA6O,cAAA,yBAAR,0BACAD,EAAA5O,EAAA6O,cAAA,iBAAQD,EAAA5O,EAAA6O,cAAA,0BAAR,yDAGFD,EAAA5O,EAAA6O,cAAA,OAAKhI,GAAG,cACN+H,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,QACTP,EAAA5O,EAAA6O,cAAA,SAAGD,EAAA5O,EAAA6O,cAAA,KAAGM,MAAM,wCAAZ,4BACAP,EAAA5O,EAAA6O,cAAA,KAAGha,KAAK,KAAMgb,kBAAQvC,EAAMgC,OAAOQ,cAAiD,wBAAjCxC,EAAMgC,OAAOQ,aAAa1N,OAE/EwM,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,QACTP,EAAA5O,EAAA6O,cAAA,SAAGD,EAAA5O,EAAA6O,cAAA,KAAGM,MAAM,wCAAZ,4BACAP,EAAA5O,EAAA6O,cAAA,KAAGha,KAAK,KAAI+Z,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,wBAAwBC,IAAI,WAAjD,IAA8D/B,EAAMgC,OAAOS,QAAWnB,EAAA5O,EAAA6O,cAAA,WACtFD,EAAA5O,EAAA6O,cAAA,KAAGha,KAAK,KAAI+Z,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,uBAAuBC,IAAI,WAAY/B,EAAMgC,OAAOU,QAE3EpB,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,QACTP,EAAA5O,EAAA6O,cAAA,SAAGD,EAAA5O,EAAA6O,cAAA,KAAGM,MAAM,wCAAZ,4BACAP,EAAA5O,EAAA6O,cAAA,KAAGha,KAAK,KAAI+Z,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,uBAAuBC,IAAI,WAAY/B,EAAMgC,OAAOW,OAAUrB,EAAA5O,EAAA6O,cAAA,WACnFD,EAAA5O,EAAA6O,cAAA,KAAGha,KAAK,KAAI+Z,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,0BAA0BC,IAAI,WAAY/B,EAAMgC,OAAOY,KAA5E,KAAoF5C,EAAMgC,OAAOa,cAkB7GjB,EAAWkB,aAAe,GAEXlB,gBCjEf,IAOemB,EAPI,SAAC/C,GAClB,ICoHgCpW,EDpH1BkW,EAAWkD,cAEbhZ,EAAOiZ,kBAAQjD,EAAMkD,MAAO,CAAC,gBAAiB,CAAC,QACnDpD,GCiHgClW,EDjHLI,ECkHlB,SAAA8V,GACHA,EAAS,CAAE9T,KAAMwT,EAAa5V,QAASA,QChHhCuZ,EAPM,SAACnD,GACpB,ID2HkCpW,EC3H5BkW,EAAWkD,cAEbhZ,EAAOiZ,kBAAQjD,EAAMoD,QAAS,CAAC,gBAAiB,CAAC,QACrDtD,GDwHkClW,ECxHLI,EDyHpB,SAAA8V,GACHA,EAAS,CAAE9T,KAAMuT,EAAe3V,QAASA,QEzFlCyZ,MAnCf,SAA4BrD,GACxB,IAAMsD,EAAWC,YAAY,SAAAC,GAAK,OAAIA,EAAMC,cAEtC3D,EAAWkD,cACXU,EAAkBC,eAAKL,GAGzB7R,EAAS,GAOb,GALwB,KAApBiS,IACFjS,EAAS,SAIqB,KAA5BiS,EAAgB/B,SAA8C,OAA5B+B,EAAgB/B,QAAkB,CACtE,IAAM3X,EAAO,CAACsQ,KAAQ0F,EAAMrI,KAAMiM,yBAA4B5D,EAAMrI,KAAMkM,aAAA,GAAAC,OAAmBJ,EAAgB/B,SAAWoC,2BAAA,GAAAD,OAAiCrS,IACzJhL,IAAK8N,IAAIoF,IAAIY,aAAa,CAACvF,OAAQ,uBAAwBQ,QAASxL,IACjE2W,KAAM,SAAAqD,GACL,IAAMzK,EAAKyK,EAAYha,KAAK,GAAGia,QAAQ1K,GAEvC9S,IAAK8N,IAAIoF,IAAIgB,UAAU,CAAC3F,OAAQ,uBAAwBE,SAAUqE,IAC/DoH,KAAM,SAAAlW,GF2GZ,IAA6Bb,EE1GtBkW,GF0GsBlW,EE1GOa,EAAST,KF2GzC,SAAA8V,GACHA,EAAS,CAAE9T,KAAMyT,EAAe7V,QAASA,WExGxCsX,MAAM,SAACpV,GAAD,OAAOxD,QAAQ4b,IAAIpY,KAGhC,OACEwV,EAAA5O,EAAA6O,cAAA,aCVW4C,EApBS,WACtB,IAAMb,EAAWC,YAAY,SAAAC,GAAK,OAAIA,EAAMY,cACtCtE,EAAWkD,cAEjB,IAAKT,kBAASe,GAAW,CACvB,IAAMe,EAAkBV,eAAKL,GAEzBe,GAAuC,KAApBA,GAA8C,OAApBA,GAC7C5d,IAAK8N,IAAIoF,IAAI0B,aAAa,CAACrG,OAAQ,uBAAwBE,SAAQ,GAAA4O,OAAKO,KACrE1D,KAAM,SAAAlW,GACL,IHiJeb,EGhJA,YADAa,EAAST,KAAK,GAAGyH,QAE9BqO,GH+IalW,EG/IOa,EAAST,KAAK,GAAG2X,QHgJxC,SAAA7B,GACHA,EAAS,CAAC9T,KAAMsT,EAAU1V,2BI7HnB0a,SAjCS,WACtB,IAAMC,EAAmBhB,YAAY,SAAAC,GAAK,OAAIA,EAAMe,mBAC9CzE,EAAWkD,cAEjB,OACE1B,EAAA5O,EAAA6O,cAAA,WACGgD,EAAiBC,IAAI,SAAAC,GAAG,OACD,OAArBA,EAAIZ,cAA8C,KAArBY,EAAIZ,aAEhCvC,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,YACPP,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,oBAAoB4C,EAAIZ,aAApC,KACAvC,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,cAAc6C,QAAS,kBAAM5E,GJkIlBlW,EIlIgD6a,EAAIlL,GJmI9E,SAAAuG,GACHA,EAAS,CAAE9T,KAAM2T,EAAoB/V,eAFtC,IAA8BA,IIlI0D0X,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,gCAAgCC,IAAI,YAE3HQ,kBAAQkC,EAAIV,4BAEXzC,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,kBAAiBP,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,iCAAiCC,IAAI,YAI3ET,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,eAAcP,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,qBAAqBC,IAAI,YAE9DT,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,4BAA4B4C,EAAIpC,eAMhD,QCIGsC,SA/BW,WACxB,IAAMC,EAAqBrB,YAAY,SAAAC,GAAK,OAAIA,EAAMoB,qBAChD9E,EAAWkD,cAEjB,OACE1B,EAAA5O,EAAA6O,cAAA,WACGqD,EAAmBJ,IAAI,SAAAC,GAAG,OACH,OAArBA,EAAIZ,cAA8C,KAArBY,EAAIZ,aAEhCvC,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,UACPP,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,kBAAkB4C,EAAIZ,aAAlC,KACAvC,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,cAAc6C,QAAS,kBAAM5E,GL4HhBlW,EK5HgD6a,EAAIlL,GL6HhF,SAAAuG,GACHA,EAAS,CAAE9T,KAAM0T,EAAsB9V,eAFxC,IAAgCA,IK5H0D0X,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,gCAAgCC,IAAI,YAC7HQ,kBAAQkC,EAAIV,4BAEXzC,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,kBAAiBP,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,iCAAiCC,IAAI,YAI3ET,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,eAAcP,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,qBAAqBC,IAAI,YAE9DT,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,4BAA4B4C,EAAIpC,eAKhD,QCOGwC,EAhCS,SAAC7E,GACvB,IAAM8E,EAAqBvB,YAAY,SAAAC,GAAK,OAAIA,EAAMsB,qBAChDhF,EAAWkD,cAEjB,OACE1B,EAAA5O,EAAA6O,cAAA,WACGuD,EAAmBN,IAAI,SAAAC,GAAG,OACH,OAArBA,EAAIZ,cAA8C,KAArBY,EAAIZ,aAEhCvC,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,UACPP,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,kBAAkB4C,EAAIZ,aAAlC,KACAvC,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,cAAc6C,QAAS,kBAAM5E,GNwIhBlW,EMxIgD6a,EAAIlL,GNyIhF,SAAAuG,GACHA,EAAS,CAAE9T,KAAM4T,EAAsBhW,eAFxC,IAAgCA,IMxI0D0X,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,gCAAgCC,IAAI,YAC7HQ,kBAAQkC,EAAIV,4BAEXzC,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,kBAAiBP,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,iCAAiCC,IAAI,YAI3ET,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,kBAAiBP,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,qBAAqBC,IAAI,YAEjET,EAAA5O,EAAA6O,cAAA,QAAMM,MAAM,4BAA4B4C,EAAIpC,eAMhD,OCvBC0C,eAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA1U,OAAA6P,EAAA,EAAA7P,CAAAnB,KAAA6V,GAAA1U,OAAA8P,EAAA,EAAA9P,CAAAnB,KAAAmB,OAAA+P,EAAA,EAAA/P,CAAA0U,GAAAvc,MAAA0G,KAAAzG,YAAA,OAAA4H,OAAA4U,EAAA,EAAA5U,CAAA0U,EAAAC,GAAA3U,OAAA6U,EAAA,EAAA7U,CAAA0U,EAAA,EAAArU,IAAA,SAAAyU,MAAA,WAEI,OACE7D,EAAA5O,EAAA6O,cAAA,WACGrS,KAAK8Q,MAAMoF,UAAUZ,IAAI,SAAApG,GAAI,OAC5BkD,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,qEAGTP,EAAA5O,EAAA6O,cAAA,WAAOnD,WARnB2G,EAAA,CAAoCvD,IAAMC,YAmB3B4D,EADG3D,YAtBM,SAAArB,GACtB,MAAO,CAAE+E,UAAW/E,EAAM+E,YAqBV1D,CAAyBqD,WC+D5BO,SArFG,SAACtF,GAEjB,IAAMF,EAAWkD,cAFUuC,EAGHC,mBAAS,CACPC,QAASzF,EAAMyF,QACfC,MAAO,GACPC,SAAU,QACVrQ,SAAU,YACVsQ,aAAc,KARbC,EAAAxV,OAAAyV,EAAA,EAAAzV,CAAAkV,EAAA,GAGpBvb,EAHoB6b,EAAA,GAGdE,EAHcF,EAAA,GAWrBG,EAAoB,SAAC5R,GACzB2R,EAAQ1V,OAAA4V,EAAA,EAAA5V,CAAA,GACHrG,EADEqG,OAAA6V,EAAA,EAAA7V,CAAA,GAEJ+D,EAAMkJ,OAAOxI,KAAQV,EAAMkJ,OAAO6H,UAgBvC,OACE7D,EAAA5O,EAAA6O,cAAA,WACGvB,EAAMyF,QACLnE,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,0DACPP,EAAA5O,EAAA6O,cAAA,2BACAD,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,YACTP,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,uBACTP,EAAA5O,EAAA6O,cAAA,SAAO4E,IAAI,SAAX,SACA7E,EAAA5O,EAAA6O,cAAA,SACIvV,KAAK,OACL6V,MAAM,eACN/M,KAAK,QACLsR,YAAY,iBACZC,SAAUL,KAEhB1E,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,uBACTP,EAAA5O,EAAA6O,cAAA,SAAO4E,IAAI,YAAX,YACA7E,EAAA5O,EAAA6O,cAAA,UAAQzM,KAAK,WAAW+M,MAAM,eAAewE,SAAUL,GACrD1E,EAAA5O,EAAA6O,cAAA,UAAQ+E,UAAQ,GAAhB,aACAhF,EAAA5O,EAAA6O,cAAA,UAAQ4D,MAAM,SAAd,QAGJ7D,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,uBACTP,EAAA5O,EAAA6O,cAAA,SAAO4E,IAAI,YAAX,YACA7E,EAAA5O,EAAA6O,cAAA,UAAQzM,KAAK,WAAW+M,MAAM,eAAewE,SAAUL,GACrD1E,EAAA5O,EAAA6O,cAAA,UAAQ+E,UAAQ,GAAhB,aACAhF,EAAA5O,EAAA6O,cAAA,UAAQ4D,MAAM,iBAAd,iBACA7D,EAAA5O,EAAA6O,cAAA,UAAQ4D,MAAM,aAAd,aACA7D,EAAA5O,EAAA6O,cAAA,UAAQ4D,MAAM,OAAd,SAIJ7D,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,uBACTP,EAAA5O,EAAA6O,cAAA,SAAO4E,IAAI,gBAAX,iBACA7E,EAAA5O,EAAA6O,cAAA,YACMM,MAAM,eACNuE,YAAY,sBACZtR,KAAK,eACLuR,SAAUL,MAKpB1E,EAAA5O,EAAA6O,cAAA,UAAQvV,KAAK,SAAS6V,MAAM,kBAAkB6C,QAvDnC,WACnB,IRyByB9a,EQzBnB8N,EAAS,CACb6O,cAAevc,EAAK0b,MACpBC,SAAU3b,EAAK2b,SACfrQ,SAAUtL,EAAKsL,SACfkR,cAAexc,EAAK4b,cAGtB9F,GRkByBlW,EQlBHyG,OAAA4V,EAAA,EAAA5V,CAAA,GAAKqH,GRmBpB,SAAAoI,GACH,IAAMiB,EAAQF,aAAa4F,QAAQ,YAC7B9Y,EAAU,CACZiI,OAAM,OACNO,QAAS,CACLuQ,OAAU,mBACVC,eAAgB,mBAChBC,cAAA,WAAA9C,OAA4B/C,IAEhC3K,KAAMxK,KAAKoG,UAAUpI,IAGzB,OAAOid,MAAM,gBAAiBlZ,GACzBgT,KAAK,SAAAC,GAAG,OAAIA,EAAIkG,SAChBnG,KAAK,SAAAmG,GACF,IAAIrc,EAAQ4F,OAAA4V,EAAA,EAAA5V,CAAA,GAAOyW,GACdvE,kBAAQ9X,EAAS9B,OAEXoe,mBAAStc,EAASuc,SACzBlH,EAAS,CAAC9T,KAAMsT,EAAU1V,QAASa,EAASuc,OAAOrF,UAFnD7B,EAAS,CAAC9T,KAAMsT,EAAU1V,QAASa,EAAS9B,MAAMgZ,YAQzDT,MAAM,SAAAC,GACHrB,EAAS,CAAC9T,KAAMsT,EAAU1V,QAAS,kBACnCtB,QAAQ4b,IAAI,eAAgB/C,UQChC,kBAKNG,EAAA5O,EAAA6O,cAAA,eC9EA0F,qBACJ,SAAAA,EAAYjH,GAAO,IAAAC,EAAA,OAAA5P,OAAA6P,EAAA,EAAA7P,CAAAnB,KAAA+X,IACjBhH,EAAA5P,OAAA8P,EAAA,EAAA9P,CAAAnB,KAAAmB,OAAA+P,EAAA,EAAA/P,CAAA4W,GAAArY,KAAAM,KAAM8Q,KACDK,MAAQ,CACXoF,QAASxF,EAAKD,MAAMyF,SAHLxF,wEAejB,OACEqB,EAAA5O,EAAA6O,cAAA,WACCrS,KAAK8Q,MAAMyF,QACVnE,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,0DACPP,EAAA5O,EAAA6O,cAAA,4BACAD,EAAA5O,EAAA6O,cAAA,+BAKND,EAAA5O,EAAA6O,cAAA,oBA1BuBC,IAAMC,YAyCnCwF,EAAenE,aAAe,GAEfmE,QC3CTC,0NAGJC,UAAY,SAACrb,GACX,IAAMsb,EAAOtb,EAAEwR,OAAO+J,QAAQC,SAC9BrH,EAAKD,MAAMuH,QAAQH,4EAKb,IAAA5G,EAAAtR,KACR,OACFoS,EAAA5O,EAAA6O,cAAA,OAAKiG,cAAY,mBAEXtY,KAAK8Q,MAAMyH,UAAUjD,IAAI,SAAApG,GAAI,OAC3BkD,EAAA5O,EAAA6O,cAAA,KAAGM,MAAM,cAAc6C,QAASlE,EAAK2G,UAAWO,gBAAetJ,GAAOA,aAfhDoD,IAAMC,YA0BpCyF,EAAgBpE,aAAe,GAEhBoE,YCpBT9H,cACJ,SAAAA,EAAYY,GAAO,IAAAC,EAAA,OAAA5P,OAAA6P,EAAA,EAAA7P,CAAAnB,KAAAkQ,IACjBa,EAAA5P,OAAA8P,EAAA,EAAA9P,CAAAnB,KAAAmB,OAAA+P,EAAA,EAAA/P,CAAA+O,GAAAxQ,KAAAM,KAAM8Q,KAYRmH,UAAY,SAACC,GACXnH,EAAKD,MAAM2H,YAAYP,IAdNnH,EAkBnBsH,QAAU,SAACD,GACTrH,EAAKkH,UAAUG,IAjBfrH,EAAK2H,GAAK,GAFO3H,mFAQjB/Q,KAAK0Y,GAAK,CAAC,YAAa,YAAa,YAAa,8CAelD,OACEtG,EAAA5O,EAAA6O,cAAA,WACGrS,KAAK8Q,MAAMyF,QACVnE,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,0DACPP,EAAA5O,EAAA6O,cAAA,4BACAD,EAAA5O,EAAA6O,cAAA,WACED,EAAA5O,EAAA6O,cAACsG,EAAD,CAAiBN,QAASrY,KAAKqY,QAASE,UAAWvY,KAAK0Y,OAKhEtG,EAAA5O,EAAA6O,cAAA,oBAnCqBC,IAAMC,WAgDpB4D,EADG3D,YAAQ,GArD1B,SAA4B5B,GAC1B,MAAO,CACLgI,aAAc,SAAAnG,GAAO,OAAI7B,EX4ElB,SAAAA,GACH,IAAMiB,EAAQF,aAAa4F,QAAQ,YAC7B9Y,EAAU,CACZiI,OAAM,MACNO,QAAS,CACLuQ,OAAU,mBACVC,eAAgB,mBAChBC,cAAA,WAAA9C,OAA4B/C,KAKpC,OAAO8F,MAAM,gBAAiBlZ,GACzBgT,KAAK,SAAAC,GAAG,OAAIA,EAAIkG,SAChBnG,KAAK,SAAAmG,GACF,IAAIrc,EAAQ4F,OAAA4V,EAAA,EAAA5V,CAAA,GAAOyW,GACnBxe,QAAQ4b,IAAI,yBAA0BzZ,GACjC8X,kBAAQ9X,EAAS9B,OAIXoe,mBAAStc,EAASuc,SACzBlH,EAAS,CAAC9T,KAAMsT,EAAU1V,QAASa,EAASuc,OAAOrF,UAJnD7B,EAAS,CAAC9T,KAAMsT,EAAU1V,QAASa,EAAS9B,MAAMgZ,YAUzDT,MAAM,SAAAC,GACHrB,EAAS,CAAC9T,KAAMsT,EAAU1V,QAAS,gFWtDjC8X,CAAgCtC,GCtClD,IAIM2I,cACJ,SAAAA,EAAY/H,GAAO,IAAAC,EAAA,OAAA5P,OAAA6P,EAAA,EAAA7P,CAAAnB,KAAA6Y,IAEjB9H,EAAA5P,OAAA8P,EAAA,EAAA9P,CAAAnB,KAAAmB,OAAA+P,EAAA,EAAA/P,CAAA0X,GAAAnZ,KAAAM,KAAM8Q,KAYRK,MAAQ,CACN2H,eAAgB,IAfC/H,EA4EnBgI,eAAiB,SAACC,GAChBjI,EAAKkI,SAAS,CAACH,eAAgBE,IAC/BjI,EAAKkI,SAAS,CACZxG,QAAO,aAAAmC,OAAeoE,GACtBE,kBAAkB,KA7EpBnI,EAAKI,MAAQ,CAAEsB,QAAS,GACR0G,SAAU,GACVC,sBAAsB,EACtBC,uBAAuB,EACvBH,kBAAkB,GAClCnI,EAAKuI,cAAgBvI,EAAKuI,cAAcpb,KAAnBiD,OAAAoY,EAAA,EAAApY,QAAAoY,EAAA,EAAApY,CAAA4P,KACrBA,EAAKM,aAAeN,EAAKM,aAAanT,KAAlBiD,OAAAoY,EAAA,EAAApY,QAAAoY,EAAA,EAAApY,CAAA4P,KACpBA,EAAKyI,OAAS,GACdzI,EAAK0I,SAAWthB,OAAOshB,SAXN1I,6EAkBL7L,GAKZ,OAJAlF,KAAKiZ,SAAS,CAAExG,QAASvN,EAAMkJ,OAAO6H,QACtCjW,KAAKiZ,SAAS,CAACG,sBAAsB,IACzBlU,EAAMkJ,OAAO6H,OAGvB,IAAK,WACHjW,KAAKiZ,SAAS,CAACG,sBAAsB,IACrC,MACF,IAAK,YACHpZ,KAAKiZ,SAAS,CAACI,uBAAuB,IACtC,MACF,IAAK,WACHrZ,KAAKiZ,SAAS,CAACC,kBAAkB,IACjC,MACF,QACElZ,KAAKiZ,SAAS,CACFG,sBAAsB,EACtBC,uBAAuB,EACvBH,kBAAkB,0CASvBhU,GAEX,GADAA,EAAMwU,iBACFrG,kBAAQrT,KAAK8Q,MAAM0I,QAErB,MADAxZ,KAAK8Q,MAAMH,SAAU,sCACf,IAAInX,EAAM,uBAGS,KAAvBwG,KAAKmR,MAAMsB,SACTzS,KAAK2Z,kBACP3Z,KAAK8Q,MAAM8I,cAAc,CAAEJ,OAAQxZ,KAAK8Q,MAAM0I,OAAQ/G,QAASzS,KAAKmR,MAAMsB,UAC1EzS,KAAKiZ,SAAS,CACZxG,QAAS,8CASf,OAAqC,IADrBzS,KAAKmR,MAAMsB,QACfla,QAAQ,eAElByH,KAAK8Q,MAAMH,SAAU,2CACd,oCAgBT,OACEyB,EAAA5O,EAAA6O,cAAA,OAAKhI,GAAG,WAAWsI,MAAM,QACvBP,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,eACTP,EAAA5O,EAAA6O,cAACwH,EAAD,CAAWtD,QAASvW,KAAKmR,MAAMiI,uBAC/BhH,EAAA5O,EAAA6O,cAACyH,EAAD,CAAgBvD,QAASvW,KAAKmR,MAAMkI,wBACpCjH,EAAA5O,EAAA6O,cAAC0H,EAAD,CAAgBtB,YAAazY,KAAK+Y,eAAgBxC,QAASvW,KAAKmR,MAAM+H,mBACtE9G,EAAA5O,EAAA6O,cAAC2H,EAAD,MACA5H,EAAA5O,EAAA6O,cAAC4H,EAAD,MACA7H,EAAA5O,EAAA6O,cAAC6H,EAAD,MACA9H,EAAA5O,EAAA6O,cAAC8H,EAAD,OAKF/H,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,oBACTP,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,2BACTP,EAAA5O,EAAA6O,cAAA,SACEvV,KAAK,OACL8I,KAAK,GACLyE,GAAG,UACH6M,YAAY,iBACZjB,MAAOjW,KAAKmR,MAAMsB,QAClB0E,SAAUnX,KAAKsZ,iBAGnBlH,EAAA5O,EAAA6O,cAAA,OAAKM,MAAM,0BACTP,EAAA5O,EAAA6O,cAAA,OAAKO,IAAI,6BAA6BC,IAAI,OAAO2C,QAASxV,KAAKqR,yBAhH9CiB,IAAMC,WAyHpB4D,EADG3D,YA5HM,SAAArB,GACtB,MAAO,CAAEoD,YAAapD,EAAMoD,YAAac,iBAAkBlE,EAAMkE,iBAAkBK,mBAAoBvE,EAAMuE,qBAR/G,SAA4B9E,GAC1B,MAAO,CACLgJ,cAAe,SAAAnH,GAAO,OAAI7B,GZJAwJ,EYIuB3H,EZH1C,SAAA7B,GACH,IAAMiB,EAAQF,aAAa4F,QAAQ,YAC7B9Y,EAAU,CACZiI,OAAM,OACNO,QAAS,CACLuQ,OAAU,mBACVC,eAAgB,mBAChBC,cAAA,WAAA9C,OAA4B/C,IAEhC3K,KAAMxK,KAAKoG,UAAUsX,IAGzB,OAAOzC,MAAM,eAAgBlZ,GACxBgT,KAAK,SAAAC,GAAG,OAAIA,EAAIkG,SAChBnG,KAAK,SAAAmG,GACF,IAAIrc,EAAQ4F,OAAA4V,EAAA,EAAA5V,CAAA,GAAOyW,GACdvE,kBAAQ9X,EAAS9B,OAIXoe,mBAAStc,EAASuc,QACzBlH,EAAS,CAAC9T,KAAMsT,EAAU1V,QAASa,EAASuc,OAAOrF,UAEnD7B,EAAS,CAAE9T,KAAMqT,EAAgBzV,QAAS0f,KAN1CxJ,EAAS,CAAC9T,KAAMsT,EAAU1V,QAASa,EAAS9B,MAAMgZ,UAClD2H,EAAY3gB,MAAQ8B,EAAS9B,MAAMgZ,QACnC7B,EAAS,CAAE9T,KAAMqT,EAAgBzV,QAAS0f,OAQjDpI,MAAM,SAAAC,GACHrB,EAAS,CAAC9T,KAAMsT,EAAU1V,QAAS,kBACnCtB,QAAQ4b,IAAI,eAAgB/C,QA9BrC,IAAuBmI,GYK1BzJ,SAAU,SAAA8B,GAAO,OAAI7B,EAASD,EAAS8B,OAgIzBD,CAA6CqG,0xMCjChDwB,OAtGf,WAAe,IAAAC,EAEahI,IAAMgE,SAAS,IAF5BiE,EAAApZ,OAAAyV,EAAA,EAAAzV,CAAAmZ,EAAA,GAENE,EAFMD,EAAA,GAEGE,EAFHF,EAAA,GAAAG,EAG2BpI,IAAMgE,SAAS,IAH1CqE,EAAAxZ,OAAAyV,EAAA,EAAAzV,CAAAuZ,EAAA,GAGNE,EAHMD,EAAA,GAGUE,EAHVF,EAAA,GAAAG,EAI+BxI,IAAMgE,SAAS,IAJ9CyE,EAAA5Z,OAAAyV,EAAA,EAAAzV,CAAA2Z,EAAA,GAINE,EAJMD,EAAA,GAIYE,EAJZF,EAAA,GAAAG,EAKyB5I,IAAMgE,SAAS,IALxC6E,EAAAha,OAAAyV,EAAA,EAAAzV,CAAA+Z,EAAA,GAKOE,GALPD,EAAA,GAAAA,EAAA,IAAAE,EAMe/I,IAAMgE,SAAS,IAN9BgF,EAAAna,OAAAyV,EAAA,EAAAzV,CAAAka,EAAA,GAMNE,EANMD,EAAA,GAMEE,EANFF,EAAA,GAAAG,EAOenJ,IAAMgE,SAAS,IAP9BoF,EAAAva,OAAAyV,EAAA,EAAAzV,CAAAsa,EAAA,GAONE,EAPMD,EAAA,GAOEE,EAPFF,EAAA,GAAAG,EAQevJ,IAAMgE,SAAS,IAR9BwF,EAAA3a,OAAAyV,EAAA,EAAAzV,CAAA0a,EAAA,GAQNrC,EARMsC,EAAA,GAQEC,EARFD,EAAA,GAAAE,EAWmB1J,IAAMgE,UAAS,GAXlC2F,EAAA9a,OAAAyV,EAAA,EAAAzV,CAAA6a,EAAA,GAWNE,EAXMD,EAAA,GAWIE,EAXJF,EAAA,GAAAG,EAYa9J,IAAMgE,SAAS,MAZ5B+F,EAAAlb,OAAAyV,EAAA,EAAAzV,CAAAib,EAAA,GAYN3iB,EAZM4iB,EAAA,GA+Ff,OA/FeA,EAAA,GAcbC,oBAAU,WAAM,SAAAC,IAAA,OAAAA,EAAApb,OAAAqb,EAAA,EAAArb,CAAAsb,IAAAC,KAEd,SAAAC,IAAA,OAAAF,IAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUxlB,IAAKyN,YAAYC,GAAG,WAAW,SAASnK,GAE5C,IAAI6gB,EAAS7gB,EAAKgL,OACd4F,EAAW5Q,EAAKkiB,SACpBpB,EAAUD,GACVH,EAAU9P,EAASuR,YAEnB1lB,IAAK8N,IAAIoF,IAAIgB,UAAU,CAAC3F,OAAO6V,EAAO3V,SAAS0F,IAC5C+F,KAAK,SAAC3W,GAELihB,EAAUjhB,EAAKA,KAAK,GAAV,QACV2f,EAAO3f,EAAKA,KAAK,MAGlB2W,KAAK,WAEJla,IAAK8N,IAAIoF,IAAI2B,aAAa,CAACtG,OAAQ,uBAAwBoX,WAAW,MAAOtU,KAAK,WAAWyD,MAAK,gBAAAuI,OAAiBlJ,EAAjB,OAC/F+F,KAAM,SAAAqD,GACLsG,EAAetG,EAAYha,MAE3B,IAAIqiB,EAAaC,iBAAOtI,EAAYha,KAAM,CAACuiB,uBAAA,GAAAzI,OAA6BlJ,KACpE4R,EAAeF,iBAAOtI,EAAYha,KAAM,CAAC4Z,yBAAA,GAAAE,OAA+BlJ,KAE5EmP,EAAcsC,GACdlC,EAAgBqC,GAChBnB,GAAY,OAIjBnK,MAAM,SAACpV,GAAD,OAAOxD,QAAQ4b,IAAIpY,OAhClC,cAAAigB,EAAAE,KAAA,EAoCmBxlB,IAAKyN,YAAYG,OApCpC,cAAA0X,EAAAU,OAAA,SAAAV,EAAAW,MAAA,OAAAX,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAuCIzjB,QAAQ4b,IAAR6H,EAAAY,IAvCJ,yBAAAZ,EAAAa,SAAAf,EAAA,kBAFcrjB,MAAA0G,KAAAzG,YAAA,WAAAgjB,EAAAjjB,MAAA0G,KAAAzG,WA6Cd4L,IAED,IAmCDiN,EAAA5O,EAAA6O,cAAA,WA/BI5Y,EAGE2Y,EAAA5O,EAAA6O,cAAA,oBAGM6J,EAWN9J,EAAA5O,EAAA6O,cAAA,WACED,EAAA5O,EAAA6O,cAACsL,EAAD,CAAOnE,OAAQA,EAAQmC,OAAQA,IAC/BvJ,EAAA5O,EAAA6O,cAACuL,EAAD,CAAY9K,OAAQ0H,IACpBpI,EAAA5O,EAAA6O,cAACwL,EAAD,CAAY7J,MAAO4G,IACnBxI,EAAA5O,EAAA6O,cAACyL,EAAD,CAAc5J,QAAS8G,IACvB5I,EAAA5O,EAAA6O,cAAC0L,EAAD,CAAoBtV,KAAM8S,IAC1BnJ,EAAA5O,EAAA6O,cAAC2L,EAAD,OAdF5L,EAAA5O,EAAA6O,cAAA,OAAK4L,UAAU,cACf7L,EAAA5O,EAAA6O,cAAA,OAAK4L,UAAU,aAAf,QCvEO5D,GAVH,WAEV,OACEjI,EAAA5O,EAAA6O,cAAA,OAAK4L,UAAU,OACb7L,EAAA5O,EAAA6O,cAAC6L,GAAD,MACA9L,EAAA5O,EAAA6O,cAAC8L,EAAD,MACA/L,EAAA5O,EAAA6O,cAAA,cCCS+L,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxClnB,EAAAwF,EAAA,GAAA6U,KAAAra,EAAA8G,KAAA,UAAqBuT,KAAK,SAAA8M,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,eCGRQ,GAAe,CACnBC,SAAU,GACVvK,YAAa,CAAC,CAACiF,OAAQ,GAAI/G,QAAS,KACpCyD,UAAW,GACXb,iBAAkB,CAAC,CAAC5C,QAAS,KAC7BiD,mBAAoB,CAAC,CAACjD,QAAS,KAC/BmD,mBAAoB,GACpBV,YAAa,IAqEA6J,OAjEf,WAAmD,IAA9B5N,EAA8B5X,UAAAiG,OAAA,QAAA9D,IAAAnC,UAAA,GAAAA,UAAA,GAAtBslB,GAAcvW,EAAQ/O,UAAAiG,OAAA,EAAAjG,UAAA,QAAAmC,EACjD,OAAO4M,EAAOxL,MACZ,KAAKqT,EACH,OAAOhP,OAAO6d,OAAO,GAAI7N,EAAO,CAC9BoD,YAAapD,EAAMoD,YAAYK,OAAOtM,EAAO5N,WAIjD,KAAK0V,EACH,OAAOjP,OAAO6d,OAAO,GAAI7N,EAAO,CAC9B+E,UAAW/E,EAAM+E,UAAUtB,OAAOtM,EAAO5N,WAI7C,KAAK4V,EACH,OAAOnP,OAAO6d,OAAO,GAAI7N,EAAO,CAC9BkE,iBAAkBlE,EAAMkE,iBAAiBT,OAAOtM,EAAO5N,WAI3D,KAAK2V,EACH,OAAOlP,OAAO6d,OAAO,GAAI7N,EAAO,CAC9BuE,mBAAoBvE,EAAMuE,mBAAmBd,OAAOtM,EAAO5N,WAI/D,KAAK6V,EACH,OAAOpP,OAAO6d,OAAO,GAAI7N,EAAO,CAC9ByE,mBAAoBzE,EAAMyE,mBAAmBhB,OAAOtM,EAAO5N,WAI/D,KAAK8V,EACH,IAAMyO,EAAO3W,EAAO5N,QACpB,OAAOyG,OAAA4V,EAAA,EAAA5V,CAAA,GACIgQ,EADX,CAEQuE,mBAAoBvE,EAAMuE,mBAAmB0H,OAAO,SAAA7H,GAAG,OAAIA,EAAIlL,KAAO4U,IACtE/J,YAAa/D,EAAM+D,YAAYN,OAAOqK,KAI9C,KAAKxO,EACH,IAAMwO,EAAO3W,EAAO5N,QACpB,OAAOyG,OAAA4V,EAAA,EAAA5V,CAAA,GACIgQ,EADX,CAEQkE,iBAAkBlE,EAAMkE,iBAAiB+H,OAAO,SAAA7H,GAAG,OAAIA,EAAIlL,KAAO4U,IAClE/J,YAAa/D,EAAM+D,YAAYN,OAAOqK,KAI9C,KAAKvO,EACH,IAAMuO,EAAO3W,EAAO5N,QACpB,OAAOyG,OAAA4V,EAAA,EAAA5V,CAAA,GACIgQ,EADX,CAEQyE,mBAAoBzE,EAAMyE,mBAAmBwH,OAAO,SAAA7H,GAAG,OAAIA,EAAIlL,KAAO4U,IACtE/J,YAAa/D,EAAM+D,YAAYN,OAAOqK,KAIpD,QACE,OAAO9N,aC7DE+N,ICfTC,GAAiBhnB,OAAOinB,sCAAwCC,KASvD/K,GAPDgL,aACVP,GACAI,GAAeI,aAAgBC,QCAtBC,IAASC,WAAW/b,SAASgc,eAAe,SACpDC,OACHxN,EAAA5O,EAAA6O,cAACwN,EAAA,EAAD,CAAUvL,MAAOA,IACflC,EAAA5O,EAAA6O,cAACyN,GAAD,QAOJ1B","file":"static/js/main.6cbacd0b.chunk.js","sourcesContent":["/* eslint-disable */\r\nimport * as $ from 'jquery'\r\n\r\nconst ZSDKUtil = (function (ZSDKUtil) {\r\n    const QueryParams = GetQueryParams()\r\n\r\n    // Global Logger instance which will be acquired and shared by other modules.\r\n    let GlobalLogger\r\n\r\n    // minimal Logging utility.\r\n    function ZLogger (mode) {}\r\n    ZLogger.prototype.Info = function () {\r\n        if (ZSDKUtil.isDevMode() || ZSDKUtil.isLogEnabled()) {\r\n            window.console.info.apply(null, arguments)\r\n        }\r\n    }\r\n    ZLogger.prototype.Error = function () {\r\n        if (ZSDKUtil.isDevMode() || ZSDKUtil.isLogEnabled()) {\r\n            window.console.error.apply(null, arguments)\r\n        }\r\n    }\r\n    function getLogger () {\r\n        if (!GlobalLogger || !(GlobalLogger instanceof ZLogger)) {\r\n            GlobalLogger = new ZLogger() // Logging instance for Core Framework\r\n        }\r\n\r\n        return GlobalLogger\r\n    }\r\n\r\n    function GetQueryParams (URL) {\r\n    // TODO: Handle hash case too.\r\n        const qParams = {}\r\n        URL = URL || window.location.href\r\n        const splittedParams = URL.substr(URL.indexOf('?') + 1).split('&')\r\n        splittedParams.forEach(function (ele, idx) {\r\n            const miniSplit = ele.split('=')\r\n            qParams[miniSplit[0]] = miniSplit[1]\r\n        })\r\n\r\n        // decoding serviceOrigin URL\r\n        if (qParams.hasOwnProperty('serviceOrigin')) {\r\n            qParams.serviceOrigin = decodeURIComponent(qParams.serviceOrigin)\r\n        }\r\n\r\n        return qParams\r\n    }\r\n    function isDevMode () {\r\n        return QueryParams && QueryParams.isDevMode\r\n    }\r\n    function isLogEnabled () {\r\n        return QueryParams && QueryParams.isLogEnabled\r\n    }\r\n\r\n    // Sleep\r\n    function Sleep (milliSeconds) {\r\n        const startTime = new Date().getTime()\r\n        while ((startTime + milliSeconds) > new Date().getTime()) {}\r\n    }\r\n    ZSDKUtil.GetQueryParams = GetQueryParams\r\n    ZSDKUtil.isDevMode = isDevMode\r\n    ZSDKUtil.isLogEnabled = isLogEnabled\r\n    ZSDKUtil.getLogger = getLogger\r\n    ZSDKUtil.Sleep = Sleep\r\n\r\n    return ZSDKUtil\r\n})(window.ZSDKUtil || {})\r\n\r\nconst ZSDKMessageManager = (function (ZSDKMessageManager) {\r\n    let SDKContext\r\n    const Logger = ZSDKUtil.getLogger()\r\n    const defaultPromiseTimeout = 10000 // Promise timeout\r\n    let promiseIDCtr = 100\r\n    const PromiseQueue = {} // Queue holding all the GetRequest promises\r\n\r\n    const AllowedOrigins = new RegExp('^https?:\\/\\/[a-zA-Z0-9-_]*.(sandbox.crm-oem.com|csez.zohocorpin.com|zoho.com|zoho.eu|zohoplatform.com|zohosandbox.com)(:[0-9]{0,4})?$')\r\n\r\n    let AuthParentWindow; let AuthParentOrigin\r\n\r\n    function Init (ctx, config) { // Config is for future use\r\n        if (!ctx || typeof ctx !== 'object') {\r\n            throw Error('Invalid Context object passed')\r\n        }\r\n        if (config && typeof config !== 'object') {\r\n            throw Error('Invalid Configuration Passed to MessageManager')\r\n        }\r\n\r\n        SDKContext = ctx\r\n\r\n        return MessageHandler.bind(ZSDKMessageManager)\r\n    }\r\n\r\n    // Authorization Check in SDK side.\r\n    function isAuthorizedMessage (MEvent) {\r\n        const incomingSource = MEvent.source\r\n        const incomingOrigin = MEvent.origin\r\n\r\n        if (SDKContext.isAppRegistered() && AuthParentWindow === incomingSource && AuthParentOrigin === incomingOrigin) {\r\n            return true\r\n        }\r\n\r\n        return new Error('Un-Authorized Message.')\r\n    }\r\n    function MessageHandler (MessageEvent) {\r\n    /* Added for backward compatibility support */\r\n        try {\r\n            var data = typeof MessageEvent.data === 'string' ? JSON.parse(MessageEvent.data) : MessageEvent.data\r\n        } catch (e) {\r\n            var data = MessageEvent.data\r\n        }\r\n        const messageType = data.type\r\n        const eventName = data.eventName\r\n\r\n        try {\r\n            if (eventName === 'SET_CONTEXT' || isAuthorizedMessage(MessageEvent)) {\r\n                switch (messageType) {\r\n                case 'FRAMEWORK.EVENT':\r\n                    HandleEvent(MessageEvent, data)\r\n                    break\r\n\r\n                default:\r\n                    SDKContext.MessageInterceptor(MessageEvent, data) // Future Use.\r\n                    break\r\n                }\r\n            }\r\n        } catch (e) {\r\n            Logger.Error('[SDK.MessageHandler] => ', e.stack)\r\n        }\r\n    }\r\n\r\n    function HandleEvent (MessageEvent, payload) {\r\n        const data = payload.data\r\n        const eventName = payload.eventName\r\n\r\n        const eventHandlers = {\r\n            SET_CONTEXT: HandleSetContext,\r\n            UPDATE_CONTEXT: HandleUpdateContext,\r\n            EVENT_RESPONSE: HandleEventResponse,\r\n            EVENT_RESPONSE_FAILURE: HandleEventFailure\r\n        }\r\n\r\n        const eventHandler = eventHandlers[eventName]\r\n        if (eventHandler && typeof eventHandler === 'function') {\r\n            eventHandler(MessageEvent, payload)\r\n        } else {\r\n            HandleCustomEvent(MessageEvent, payload)\r\n        }\r\n    }\r\n    function HandleSetContext (MessageEvent, payload) {\r\n        const parentOrigin = MessageEvent.origin\r\n        AuthParentWindow = window.parent // MessageEvent.source;\r\n        AuthParentOrigin = SDKContext.QueryParams.serviceOrigin // parentOrigin;\r\n\r\n        SDKContext.SetContext(payload.data)\r\n        SDKContext.ExecuteLoadHandler()\r\n    }\r\n    function HandleUpdateContext (MessageEvent, payload) {\r\n    // SDKContext.UpdateContext(payload.data);\r\n    // SDKContext.ExecuteLoadHandler();\r\n    }\r\n    function HandleCustomEvent (MessageEvent, payload) {\r\n        ZSDKEventManager.NotifyEventListeners(SDKContext.AppContext, payload.eventName, payload.data)\r\n    }\r\n\r\n    function HandleEventResponse (MessageEvent, payload) {\r\n        const promiseID = payload.promiseid\r\n        const response = payload.data\r\n        HandlePromiseCallback(promiseID, true, response)\r\n    }\r\n    function HandleEventFailure (MessageEvent, payload) {\r\n        const promiseID = payload.promiseid\r\n        const response = payload.data\r\n        HandlePromiseCallback(promiseID, false, response)\r\n    }\r\n    function HandlePromiseCallback (promiseID, isSuccess, response) {\r\n        if (PromiseQueue.hasOwnProperty(promiseID)) {\r\n            if (isSuccess) {\r\n                PromiseQueue[promiseID].resolve(response)\r\n            } else {\r\n                PromiseQueue[promiseID].reject(response)\r\n            }\r\n\r\n            PromiseQueue[promiseID] = undefined\r\n            delete PromiseQueue[promiseID]\r\n        } else {\r\n            // TODO: Handle if there is no promiseID present\r\n        }\r\n    }\r\n    function SendRequest (options) {\r\n        if (!options || typeof options !== 'object') {\r\n            throw new Error('Invalid Options passed')\r\n        }\r\n\r\n        return SendEvent('HTTP_REQUEST', options, true)\r\n    }\r\n    function TriggerEvent (eventName, payload, isPromiseEvent) {\r\n        if (!eventName) {\r\n            throw new Error('Invalid Eventname : ', eventName)\r\n        }\r\n\r\n        const PromiseID = isPromiseEvent ? getNextPromiseID() : undefined\r\n        const eventObject = {\r\n            /* Default Event Props */\r\n            type: 'SDK.EVENT',\r\n            eventName: eventName,\r\n            uniqueID: SDKContext.getUniqueID(),\r\n            time: new Date().getTime(),\r\n            promiseid: PromiseID,\r\n\r\n            /* User data */\r\n            data: payload\r\n        }\r\n\r\n        PostMessage(eventObject)\r\n\r\n        if (isPromiseEvent) {\r\n            return AddToPromiseQueue(PromiseID)\r\n        }\r\n    }\r\n\r\n    // Sends the event to the Framework.\r\n    function SendEvent (eventName, payload, isPromiseEvent) {\r\n        if (!eventName) {\r\n            throw new Error('Invalid Eventname : ', eventName)\r\n        }\r\n\r\n        const PromiseID = isPromiseEvent ? getNextPromiseID() : undefined\r\n        const eventObject = {\r\n            /* Default Event Props */\r\n            type: 'SDK.EVENT',\r\n            eventName: eventName,\r\n            uniqueID: SDKContext.getUniqueID(),\r\n            time: new Date().getTime(),\r\n            promiseid: PromiseID,\r\n\r\n            /* User data */\r\n            data: payload\r\n        }\r\n\r\n        PostMessage(eventObject)\r\n\r\n        if (isPromiseEvent) {\r\n            return AddToPromiseQueue(PromiseID)\r\n        }\r\n    }\r\n    function getNextPromiseID () {\r\n        return 'Promise' + promiseIDCtr++\r\n    }\r\n    function AddToPromiseQueue (promiseID) {\r\n        const promise = new Promise(function (resolve, reject) {\r\n            // Adding the promise to queue.\r\n            PromiseQueue[promiseID] = {\r\n                resolve: resolve,\r\n                reject: reject,\r\n                time: new Date().getTime()\r\n            }\r\n        })\r\n\r\n        /*\r\n     * Currently the Timeout case is disabled. Need to revisit.\r\n    setTimeout(function () {\r\n      if (PromiseQueue.hasOwnProperty(PromiseId)) {\r\n\r\n        PromiseQueue[PromiseId].reject('timeout'); // TODO: Better timeout message.\r\n        delete PromiseQueue[PromiseId];\r\n\r\n      }\r\n    }, defaultPromiseTimeout); // Have to define as common config props\r\n    */\r\n\r\n        return promise\r\n    }\r\n\r\n    function RegisterApp () {\r\n        const registerSDKClient = {\r\n            type: 'SDK.EVENT',\r\n            eventName: 'REGISTER',\r\n            appOrigin: encodeURIComponent(getCurrentURLPath())\r\n        }\r\n\r\n        // Initiating the Client Handshake\r\n        window.parent.postMessage(registerSDKClient, SDKContext.QueryParams.serviceOrigin)\r\n    }\r\n    function DERegisterApp () {\r\n        const deRegisterSDKClient = {\r\n            type: 'SDK.EVENT',\r\n            eventName: 'DEREGISTER',\r\n            uniqueID: SDKContext.getUniqueID()\r\n        }\r\n\r\n        PostMessage(deRegisterSDKClient)\r\n    }\r\n\r\n    // Helpers\r\n    function PostMessage (data) {\r\n        if (typeof data === 'object') {\r\n            data.appOrigin = encodeURIComponent(getCurrentURLPath())\r\n        }\r\n\r\n        if (!AuthParentWindow) {\r\n            throw new Error('Parentwindow reference not found.')\r\n        }\r\n        AuthParentWindow.postMessage(data, SDKContext.QueryParams.serviceOrigin)\r\n    }\r\n    function getCurrentURLPath () {\r\n        return window.location.protocol + '//' + window.location.host + window.location.pathname\r\n    }\r\n    ZSDKMessageManager.Init = Init\r\n    ZSDKMessageManager.RegisterApp = RegisterApp\r\n    ZSDKMessageManager.DERegisterApp = DERegisterApp\r\n\r\n    ZSDKMessageManager.SendRequest = SendRequest\r\n    ZSDKMessageManager.TriggerEvent = TriggerEvent\r\n\r\n    return ZSDKMessageManager\r\n})(window.ZSDKMessageManager || {})\r\n\r\nvar ZSDKEventManager = (function (ZSDKEventManager) {\r\n    const Logger = ZSDKUtil.getLogger()\r\n    // Private var's\r\n    const EventListeners = {} // Map storing all the eventnames and their Listeners\r\n\r\n    // Public API's\r\n    function AttachEventListener (eventName, fn) {\r\n        if (typeof fn !== 'function') {\r\n            // TODO: Using Logger log an error message as invalid params passed. fn is expected.\r\n            return\r\n        }\r\n\r\n        if (!Array.isArray(EventListeners[eventName])) {\r\n            EventListeners[eventName] = []\r\n        }\r\n        EventListeners[eventName].push(fn)\r\n    }\r\n\r\n    function NotifyEventListeners (AppContext, eventName, eventData) {\r\n        const internalEventCheck = eventName.match(/^\\__[A-Za-z_]+\\__$/gi)\r\n        const isInternalEvent = Array.isArray(internalEventCheck) && internalEventCheck.length > 0\r\n\r\n        const bindedListeners = EventListeners[eventName]\r\n        if (bindedListeners && Array.isArray(bindedListeners)) {\r\n            for (let i = 0; i < bindedListeners.length; i++) {\r\n                const fn = bindedListeners[i]\r\n                fn.call(AppContext, eventData)\r\n            }\r\n        } else {\r\n            Logger.Info('Cannot find EventListeners for Event : ', eventName)\r\n        }\r\n    }\r\n\r\n    function NotifyInternalEventHandler (SDKContext, payload) {\r\n        const eventName = payload.eventName\r\n\r\n        if (eventName === '__APP_INIT__') {\r\n            SDKContext.SetContext(payload.data)\r\n            SDKContext.ExecuteLoadHandler()\r\n        } else if (eventName === '__APP_CONTEXT_UPDATE__') {\r\n            SDKContext.UpdateContext(payload.data)\r\n            SDKContext.ExecuteContextUpdateHandler()\r\n        }\r\n    }\r\n\r\n    ZSDKEventManager.AttachEventListener = AttachEventListener\r\n    ZSDKEventManager.NotifyEventListeners = NotifyEventListeners\r\n    ZSDKEventManager.NotifyInternalEventHandler = NotifyInternalEventHandler\r\n\r\n    return ZSDKEventManager\r\n})(window.ZSDKEventManager || {})\r\n\r\nfunction ZSDK () { // TODO: Replace console with Logger\r\n    /* Private variables */\r\n    const that = this\r\n    let AppCode // Fn which gets executed on OnLoad\r\n    let ContextUpdateHandler // Fn which executed on OnContextUpdate\r\n    let connectors\r\n    let QueryParams\r\n    let uniqueID\r\n    const paramsObj = {} // TODO: Pass params from Framework to patchString in API Request call\r\n    let localeResource = {}\r\n\r\n    const version = '0.7.0' // Version\r\n\r\n    const Logger = ZSDKUtil.getLogger()\r\n\r\n    let _isAppRegistered = false\r\n    let isOnLoadTriggered = false\r\n\r\n    /* Instance variables */\r\n    this.isContextReady = false\r\n    this.HelperContext = {} // Helper context for helper js files\r\n    this.isDevMode = false\r\n    this.getContext = function () {\r\n        return AppContext\r\n    }\r\n\r\n    var AppContext = {} // App context having all the\r\n\r\n    AppContext.Model = {} // Modeldata store\r\n\r\n    AppContext.Event = {} // Event API's\r\n    AppContext.Event.Listen = AttachEventListener\r\n    AppContext.Event.Trigger = TriggerEvent // TODO: Need to check with API name and handler mechanism.\r\n\r\n    AppContext.GetRequest = GetRequest\r\n    AppContext.QueryParams = QueryParams\r\n    AppContext.Translate = Translate\r\n\r\n    this.OnLoad = function (AppLoadHandler) {\r\n        // TODO: Have to check whether AppCode has been executed. Throw Error when trying to Again bind fn to Init.\r\n        if (typeof AppLoadHandler !== 'function') {\r\n            throw new Error('Invalid Function value is passed')\r\n        }\r\n        AppCode = AppLoadHandler\r\n        if (_isAppRegistered) { ExecuteLoadHandler() }\r\n    }\r\n    this.OnUnLoad = function (AppUnLoadHandler) {\r\n    // TODO: Yet to impl\r\n    }\r\n    this.OnContextUpdate = function (AppCtxUpdateHandler) {\r\n    // TODO: Yet to impl\r\n        ContextUpdateHandler = AppCtxUpdateHandler\r\n    }\r\n\r\n    function ExecuteLoadHandler () {\r\n        if (typeof AppCode !== 'function') { Logger.Error('No OnLoad Handler provided to execute.'); return }\r\n        if (isOnLoadTriggered) { Logger.Error('OnLoad event already triggered.'); return }\r\n\r\n        AppCode.call(AppContext, AppContext)\r\n        isOnLoadTriggered = true\r\n    }\r\n    function ExecuteContextUpdateHandler () {\r\n        ContextUpdateHandler.call(AppContext, AppContext)\r\n    }\r\n    function isAppRegistered () {\r\n        return _isAppRegistered\r\n    }\r\n\r\n    // TODO: Add support for Setting custom headers and other error handling cases.\r\n    function GetRequest (options) {\r\n        return ZSDKMessageManager.SendRequest(options)\r\n    }\r\n\r\n    // TODO: Need to revisit\r\n    function TriggerEvent (eventName, payload, isPromise) {\r\n        return ZSDKMessageManager.TriggerEvent(eventName, payload, isPromise)\r\n    }\r\n    function RegisterClient () {\r\n        ZSDKMessageManager.RegisterApp()\r\n    }\r\n\r\n    // LoadContext object\r\n    function SetContext (contextData) {\r\n        Logger.Info('Setting AppContext data')\r\n\r\n        const modelData = (contextData && contextData.model) || {}\r\n        const local = contextData && contextData.locale\r\n        const localResource = contextData && contextData.localeResource\r\n\r\n        if (window.isDevMode) {\r\n            if (contextData.locale && contextData.localeResource &&\r\n          Object.keys(contextData.localeResource).length === 0 &&\r\n          contextData.localeResource.constructor === Object) {\r\n                if (contextData.locale) {\r\n                    LoadLocaleResource(contextData.locale)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (typeof ZSDKModelManager !== 'undefined') { // No I18n\r\n            for (const key in modelData) {\r\n                window.ZSDKModelManager.AddModel(key, modelData[key])\r\n            }\r\n            AppContext.Model = window.ZSDKModelManager.GetModelStore()\r\n        }\r\n\r\n        // Setting the uniqueID\r\n        uniqueID = contextData.uniqueID\r\n\r\n        // TODO: Need to check wheather needed or move to respective place.\r\n        connectors = contextData.connectors\r\n        Logger.Info('App Connectors ', connectors)\r\n\r\n        _isAppRegistered = true\r\n    }\r\n    function getUniqueID () {\r\n        return uniqueID\r\n    }\r\n    function UpdateContext (contextData) {\r\n    // Logger.Info('Context Update Event Data ', contextData);\r\n    }\r\n    function AttachEventListener (eventName, eventHandlerFn) {\r\n        ZSDKEventManager.AttachEventListener(eventName, eventHandlerFn)\r\n    }\r\n\r\n    function GetConnectors () {\r\n        return connectors\r\n    }\r\n\r\n    function LoadLocaleResource (locale) {\r\n        _loadJSON('/app-translations/' + locale + '.json', function (response) {\r\n            // Parse JSON string into object\r\n            localeResource = JSON.parse(response)\r\n            InitI18n()\r\n        })\r\n    }\r\n\r\n    function _loadJSON (filepath, callback) {\r\n        const xobj = new XMLHttpRequest()\r\n        // xobj.overrideMimeType(\"application/json\");\r\n        xobj.open('GET', filepath, false) // make 3rd param true for asynchronous mode\r\n        xobj.onreadystatechange = function () {\r\n            if (xobj.readyState == 4 && xobj.status == '200') {\r\n                // Required use of an anonymous callback as .open will NOT return a value but simply returns undefined in asynchronous mode\r\n                callback(xobj.responseText)\r\n            }\r\n        }\r\n\r\n        xobj.send(null)\r\n    }\r\n\r\n    function Translate (key, options) {\r\n        let valStr = ''\r\n        if (key) {\r\n            valStr = _getKeyByString(localeResource, key)\r\n        }\r\n\r\n        if (!valStr) {\r\n            return false\r\n        }\r\n\r\n        if (options) {\r\n            var key\r\n            const translateOptions = JSON.parse(JSON.stringify(eval(options)))\r\n            const keysArr = Object.keys(translateOptions)\r\n            for (key in keysArr) {\r\n                valStr = _replaceString(valStr, '${' + keysArr[key] + '}', translateOptions[keysArr[key]])\r\n            }\r\n        }\r\n\r\n        return valStr\r\n    }\r\n\r\n    function _replaceString (str, find, replace) {\r\n        let $r = ''\r\n        while ($r != str) {\r\n            $r = str\r\n            str = str.replace(find, replace)\r\n        }\r\n        return str\r\n    }\r\n\r\n    function _getKeyByString (o, s) {\r\n        s = s.replace(/\\[(\\w+)\\]/g, '.$1') // convert indexes to properties\r\n        s = s.replace(/^\\./, '') // strip a leading dot\r\n        const a = s.split('.')\r\n        for (let i = 0, n = a.length; i < n; ++i) {\r\n            const k = a[i]\r\n            if (k in o) {\r\n                o = o[k]\r\n            } else {\r\n                return\r\n            }\r\n        }\r\n        return o\r\n    }\r\n\r\n    function InitI18n () {\r\n        const all = document.querySelectorAll('[data-i18n]')\r\n        for (const i in all) {\r\n            if (all.hasOwnProperty(i)) {\r\n                let valStr = _getKeyByString(localeResource, all[i].getAttribute('data-i18n'))\r\n                if (!valStr) {\r\n                    return false\r\n                }\r\n\r\n                if (all[i].hasAttribute('data-options')) {\r\n                    const options = JSON.parse(JSON.stringify(eval('(' + all[i].getAttribute('data-options') + ')')))\r\n                    const keysArr = Object.keys(options)\r\n                    var key\r\n                    for (key in keysArr) {\r\n                        valStr = _replaceString(valStr, '${' + keysArr[key] + '}', options[keysArr[key]])\r\n                    }\r\n                }\r\n                all[i].innerHTML = valStr\r\n            }\r\n        }\r\n    }\r\n\r\n    function Bootstrap () {\r\n        QueryParams = ZSDKUtil.GetQueryParams()\r\n\r\n        // Intialize variables\r\n        window.isDevMode = !!QueryParams.isDevMode\r\n\r\n        const SDKContext = {}\r\n        SDKContext.isDevMode = window.isDevMode\r\n        SDKContext.ExecuteLoadHandler = ExecuteLoadHandler\r\n        SDKContext.SetContext = SetContext\r\n        SDKContext.UpdateContext = UpdateContext\r\n        SDKContext.QueryParams = QueryParams\r\n        SDKContext.GetConnectors = GetConnectors\r\n        SDKContext.TriggerEvent = TriggerEvent\r\n        SDKContext.ExecuteContextUpdateHandler = ExecuteContextUpdateHandler\r\n        SDKContext.getUniqueID = getUniqueID\r\n        SDKContext.isAppRegistered = isAppRegistered\r\n\r\n        // Initiating Message Manager\r\n        const MessageHandler = ZSDKMessageManager.Init(SDKContext)\r\n        window.addEventListener('message', MessageHandler)\r\n        window.addEventListener('unload', function () {\r\n            ZSDKMessageManager.DERegisterApp()\r\n        })\r\n\r\n        if (typeof ZSDKModelManager !== 'undefined') {\r\n            window.ZSDKModelManager.Init(SDKContext)\r\n        }\r\n\r\n        RegisterClient()\r\n    }\r\n\r\n    Bootstrap() // Bootstrap for SDK\r\n}\r\n\r\nexport const ZOHO = (function () {\r\n    let appSDK\r\n    const eventListenerMap = {}\r\n    let isInitTriggered = false\r\n    let initPromise\r\n    return {\r\n        embeddedApp: {\r\n            on: function (event, fn) {\r\n                eventListenerMap[event] = fn\r\n            },\r\n            init: function () {\r\n            \tif (!isInitTriggered) {\r\n            \t\tisInitTriggered = true\r\n                    appSDK = new ZSDK()\r\n                    let promiseResolve\r\n                    initPromise = new Promise(function (resolve, reject) {\r\n                        promiseResolve = resolve\r\n                    })\r\n                    appSDK.OnLoad(function () {\r\n                        promiseResolve()\r\n                    })\r\n                    for (const key in eventListenerMap) {\r\n                        appSDK.getContext().Event.Listen(key, eventListenerMap[key])\r\n                    }\r\n            \t}\r\n                return initPromise\r\n            }\r\n        },\r\n        CRM: (function () {\r\n            function newRequestPromise (data) {\r\n                /*\r\n                 * Sdk Version Maintainance\r\n                 */\r\n                data.sdkVersion = '1'\r\n                return appSDK.getContext().Event.Trigger('CRM_EVENT', data, true)\r\n            }\r\n            // file upload issue fie\r\n            function createNewFileObj (file) {\r\n                const oldfile = file\r\n                const newfile = new File([oldfile], oldfile.name, { type: oldfile.type })\r\n\t         \treturn newfile\r\n            }\r\n            function createRecord (Entity, APIdata, RecordID, RelatedEntity) {\r\n            \tif (APIdata.FileData) {\r\n            \t  const newfileObj = createNewFileObj(APIdata.FileData)\r\n                    APIdata.FileData = newfileObj\r\n                }\r\n                const data = {\r\n                    category: 'CREATE', // no i18n\r\n                    Entity: Entity,\r\n                    RelatedID: RecordID,\r\n                    APIData: APIdata\r\n                }\r\n                data.type = RelatedEntity || 'RECORD'\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function getRecord (Entity, recordID, relatedListSysRef) {\r\n                const data = {\r\n                    category: 'READ', // no i18n\r\n                    APIData: {\r\n                        Entity: Entity,\r\n                        RecordID: recordID,\r\n                        RelatedList: relatedListSysRef\r\n                    }\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n            function getBluePrint (APIData) {\r\n                APIData.category = 'BLUEPRINT' // no i18n\r\n                return newRequestPromise(APIData)\r\n            }\r\n            function uploadFile (APIData) {\r\n            \tif (APIData.FILE) {\r\n            \t\tconst newfileobj = createNewFileObj(APIData.FILE.file)\r\n            \t\tAPIData.FILE.file = newfileobj\r\n        \t\t}\r\n                const data = {\r\n                    FileData: APIData,\r\n                    category: 'FILES', // no i18n\r\n                    type: 'UPLOAD_FILE'\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n            function getFile (APIData) {\r\n                APIData.category = 'FILES'\r\n                APIData.type = 'DOWNLOAD_FILE'\r\n                return newRequestPromise(APIData)\r\n            }\r\n            function getAllActions (APIData) {\r\n                APIData.category = 'APPROVALS'\r\n                return newRequestPromise(APIData)\r\n            }\r\n            function getAllRecords (APIData) {\r\n                const data = {\r\n                    category: 'READ',\r\n                    APIData: APIData\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function updateRecord (Entity, APIData) {\r\n                const data = {\r\n                    category: 'UPDATE', // no i18n\r\n                    type: 'RECORD', // no i18n\r\n                    Entity: Entity,\r\n                    APIData: APIData\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function getRelatedRecord (APIData) {\r\n                const data = {\r\n                    category: 'READ', // no i18n\r\n                    APIData: APIData // no i18n\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function updateRelatedRecord (Entity, RecordID, RelatedList, RelatedRecordID, APIData) {\r\n                const data = {\r\n                    category: 'UPDATE', // no i18n\r\n                    type: 'RELATED_RECORD', // no i18n\r\n                    Entity: Entity,\r\n                    RecordID: RecordID,\r\n                    RelatedList: RelatedList,\r\n                    RelatedRecordID: RelatedRecordID,\r\n                    APIData: APIData\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function updateNotes (Entity, RecordID, RelatedRecordID, APIData) {\r\n                const data = {\r\n                    category: 'UPDATE', // no i18n\r\n                    type: 'NOTES', // no i18n\r\n                    Entity: Entity,\r\n                    RecordID: RecordID,\r\n                    RelatedRecordID: RelatedRecordID,\r\n                    APIData: APIData\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function deleteRecord (Entity, RecordID) {\r\n                const data = {\r\n                    category: 'DELETE', // no i18n\r\n                    type: 'RECORD', // no i18n\r\n                    Entity: Entity,\r\n                    RecordID: RecordID\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function deleteRelatedRecord (Entity, RecordID, RelatedList, RelatedRecordID) {\r\n                const data = {\r\n                    category: 'DELETE', // no i18n\r\n                    type: 'RELATED_RECORD', // no i18n\r\n                    Entity: Entity,\r\n                    RecordID: RecordID,\r\n                    RelatedList: RelatedList,\r\n                    RelatedRecordID: RelatedRecordID\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function searchRecord (Entity, Type, Query, page, per_page, delay) {\r\n                const data = {\r\n                    category: 'SEARCH', // no i18n\r\n                    Entity: Entity,\r\n                    Type: Type,\r\n                    Query: Query,\r\n                    page: page,\r\n                    per_page: per_page,\r\n                    delay: delay\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function getAllProfiles (Category, Type) {\r\n                const data = {\r\n                    category: Category,\r\n                    type: Type\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function getProfile (Category, Type, ID) {\r\n                const data = {\r\n                    category: Category,\r\n                    type: Type,\r\n                    ID: ID\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function updateProfile (Category, Type, ID, APIData) {\r\n                const data = {\r\n                    category: Category,\r\n                    type: Type,\r\n                    ID: ID,\r\n                    APIData: APIData\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function constructQueryString (source) {\r\n                const array = []\r\n\r\n                for (const key in source) {\r\n                    array.push(encodeURIComponent(key) + '=' + encodeURIComponent(source[key]))\r\n                }\r\n                return array.join('&')\r\n            }\r\n\r\n            function remoteCall (method, requestData, type) {\r\n            \tif (requestData.FILE) {\r\n            \t\tconst newfileobj = createNewFileObj(requestData.FILE.file)\r\n            \t\trequestData.FILE.file = newfileobj\r\n        \t\t}\r\n                let reqData\r\n                if (!type) {\r\n                    let url = requestData.url\r\n                    const params = requestData.params\r\n                    const headers = requestData.headers\r\n                    const body = requestData.body\r\n                    const Parts = requestData.PARTS\r\n                    const partBoundary = requestData.PART_BOUNDARY\r\n                    const ContentType = requestData.CONTENT_TYPE\r\n                    const responseType = requestData.RESPONSE_TYPE\r\n                    const file = requestData.FILE\r\n                    if (!url) {\r\n                        throw { Message: 'Url missing' }\r\n                    }\r\n                    if (params) {\r\n                        const queryString = constructQueryString(params)\r\n                        url += (url.indexOf('?') > -1 ? '&' : '?') + queryString\r\n                    }\r\n                    reqData = {\r\n                        url: url,\r\n                        Header: headers,\r\n                        Body: body,\r\n                        CONTENT_TYPE: ContentType,\r\n                        RESPONSE_TYPE: responseType,\r\n                        PARTS: Parts,\r\n                        PARTS_BOUNDARY: partBoundary,\r\n                        FILE: file\r\n                    }\r\n                } else {\r\n                    reqData = requestData\r\n                }\r\n\r\n                const data = {\r\n                    category: 'CONNECTOR', // no i18n\r\n                    nameSpace: method,\r\n                    data: reqData,\r\n                    type: type\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function manipulateUI (data) {\r\n                const config = {\r\n                    category: 'UI'\r\n                }\r\n                $.extend(data, config)\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function config (type, nameSpace, requestData) {\r\n                const data = {\r\n                    category: 'CONFIG',\r\n                    type: type,\r\n                    nameSpace: nameSpace,\r\n                    APIData: requestData\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function action (type, obj) {\r\n                const data = {\r\n                    category: 'ACTION',\r\n                    type: type,\r\n                    object: obj\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function user (data) {\r\n                const promiseData = {\r\n                    category: 'USER'\r\n                }\r\n                if (data.ID) {\r\n                    promiseData.ID = data.ID\r\n                } else if (data.Type) {\r\n                    promiseData.Type = data.Type\r\n                    if (data.page) {\r\n                        promiseData.page = data.page\r\n                    }\r\n                    if (data.per_page) {\r\n                        promiseData.per_page = data.per_page\r\n                    }\r\n                }\r\n                return newRequestPromise(promiseData)\r\n            }\r\n\r\n            function getMeta (data) {\r\n                const reqJson = {\r\n                    category: 'META',\r\n                    type: data.type,\r\n                    Entity: data.Entity,\r\n                    Id: data.Id\r\n                }\r\n                return newRequestPromise(reqJson)\r\n            }\r\n            const HTTPRequest = {\r\n                POST: 'wget.post',\r\n                GET: 'wget.get',\r\n                PUT: 'wget.put',\r\n                PATCH: 'wget.patch',\r\n                DELETE: 'wget.delete'\r\n            }\r\n            return {\r\n                ACTION: {\r\n                    setConfig: function (obj) {\r\n                        return action('CUSTOM_ACTION_SAVE_CONFIG', obj)\r\n                    },\r\n                    enableAccountAccess: function (obj) {\r\n                        return action('ENABLE_ACCOUNT_ACCESS', obj)\r\n                    }\r\n                },\r\n                /**\r\n                 * @namespace ZOHO.CRM.FUNCTIONS\r\n                 */\r\n                FUNCTIONS: {\r\n                    /**\r\n                     * @function execute\r\n                     * @description Invoke a Function\r\n                     * @returns {Promise} resolved with response of the function executed\r\n                     * @memberof ZOHO.CRM.FUNCTIONS\r\n                     * @param {String} func_name - Function Name\r\n                     * @param {Object} req_data - Request Data\r\n                     * @example\r\n                     * var func_name = \"custom_function4\";\r\n                     * var req_data ={\r\n                     *   \"arguments\": JSON.stringify({\r\n                     *       \"mailid\" : \"siprxx.xxx@xxxx.com\"\r\n                     *   })\r\n                     * };\r\n                     * ZOHO.CRM.FUNCTIONS.execute(func_name, req_data)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     * {\r\n                     *   \"code\": \"success\",\r\n                     *   \"details\": {\r\n                     *     \"type\":\"VOID\",\r\n                     *       \"output\": null,\r\n                     *       \"id\": \"944000000003001\"\r\n                     *   },\r\n                     *   \"message\": \"function executed successfully\"\r\n                     * }\r\n                     */\r\n                    execute: function (func_name, req_data) {\r\n                        const request = {}\r\n                        req_data.auth_type = 'oauth'\r\n                        request.data = req_data\r\n                        const data = {\r\n                            category: 'FUNCTIONS_EXECUTE', // no i18n\r\n                            customFunctionName: func_name,\r\n                            data: request\r\n                        }\r\n                        return newRequestPromise(data)\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @namespace ZOHO.CRM.CONFIG\r\n                 */\r\n                CONFIG: {\r\n                    /**\r\n                     * @function getOrgInfo\r\n                     * @memberof ZOHO.CRM.CONFIG\r\n                     * @description get plugins configuration data\r\n                     * @returns {Promise} Resolved with Plugin Configuration\r\n                     * @example\r\n                     * ZOHO.CRM.CONFIG.getOrgInfo().then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"Success\": {\r\n                     *   \"Content\": \"12345\"\r\n                     *  }\r\n                     *}\r\n                     *\r\n                     */\r\n                    getOrgInfo: function (nameSpace) {\r\n                        return config('ORG')\r\n                    },\r\n                    /**\r\n                     * @function getCurrentUser\r\n                     * @memberof ZOHO.CRM.CONFIG\r\n                     * @description get Current User info\r\n                     * @returns {Promise} Resolved with User info\r\n                     * @example\r\n                     * ZOHO.CRM.CONFIG.getCurrentUser().then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     * {\r\n                     *   \"confirm\": true,\r\n                     *   \"full_name\": \"asd devvv\",\r\n                     *   \"role\": {\r\n                     *     \"name\": \"CEO\",\r\n                     *     \"id\": \"1000000028936\"\r\n                     *   },\r\n                     *   \"profile\": {\r\n                     *     \"name\": \"Administrator\",\r\n                     *     \"id\": \"1000000028942\"\r\n                     *   },\r\n                     *   \"last_name\": \"asd devvv\",\r\n                     *   \"alias\": null,\r\n                     *   \"id\": \"1000000030132\",\r\n                     *   \"first_name\": null,\r\n                     *   \"email\": \"naresh.babu+dev1@zylker.com\",\r\n                     *   \"zuid\": \"4253443\",\r\n                     *   \"status\": \"active\"\r\n                     * }\r\n                     *\r\n                     */\r\n                    getCurrentUser: function () {\r\n                        return config('CURRENT_USER')\r\n                    },\r\n                    /*\r\n                     * @function GetCurrentEnvironment\r\n                     * @memberof ZOHO.CRM.CONFIG\r\n                     * @description get Current org info\r\n                     * @returns {Promise} Resolved with User info\r\n                     * @example\r\n                     * ZOHO.CRM.CONFIG.GetCurrentEnvironment().then(function(data){\r\n                     *  console.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     *\r\n                     *\r\n                     *{\r\n                     *  \"deployment\": \"US\",\r\n                     *  \"ZGID\": 1001244313,\r\n                     *  \"ZUID\": \"1001244314\",\r\n                     *  \"appDetails\": {\r\n                     *    \"appUrl\": \"https://vettti.ucrm.com\"\r\n                     *  }\r\n                     *}\r\n                     *\r\n                     */\r\n                    GetCurrentEnvironment: function () {\r\n                        return config('ORG_LEVEL_INFO')\r\n                    }\r\n                    /*\r\n                    * @function createUser\r\n                    * @memberof ZOHO.CRM.CONFIG\r\n                    * @description create user\r\n                    * @param {Object} config - Configuration Object.\r\n                    * @returns {Promise} Resolved with user details\r\n                    * @example\r\n                    *\r\n                    *var config = {\r\n                    *  \"users\": [\r\n                    *    {\r\n                    *      \"last_name\": \"TestUser2\",\r\n                    *      \"email\": \"test_account20@zohocorp.com\",\r\n                    *      \"role\": \"111126000000030021\",\r\n                    *      \"profile\": \"111126000000030027\"\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    *\r\n                    *\r\n                    * ZOHO.CRM.CONFIG.createUser(config).then(function(data){\r\n                    *    console.log(data)\r\n                    * });\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *{\r\n                    *  \"users\": [\r\n                    *    {\r\n                    *      \"code\": \"SUCCESS\",\r\n                    *      \"details\": {\r\n                    *        \"id\": \"111155000000032661\"\r\n                    *      },\r\n                    *      \"message\": \"User added\",\r\n                    *      \"status\": \"success\"\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    createUser: function(data)\r\n                    {\r\n                        return config(\"CREATEUSER\",\"\",data);\r\n                    },\r\n                    * @function editUser\r\n                    * @memberof ZOHO.CRM.CONFIG\r\n                    * @description edit user details\r\n                    * @param {Object} config - Configuration Object.\r\n                    * @param {String} config.id - user id\r\n                    * @param {String} config.userobject - json object to update the user details\r\n                    * @returns {Promise} Resolved with user details\r\n                    * @example\r\n                    *\r\n                    *var userdetails =\r\n                    *{\r\n                    *  \"users\": [\r\n                    *    {\r\n                    *      \"website\": \"https://www.zoho.com/docs\",\r\n                    *      \"fax\": \"test\",\r\n                    *      \"Mobile\": 1234567890,\r\n                    *      \"Phone\": 1234567890\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    * var config =\r\n                    *{\r\n                    *   id:\"6000000031085\",\r\n                    *   userobject:userdetails\r\n                    *}\r\n                    *\r\n                    *ZOHO.CRM.CONFIG.editUser(config).then(function(data){\r\n                    *  console.log(data);\r\n                    *});\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *{\r\n                    *  \"users\": [\r\n                    *    {\r\n                    *      \"code\": \"SUCCESS\",\r\n                    *      \"details\": {\r\n                    *        \"id\": \"111155000000032680\"\r\n                    *      },\r\n                    *      \"message\": \"User updated\",\r\n                    *      \"status\": \"success\"\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    editUser: function(data)\r\n                    {\r\n                        return config(\"EDITUSER\",\"\",data);\r\n                    },\r\n                    * @function deleteUser\r\n                    * @memberof ZOHO.CRM.CONFIG\r\n                    * @description delete user from crm\r\n                    * @params {object} config - details of the delete user\r\n                    * @params {String} config.id - user id\r\n                    * @returns {Promise} Resolved with user details\r\n                    * @example\r\n                    *\r\n                    * var config =\r\n                    *{\r\n                    *    id:\"6000000032001\"\r\n                    *}\r\n                    *\r\n                    *\r\n                    * ZOHO.CRM.CONFIG.deleteUser(config).then(function(data){\r\n                    *    console.log(data);\r\n                    * });\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *{\r\n                    *  \"users\": [\r\n                    *    {\r\n                    *      \"code\": \"SUCCESS\",\r\n                    *      \"details\": {},\r\n                    *      \"message\": \"User deleted\",\r\n                    *      \"status\": \"success\"\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    deleteUser: function(data)\r\n                    {\r\n                        return config(\"DELETEUSER\",\"\",data);\r\n                    } */\r\n                },\r\n                /**\r\n                 * @namespace ZOHO.CRM.META\r\n                 */\r\n                META: {\r\n                    /**\r\n                     * @function getFields\r\n                     * @memberof ZOHO.CRM.META\r\n                     * @description get field lables and api names\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @returns {Promise} Resolved with data of record matching with Entity and type\r\n                     * @example\r\n                     * ZOHO.CRM.META.getFields({\"Entity\":\"Contacts\"}).then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     *\r\n                     *\r\n                     * //prints\r\n                     *\r\n                     *\r\n                     *{\r\n                     *fields:[\r\n                     *  {\r\n                     *    \"custom_field\": false,\r\n                     *    \"lookup\": {\r\n                     *\r\n                     *    },\r\n                     *    \"visible\": true,\r\n                     *    \"json_type\": \"jsonobject\",\r\n                     *    \"field_label\": \"Contact Owner\",\r\n                     *    \"length\": 120,\r\n                     *    \"column_name\": \"SMOWNERID\",\r\n                     *    \"view_type\": {\r\n                     *      \"view\": true,\r\n                     *      \"edit\": true,\r\n                     *      \"quick_create\": false,\r\n                     *      \"create\": true\r\n                     *    },\r\n                     *    \"created_source\": \"default\",\r\n                     *    \"show_type\": 7,\r\n                     *    \"ui_type\": 8,\r\n                     *    \"read_only\": false,\r\n                     *    \"api_name\": \"Owner\",\r\n                     *    \"unique\": {\r\n                     *\r\n                     *    },\r\n                     *    \"businesscard_supported\": true,\r\n                     *    \"data_type\": \"ownerlookup\",\r\n                     *    \"formula\": {\r\n                     *\r\n                     *    },\r\n                     *    \"currency\": {\r\n                     *\r\n                     *    },\r\n                     *    \"id\": \"14000000000649\",\r\n                     *    \"decimal_place\": null,\r\n                     *    \"pick_list_values\": [\r\n                     *\r\n                     *    ],\r\n                     *    \"auto_number\": {\r\n                     *\r\n                     *    }\r\n                     *  },\r\n                     *  {\r\n                     *    \"custom_field\": false,\r\n                     *    \"lookup\": {\r\n                     *\r\n                     *    },\r\n                     *    \"visible\": true,\r\n                     *    \"json_type\": \"string\",\r\n                     *    \"field_label\": \"Lead Source\",\r\n                     *    \"length\": 120,\r\n                     *    \"column_name\": \"LEADSOURCE\",\r\n                     *    \"view_type\": {\r\n                     *      \"view\": true,\r\n                     *      \"edit\": true,\r\n                     *      \"quick_create\": false,\r\n                     *      \"create\": true\r\n                     *    },\r\n                     *    \"created_source\": \"default\",\r\n                     *    \"show_type\": 7,\r\n                     *    \"ui_type\": 2,\r\n                     *    \"read_only\": false,\r\n                     *    \"api_name\": \"Lead_Source\",\r\n                     *    \"unique\": {\r\n                     *\r\n                     *    },\r\n                     *    \"businesscard_supported\": true,\r\n                     *    \"data_type\": \"picklist\",\r\n                     *    \"formula\": {\r\n                     *\r\n                     *    },\r\n                     *    \"currency\": {\r\n                     *\r\n                     *    },\r\n                     *    \"id\": \"14000000000651\",\r\n                     *    \"decimal_place\": null,\r\n                     *    \"pick_list_values\": [\r\n                     *      {\r\n                     *        \"display_value\": \"None\",\r\n                     *        \"actual_value\": \"-None-\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Advertisement\",\r\n                     *        \"actual_value\": \"Advertisement\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Cold Call\",\r\n                     *        \"actual_value\": \"Cold Call\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Employee Referral\",\r\n                     *        \"actual_value\": \"Employee Referral\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"External Referral\",\r\n                     *        \"actual_value\": \"External Referral\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Partner\",\r\n                     *        \"actual_value\": \"Partner\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Public Relations\",\r\n                     *        \"actual_value\": \"Public Relations\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Trade Show\",\r\n                     *        \"actual_value\": \"Trade Show\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Web Form\",\r\n                     *        \"actual_value\": \"Web Form\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Search Engine\",\r\n                     *        \"actual_value\": \"Search Engine\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Facebook\",\r\n                     *        \"actual_value\": \"Facebook\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Twitter\",\r\n                     *        \"actual_value\": \"Twitter\"\r\n                     *      }\r\n                     *    ],\r\n                     *    \"auto_number\": {\r\n                     *\r\n                     *    }\r\n                     *  },\r\n                     *  {\r\n                     *    \"custom_field\": false,\r\n                     *    \"lookup\": {\r\n                     *\r\n                     *    },\r\n                     *    \"visible\": true,\r\n                     *    \"json_type\": \"string\",\r\n                     *    \"field_label\": \"First Name\",\r\n                     *    \"length\": 40,\r\n                     *    \"column_name\": \"FIRSTNAME\",\r\n                     *    \"view_type\": {\r\n                     *      \"view\": false,\r\n                     *      \"edit\": true,\r\n                     *      \"quick_create\": true,\r\n                     *      \"create\": true\r\n                     *    },\r\n                     *    \"created_source\": \"default\",\r\n                     *    \"show_type\": 7,\r\n                     *    \"ui_type\": 27,\r\n                     *    \"read_only\": false,\r\n                     *    \"api_name\": \"First_Name\",\r\n                     *    \"unique\": {\r\n                     *\r\n                     *    },\r\n                     *    \"businesscard_supported\": false,\r\n                     *    \"data_type\": \"text\",\r\n                     *    \"formula\": {\r\n                     *\r\n                     *    },\r\n                     *    \"currency\": {\r\n                     *\r\n                     *    },\r\n                     *    \"id\": \"14000000000653\",\r\n                     *    \"decimal_place\": null,\r\n                     *    \"pick_list_values\": [\r\n                     *\r\n                     *    ],\r\n                     *    \"auto_number\": {\r\n                     *\r\n                     *    }\r\n                     *  },\r\n                     *  {\r\n                     *    \"custom_field\": false,\r\n                     *    \"lookup\": {\r\n                     *\r\n                     *    },\r\n                     *    \"visible\": true,\r\n                     *    \"json_type\": \"string\",\r\n                     *    \"field_label\": \"Last Name\",\r\n                     *    \"length\": 80,\r\n                     *    \"column_name\": \"LASTNAME\",\r\n                     *    \"view_type\": {\r\n                     *      \"view\": true,\r\n                     *      \"edit\": true,\r\n                     *      \"quick_create\": true,\r\n                     *      \"create\": true\r\n                     *    },\r\n                     *    \"created_source\": \"default\",\r\n                     *    \"show_type\": 7,\r\n                     *    \"ui_type\": 127,\r\n                     *    \"read_only\": false,\r\n                     *    \"api_name\": \"Last_Name\",\r\n                     *    \"unique\": {\r\n                     *\r\n                     *    },\r\n                     *    \"businesscard_supported\": false,\r\n                     *    \"data_type\": \"text\",\r\n                     *    \"formula\": {\r\n                     *\r\n                     *    },\r\n                     *    \"currency\": {\r\n                     *\r\n                     *    },\r\n                     *    \"id\": \"14000000000655\",\r\n                     *    \"decimal_place\": null,\r\n                     *    \"pick_list_values\": [\r\n                     *\r\n                     *    ],\r\n                     *    \"auto_number\": {\r\n                     *\r\n                     *    }\r\n                     *  },\r\n                     *  {\r\n                     *    \"custom_field\": false,\r\n                     *    \"lookup\": {\r\n                     *\r\n                     *    },\r\n                     *    \"visible\": true,\r\n                     *    \"json_type\": \"string\",\r\n                     *    \"field_label\": \"Full Name\",\r\n                     *    \"length\": 80,\r\n                     *    \"column_name\": \"FULLNAME\",\r\n                     *    \"view_type\": {\r\n                     *      \"view\": true,\r\n                     *      \"edit\": false,\r\n                     *      \"quick_create\": false,\r\n                     *      \"create\": false\r\n                     *    },\r\n                     *    \"created_source\": \"default\",\r\n                     *    \"show_type\": 0,\r\n                     *    \"ui_type\": 1,\r\n                     *    \"read_only\": false,\r\n                     *    \"api_name\": \"Full_Name\",\r\n                     *    \"unique\": {\r\n                     *\r\n                     *    },\r\n                     *    \"businesscard_supported\": false,\r\n                     *    \"data_type\": \"text\",\r\n                     *    \"formula\": {\r\n                     *\r\n                     *    },\r\n                     *    \"currency\": {\r\n                     *\r\n                     *    },\r\n                     *    \"id\": \"14000000000657\",\r\n                     *    \"decimal_place\": null,\r\n                     *    \"pick_list_values\": [\r\n                     *\r\n                     *    ],\r\n                     *    \"auto_number\": {\r\n                     *\r\n                     *    }\r\n                     *  }\r\n                     *]\r\n                     *}\r\n                     */\r\n                    getFields: function (data) {\r\n                        data.type = 'FIELD_LIST'\r\n                        return getMeta(data)\r\n                    },\r\n                    /**\r\n                     * @function getModules\r\n                     * @memberof ZOHO.CRM.META\r\n                     * @description get Modules list\r\n                     * @returns {Promise} Resolved with data of all modules\r\n                     * @example\r\n                     * ZOHO.CRM.META.getModules().then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     *\r\n                     *\r\n                     * //prints\r\n                     *\r\n                     *\r\n                     *{\r\n\t\t\t\t\t *  \"modules\": [{\r\n\t\t\t\t\t *      \"global_search_supported\": false,\r\n\t\t\t\t\t *      \"deletable\": false,\r\n\t\t\t\t\t *      \"creatable\": false,\r\n\t\t\t\t\t *      \"modified_time\": null,\r\n\t\t\t\t\t *      \"plural_label\": \"Home\",\r\n\t\t\t\t\t *      \"presence_sub_menu\": false,\r\n\t\t\t\t\t *      \"id\": \"457154000000000123\",\r\n\t\t\t\t\t *      \"visible\": true,\r\n\t\t\t\t \t *      \"visibility\": 1,\r\n\t\t\t\t\t *      \"convertable\": false,\r\n\t\t\t\t\t *      \"editable\": false,\r\n\t\t\t\t\t *      \"profiles\": [{\r\n\t\t\t\t\t *          \"name\": \"Administrator\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015972\"\r\n\t\t\t\t\t *        },\r\n\t\t\t\t\t *        {\r\n\t\t\t\t\t *          \"name\": \"Standard\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015975\"\r\n\t\t\t\t\t *        }\r\n\t\t\t\t\t *      ],\r\n\t\t\t\t\t *      \"filter_supported\": false,\r\n\t\t\t\t\t *      \"web_link\": null,\r\n\t\t\t\t\t *      \"sequence_number\": 1,\r\n\t\t\t\t\t *      \"singular_label\": \"Home\",\r\n\t\t\t\t\t *      \"viewable\": true,\r\n\t\t\t\t\t *      \"api_supported\": false,\r\n\t\t\t\t\t *      \"api_name\": \"Home\",\r\n\t\t\t\t\t *      \"quick_create\": false,\r\n\t\t\t\t\t *      \"modified_by\": null,\r\n\t\t\t\t\t *      \"generated_type\": \"default\",\r\n\t\t\t\t\t *      \"feeds_required\": false,\r\n\t\t\t\t\t *      \"scoring_supported\": false,\r\n\t\t\t\t\t *      \"arguments\": [],\r\n\t\t\t\t\t *      \"module_name\": \"Home\",\r\n\t\t\t\t\t *      \"business_card_field_limit\": 0,\r\n\t\t\t\t\t *      \"parent_module\": {}\r\n\t\t\t\t\t *    },\r\n\t\t\t\t\t *    {\r\n\t\t\t\t\t *      \"global_search_supported\": false,\r\n\t\t\t\t\t *      \"deletable\": false,\r\n\t\t\t\t\t *      \"creatable\": false,\r\n\t\t\t\t\t *      \"modified_time\": null,\r\n\t\t\t\t\t *      \"plural_label\": \"SalesInbox\",\r\n\t\t\t\t\t *      \"presence_sub_menu\": false,\r\n\t\t\t\t\t *      \"id\": \"457154000000129001\",\r\n\t\t\t\t\t *      \"visible\": true,\r\n\t\t\t\t\t *      \"visibility\": 1,\r\n\t\t\t\t\t *      \"convertable\": false,\r\n\t\t\t\t\t *      \"editable\": false,\r\n\t\t\t\t\t *      \"profiles\": [{\r\n\t\t\t\t\t *          \"name\": \"Administrator\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015972\"\r\n\t\t\t\t \t *        },\r\n\t\t\t\t\t *        {\r\n\t\t\t \t\t *          \"name\": \"Standard\",\r\n\t\t\t\t \t *          \"id\": \"457154000000015975\"\r\n\t\t\t\t\t *        }\r\n\t\t\t\t\t *      ],\r\n\t\t\t\t\t *      \"filter_supported\": false,\r\n\t\t\t\t\t *      \"web_link\": null,\r\n\t\t\t\t \t *      \"sequence_number\": 2,\r\n\t\t\t\t\t *      \"singular_label\": \"SalesInbox\",\r\n\t\t\t\t\t *      \"viewable\": true,\r\n\t\t\t\t\t *      \"api_supported\": false,\r\n\t\t\t\t\t *      \"api_name\": \"SalesInbox\",\r\n\t\t\t\t\t *      \"quick_create\": false,\r\n\t\t\t\t\t *      \"modified_by\": null,\r\n\t\t\t\t\t *      \"generated_type\": \"default\",\r\n\t\t\t\t\t *      \"feeds_required\": false,\r\n\t\t\t\t\t *      \"scoring_supported\": false,\r\n\t\t\t\t\t *      \"arguments\": [],\r\n\t\t\t\t\t *      \"module_name\": \"SalesInbox\",\r\n\t\t\t\t\t *      \"business_card_field_limit\": 0,\r\n\t\t\t\t \t *      \"parent_module\": {}\r\n\t\t\t\t\t *    },\r\n\t\t\t\t\t *    {\r\n\t\t\t\t\t *      \"global_search_supported\": false,\r\n\t\t\t\t\t *      \"deletable\": false,\r\n\t\t\t\t\t *      \"creatable\": false,\r\n\t\t\t\t\t *      \"modified_time\": null,\r\n\t\t\t\t\t *      \"plural_label\": \"Feeds\",\r\n\t\t\t\t\t *      \"presence_sub_menu\": false,\r\n\t\t\t\t\t *      \"id\": \"457154000000059001\",\r\n\t\t\t\t\t *      \"visible\": true,\r\n\t\t\t\t\t *      \"visibility\": 1,\r\n\t\t\t\t\t *      \"convertable\": false,\r\n\t\t\t\t\t *      \"editable\": false,\r\n\t\t\t\t \t *      \"profiles\": [],\r\n\t\t\t \t\t *      \"filter_supported\": false,\r\n\t\t\t\t\t *      \"web_link\": null,\r\n\t\t\t\t\t *      \"sequence_number\": 3,\r\n\t\t\t\t\t *      \"singular_label\": \"Feeds\",\r\n\t\t\t\t \t *      \"viewable\": true,\r\n\t\t\t \t\t *      \"api_supported\": false,\r\n\t\t\t\t\t *      \"api_name\": \"Feeds\",\r\n\t\t\t\t\t *      \"quick_create\": false,\r\n\t\t\t\t\t *      \"modified_by\": null,\r\n\t\t\t\t\t *      \"generated_type\": \"default\",\r\n\t\t\t\t\t *      \"feeds_required\": false,\r\n\t\t\t\t\t *      \"scoring_supported\": false,\r\n\t\t\t\t\t *      \"arguments\": [],\r\n\t\t\t\t\t *      \"module_name\": \"Feeds\",\r\n\t\t\t\t\t *      \"business_card_field_limit\": 0,\r\n\t\t\t\t\t *      \"parent_module\": {}\r\n\t\t\t\t\t *    },\r\n\t\t\t\t\t *    {\r\n\t\t\t\t\t *      \"global_search_supported\": true,\r\n\t\t\t\t\t *      \"deletable\": true,\r\n\t\t\t\t\t *      \"creatable\": true,\r\n\t\t\t\t\t *      \"modified_time\": \"2018-10-23T11:39:36+05:30\",\r\n\t\t\t\t\t *      \"plural_label\": \"Leads\",\r\n\t\t\t\t\t *      \"presence_sub_menu\": true,\r\n\t\t\t\t\t *      \"id\": \"457154000000000125\",\r\n\t\t\t\t\t *      \"visible\": true,\r\n\t\t\t\t\t *      \"visibility\": 1,\r\n\t\t\t\t\t *      \"convertable\": true,\r\n\t\t\t\t\t *      \"editable\": true,\r\n\t\t\t\t\t *      \"profiles\": [{\r\n\t\t\t\t\t *          \"name\": \"Administrator\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015972\"\r\n\t\t\t\t\t *        },\r\n\t\t\t\t\t *        {\r\n\t\t\t\t\t *          \"name\": \"Standard\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015975\"\r\n\t\t\t\t\t *        }\r\n\t\t\t\t\t *      ],\r\n\t\t\t\t\t *      \"filter_supported\": true,\r\n\t\t\t\t\t *      \"web_link\": null,\r\n\t\t\t\t\t *      \"sequence_number\": 4,\r\n\t\t\t\t\t *      \"singular_label\": \"Lead\",\r\n\t\t\t\t\t *      \"viewable\": true,\r\n\t\t\t\t\t *      \"api_supported\": true,\r\n\t\t\t\t\t *      \"api_name\": \"Leads\",\r\n\t\t\t\t\t *      \"quick_create\": true,\r\n\t\t\t\t\t *      \"modified_by\": {\r\n\t\t\t\t\t *        \"name\": \"NareshAutomation\",\r\n\t\t\t\t\t *        \"id\": \"457154000000148011\"\r\n\t\t\t\t\t *      },\r\n\t\t\t\t\t *      \"generated_type\": \"default\",\r\n\t\t\t\t\t *      \"feeds_required\": false,\r\n\t\t\t\t\t *      \"scoring_supported\": true,\r\n\t\t\t\t\t *      \"arguments\": [],\r\n\t\t\t\t\t *      \"module_name\": \"Leads\",\r\n\t\t\t\t\t *      \"business_card_field_limit\": 5,\r\n\t\t\t\t\t *      \"parent_module\": {}\r\n\t\t\t\t\t *    },\r\n\t\t\t\t\t *    {\r\n\t\t\t\t\t *      \"global_search_supported\": true,\r\n\t\t\t\t\t *      \"deletable\": true,\r\n\t\t\t\t\t *      \"creatable\": true,\r\n\t\t\t\t\t *      \"modified_time\": null,\r\n\t\t\t\t\t *      \"plural_label\": \"Accounts\",\r\n\t\t\t\t\t *      \"presence_sub_menu\": true,\r\n\t\t\t\t\t *      \"id\": \"457154000000000127\",\r\n\t\t\t\t\t *      \"visible\": true,\r\n\t\t\t\t\t *      \"visibility\": 1,\r\n\t\t\t\t\t *      \"convertable\": false,\r\n\t\t\t\t\t *      \"editable\": true,\r\n\t\t\t\t\t *      \"profiles\": [{\r\n\t\t\t\t\t *          \"name\": \"Administrator\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015972\"\r\n\t\t\t\t\t *        },\r\n\t\t\t\t\t *        {\r\n\t\t\t\t\t *          \"name\": \"Standard\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015975\"\r\n\t\t\t\t\t *        }\r\n\t\t\t\t\t *      ],\r\n\t\t\t\t\t *      \"filter_supported\": true,\r\n\t\t\t\t\t *      \"web_link\": null,\r\n\t\t\t\t\t *      \"sequence_number\": 5,\r\n\t\t\t\t\t *      \"singular_label\": \"Account\",\r\n\t\t\t\t\t *      \"viewable\": true,\r\n\t\t\t\t\t *      \"api_supported\": true,\r\n\t\t\t\t\t *      \"api_name\": \"Accounts\",\r\n\t\t\t\t\t *      \"quick_create\": true,\r\n\t\t\t\t\t *      \"modified_by\": null,\r\n\t\t\t\t\t *      \"generated_type\": \"default\",\r\n\t\t\t\t\t *      \"feeds_required\": false,\r\n\t\t\t\t\t *      \"scoring_supported\": true,\r\n\t\t\t\t\t *      \"arguments\": [],\r\n\t\t\t\t\t *      \"module_name\": \"Accounts\",\r\n\t\t\t\t\t *      \"business_card_field_limit\": 5,\r\n\t\t\t\t\t *      \"parent_module\": {}\r\n\t\t\t\t\t *    }\r\n\t\t\t\t\t *  ]\r\n\t\t\t\t\t *}\r\n\t\t\t\t\t *\r\n                     */\r\n                    getModules: function () {\r\n                        const data = {\r\n                            type: 'MODULE_LIST'\r\n                        }\r\n                        return getMeta(data)\r\n                    },\r\n                    /**\r\n                     * @function getAssignmentRules\r\n                     * @memberof ZOHO.CRM.META\r\n                     * @description get Assignment rules details\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @returns {Promise} Resolved with data of Assignment rules matching with Entity\r\n                     * @example\r\n                     * ZOHO.CRM.META.getAssignmentRules({\"Entity\":\"Contacts\"}).then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     *\r\n                     *\r\n                     * //prints\r\n                     *\r\n                     *\r\n                     *{\r\n                     *  \"assignment_rules\": [\r\n                     *    {\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Leads\",\r\n                     *        \"id\": \"13000000000039\"\r\n                     *      },\r\n                     *      \"name\": \"Lead rule\",\r\n                     *      \"id\": \"13000000036019\",\r\n                     *      \"created_date\": \"2017-05-12\",\r\n                     *      \"created_by\": {\r\n                     *        \"name\": \" uk\",\r\n                     *        \"id\": \"13000000030480\"\r\n                     *      }\r\n                     *    },\r\n                     *    {\r\n                     *      \"module\": {\r\n                     *       \"api_name\": \"Leads\",\r\n                     *        \"id\": \"13000000000039\"\r\n                     *     },\r\n                     *      \"name\": \"Lead second entry\",\r\n                     *     \"id\": \"13000000036045\",\r\n                     *      \"created_date\": \"2017-05-12\",\r\n                     *      \"created_by\": {\r\n                     *        \"name\": \" uk\",\r\n                     *        \"id\": \"13000000030480\"\r\n                     *      }\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    getAssignmentRules: function (data) {\r\n                        data.type = 'ASSIGNMENT_RULES'\r\n                        return getMeta(data)\r\n                    },\r\n\r\n                    /**\r\n                     * @function getLayouts\r\n                     * @memberof ZOHO.CRM.META\r\n                     * @description get Layout details of a module\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {String} [config.Id] - layout ID.\r\n                     * @returns {Promise} Resolved with data of Assignment rules matching with Entity\r\n                     * @example\r\n                     * ZOHO.CRM.META.getLayouts({\"Entity\":\"Contacts\"}).then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     * @example\r\n                     * ZOHO.CRM.META.getLayouts({\"Entity\":\"Contacts\",\"LayoutId\":\"5000000000169\"}).then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     * @example\r\n                     * //prints\r\n                     *{\r\n                     *  \"layouts\": [\r\n                     *    {\r\n                     *      \"created_time\": null,\r\n                     *      \"modified_time\": null,\r\n                     *      \"visible\": true,\r\n                     *      \"name\": \"Standard\",\r\n                     *      \"modified_by\": null,\r\n                     *      \"profiles\": [\r\n                     *        {\r\n                     *          \"default\": true,\r\n                     *          \"name\": \"Administrator\",\r\n                     *          \"id\": \"3000000029725\"\r\n                     *        },\r\n                     *        {\r\n                     *          \"default\": true,\r\n                     *          \"name\": \"Standard\",\r\n                     *          \"id\": \"3000000029728\"\r\n                     *        }\r\n                     *      ],\r\n                     *      \"id\": \"3000000000169\",\r\n                     *      \"created_by\": null,\r\n                     *      \"sections\": [\r\n                     *        {\r\n                     *          \"display_label\": \"Contact Information\",\r\n                     *          \"sequence_number\": 1,\r\n                     *          \"column_count\": 2,\r\n                     *          \"name\": \"Contact Information\",\r\n                     *          \"fields\": [\r\n                     *            {\r\n                     *              \"json_type\": \"jsonobject\",\r\n                     *              \"field_label\": \"Contact Owner\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 8,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000673\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"SMOWNERID\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 1,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Owner\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"ownerlookup\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Lead Source\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 2,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000675\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"LEADSOURCE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 2,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Lead_Source\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"picklist\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [\r\n                     *                {\r\n                     *                  \"display_value\": \"-None-\",\r\n                     *                  \"sequence_number\": 1,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"-None-\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Advertisement\",\r\n                     *                  \"sequence_number\": 2,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Advertisement\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Cold Call\",\r\n                     *                  \"sequence_number\": 3,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Cold Call\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Employee Referral\",\r\n                     *                  \"sequence_number\": 4,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Employee Referral\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"External Referral\",\r\n                     *                  \"sequence_number\": 5,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"External Referral\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Partner\",\r\n                     *                  \"sequence_number\": 6,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Partner\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Public Relations\",\r\n                     *                  \"sequence_number\": 7,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Public Relations\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Trade Show\",\r\n                     *                  \"sequence_number\": 8,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Trade Show\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Web Form\",\r\n                     *                  \"sequence_number\": 9,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Web Form\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Search Engine\",\r\n                     *                  \"sequence_number\": 10,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Search Engine\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Facebook\",\r\n                     *                  \"sequence_number\": 11,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Facebook\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Twitter\",\r\n                     *                  \"sequence_number\": 12,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Twitter\"\r\n                     *                }\r\n                     *              ],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"First Name\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 27,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000677\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 40,\r\n                     *              \"column_name\": \"FIRSTNAME\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": false,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": true,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 3,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"First_Name\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Last Name\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": true,\r\n                     *              \"ui_type\": 127,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000679\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 80,\r\n                     *              \"column_name\": \"LASTNAME\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": true,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 4,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Last_Name\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Full Name\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000681\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 80,\r\n                     *              \"column_name\": \"FULLNAME\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": false,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": false\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 5,\r\n                     *              \"show_type\": 0,\r\n                     *              \"api_name\": \"Full_Name\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"jsonobject\",\r\n                     *              \"field_label\": \"Account Name\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 4,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000683\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {\r\n                     *                \"display_label\": \"Contacts\",\r\n                     *                \"api_name\": \"Contacts\",\r\n                     *                \"module\": {\r\n                     *                  \"api_name\": \"Accounts\",\r\n                     *                  \"id\": \"3000000000043\"\r\n                     *                },\r\n                     *                \"id\": \"3000000003935\"\r\n                     *              },\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"ACCOUNTID\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": true,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 6,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Account_Name\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"lookup\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"jsonobject\",\r\n                     *              \"field_label\": \"Vendor Name\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 9,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000685\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {\r\n                     *                \"display_label\": \"Contacts\",\r\n                     *                \"api_name\": \"Contacts\",\r\n                     *                \"module\": {\r\n                     *                  \"api_name\": \"Vendors\",\r\n                     *                  \"id\": \"3000000000099\"\r\n                     *                },\r\n                     *                \"id\": \"3000000012263\"\r\n                     *              },\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"VENDORID\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 7,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Vendor_Name\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"lookup\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Email\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 25,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000687\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 100,\r\n                     *              \"column_name\": \"EMAIL\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": true,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 8,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Email\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"email\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Title\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000691\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 100,\r\n                     *              \"column_name\": \"TITLE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 10,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Title\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Department\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000693\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 50,\r\n                     *              \"column_name\": \"DEPARTMENT\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 11,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Department\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Phone\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 33,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000695\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 50,\r\n                     *              \"column_name\": \"PHONE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": true,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 12,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Phone\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"phone\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Home Phone\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 33,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000697\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"HOMEPHONE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 13,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Home_Phone\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"phone\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Other Phone\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 33,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000699\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"OTHERPHONE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 14,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Other_Phone\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"phone\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Fax\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 35,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000701\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"FAX\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 15,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Fax\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Mobile\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 33,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000703\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"MOBILE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 16,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Mobile\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"phone\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Date of Birth\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 24,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000705\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 20,\r\n                     *              \"column_name\": \"BIRTHDAY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 17,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Date_of_Birth\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"date\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Assistant\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000707\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 50,\r\n                     *              \"column_name\": \"ASSISTANT\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 18,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Assistant\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Asst Phone\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 33,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000709\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"ASSISTANTPHONE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 19,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Asst_Phone\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"phone\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Reports To\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000711\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 50,\r\n                     *              \"column_name\": \"REPORTSTO\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 20,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Reports_To\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"boolean\",\r\n                     *              \"field_label\": \"Email Opt Out\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 301,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000713\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 5,\r\n                     *              \"column_name\": \"EMAILOPTOUT\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": false,\r\n                     *              \"sequence_number\": 21,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Email_Opt_Out\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"boolean\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Skype ID\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 37,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000715\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 50,\r\n                     *              \"column_name\": \"SKYPEIDENTITY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 22,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Skype_ID\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"jsonobject\",\r\n                     *              \"field_label\": \"Created By\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 20,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000717\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"SMCREATORID\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": false,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": false\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 23,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Created_By\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"ownerlookup\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"jsonobject\",\r\n                     *              \"field_label\": \"Modified By\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 20,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000719\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"MODIFIEDBY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": false,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": false\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 24,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Modified_By\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"ownerlookup\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Created Time\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 200,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000721\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"CREATEDTIME\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": false,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": false\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 25,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Created_Time\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"datetime\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Modified Time\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 200,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000723\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"MODIFIEDTIME\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": false,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": false\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 26,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Modified_Time\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"datetime\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Salutation\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 2,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000727\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"SALUTATION\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": false,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 28,\r\n                     *              \"show_type\": 8,\r\n                     *              \"api_name\": \"Salutation\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"picklist\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [\r\n                     *                {\r\n                     *                  \"display_value\": \"-None-\",\r\n                     *                  \"sequence_number\": 1,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"-None-\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Mr.\",\r\n                     *                  \"sequence_number\": 2,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Mr.\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Mrs.\",\r\n                     *                  \"sequence_number\": 3,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Mrs.\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Ms.\",\r\n                     *                  \"sequence_number\": 4,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Ms.\"\r\n                     *                }\r\n                     *              ],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"boolean\",\r\n                     *              \"field_label\": \"Add to QuickBooks\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 301,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000729\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 5,\r\n                     *              \"column_name\": \"ADDTOQUICKBOOKS\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": false,\r\n                     *              \"sequence_number\": 29,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Add_to_QuickBooks\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"boolean\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Secondary Email\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 25,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000731\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 100,\r\n                     *              \"column_name\": \"ADDN_EMAIL\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 30,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Secondary_Email\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"email\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Last Activity Time\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 786,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000737\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"LASTACTIVITYTIME\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": false,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": false\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 33,\r\n                     *              \"show_type\": 8,\r\n                     *              \"api_name\": \"Last_Activity_Time\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"datetime\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Twitter\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 22,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000739\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 50,\r\n                     *              \"column_name\": \"TWITTER\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 34,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Twitter\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            }\r\n                     *          ]\r\n                     *        },\r\n                     *        {\r\n                     *          \"display_label\": \"Address Information\",\r\n                     *          \"sequence_number\": 2,\r\n                     *          \"column_count\": 2,\r\n                     *          \"name\": \"Address Information\",\r\n                     *          \"fields\": [\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Mailing Street\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000747\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 250,\r\n                     *              \"column_name\": \"MAILINGSTREET\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 1,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Mailing_Street\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Other Street\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000749\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 250,\r\n                     *              \"column_name\": \"OTHERSTREET\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 2,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Other_Street\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Mailing City\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000751\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"MAILINGCITY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 3,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Mailing_City\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Other City\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000753\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"OTHERCITY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 4,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Other_City\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Mailing State\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000755\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"MAILINGSTATE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 5,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Mailing_State\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Other State\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000757\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"OTHERSTATE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 6,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Other_State\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Mailing Zip\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000759\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"MAILINGZIP\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 7,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Mailing_Zip\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Other Zip\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000761\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"OTHERZIP\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 8,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Other_Zip\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Mailing Country\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000763\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"MAILINGCOUNTRY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 9,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Mailing_Country\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Other Country\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000765\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"OTHERCOUNTRY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 10,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Other_Country\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            }\r\n                     *          ]\r\n                     *        },\r\n                     *        {\r\n                     *          \"display_label\": \"Description Information\",\r\n                     *          \"sequence_number\": 3,\r\n                     *          \"column_count\": 1,\r\n                     *          \"name\": \"Description Information\",\r\n                     *          \"fields\": [\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Description\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 3,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000767\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 1000,\r\n                     *              \"column_name\": \"DESCRIPTION\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 1,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Description\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"textarea\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            }\r\n                     *          ]\r\n                     *        },\r\n                     *        {\r\n                     *          \"display_label\": \"Score Summary\",\r\n                     *          \"sequence_number\": 4,\r\n                     *          \"column_count\": 2,\r\n                     *          \"name\": \"Score Summary\",\r\n                     *          \"fields\": []\r\n                     *        }\r\n                     *      ],\r\n                     *      \"status\": 0\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    getLayouts: function (data) {\r\n                        data.id = data.id ? data.id : data.LayoutId\r\n                        data.type = data.Id ? 'LAYOUT' : 'LAYOUTS'\r\n                        return getMeta(data)\r\n                    },\r\n\r\n                    /**\r\n                     * @function getRelatedList\r\n                     * @memberof ZOHO.CRM.META\r\n                     * @description get RelatedList meta info of a module\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @returns {Promise} Resolved with data of Assignment rules matching with Entity\r\n                     * @example\r\n                     * ZOHO.CRM.META.getRelatedList({\"Entity\":\"Contacts\"}).then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     *  //prints\r\n                     *{\r\n                     *  \"related_lists\": [\r\n                     *    {\r\n                     *      \"display_label\": \"Attachments\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Attachments\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Attachments\",\r\n                     *        \"id\": \"3000000000111\"\r\n                     *      },\r\n                     *      \"name\": \"Attachments\",\r\n                     *      \"id\": \"3000000003968\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Attachments\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Deals\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Deals\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Deals\",\r\n                     *        \"id\": \"3000000000047\"\r\n                     *      },\r\n                     *      \"name\": \"Deals\",\r\n                     *      \"id\": \"3000000003974\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Deals\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Notes\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Notes\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Notes\",\r\n                     *        \"id\": \"3000000000069\"\r\n                     *      },\r\n                     *      \"name\": \"Notes\",\r\n                     *      \"id\": \"3000000003971\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Notes\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Open Activities\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Activities\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Activities\",\r\n                     *        \"id\": \"3000000000049\"\r\n                     *      },\r\n                     *      \"name\": \"Activities\",\r\n                     *      \"id\": \"3000000003965\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Activities\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Closed Activities\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Activities_History\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Activities\",\r\n                     *        \"id\": \"3000000000049\"\r\n                     *      },\r\n                     *      \"name\": \"Activities History\",\r\n                     *      \"id\": \"3000000003962\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Activities_History\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Products\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Products\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Products\",\r\n                     *        \"id\": \"3000000000097\"\r\n                     *      },\r\n                     *      \"name\": \"Products\",\r\n                     *      \"id\": \"3000000003977\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Products\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Invited Events\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Invited_Events\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Events\",\r\n                     *        \"id\": \"3000000000065\"\r\n                     *      },\r\n                     *      \"name\": \"Invited Events\",\r\n                     *      \"id\": \"3000000004001\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Invited_Events\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Cases\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Cases\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Cases\",\r\n                     *        \"id\": \"3000000000093\"\r\n                     *      },\r\n                     *      \"name\": \"Cases\",\r\n                     *      \"id\": \"3000000003980\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Cases\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Quotes\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Quotes\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Quotes\",\r\n                     *        \"id\": \"3000000000103\"\r\n                     *      },\r\n                     *      \"name\": \"Quotes\",\r\n                     *      \"id\": \"3000000003983\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Quotes\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Sales Orders\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"SalesOrders\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Sales_Orders\",\r\n                     *        \"id\": \"3000000000105\"\r\n                     *      },\r\n                     *      \"name\": \"SalesOrders\",\r\n                     *      \"id\": \"3000000003986\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/SalesOrders\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Purchase Orders\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"PurchaseOrders\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Purchase_Orders\",\r\n                     *        \"id\": \"3000000000107\"\r\n                     *      },\r\n                     *      \"name\": \"PurchaseOrders\",\r\n                     *      \"id\": \"3000000003989\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/PurchaseOrders\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Invoices\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Invoices\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Invoices\",\r\n                     *        \"id\": \"3000000000109\"\r\n                     *      },\r\n                     *      \"name\": \"Invoices\",\r\n                     *      \"id\": \"3000000003995\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Invoices\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Campaigns\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Campaigns\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Campaigns\",\r\n                     *        \"id\": \"3000000000055\"\r\n                     *      },\r\n                     *      \"name\": \"Campaigns\",\r\n                     *      \"id\": \"3000000003998\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Campaigns\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Social\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Social\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Social\",\r\n                     *        \"id\": \"3000000000087\"\r\n                     *      },\r\n                     *      \"name\": \"Social\",\r\n                     *      \"id\": \"3000000004067\",\r\n                     *      \"href\": null,\r\n                     *      \"type\": \"default\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    getRelatedList: function (data) {\r\n                        data.type = 'RELATED_LIST'\r\n                        return getMeta(data)\r\n                    },\r\n\r\n                    /**\r\n                     * @function getCustomViews\r\n                     * @memberof ZOHO.CRM.META\r\n                     * @description get Custom Views of a module\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {String} [config.Id] - layout ID.\r\n                     * @returns {Promise} Resolved with data of Assignment rules matching with Entity\r\n                     * @example\r\n                     * ZOHO.CRM.META.getCustomViews({\"Entity\":\"Contacts\"}).then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     * //prints\r\n                     *{\r\n                     * \"categories\": [\r\n                     *   {\r\n                     *     \"display_value\": \"Created By Me\",\r\n                     *     \"actual_value\": \"created_by_me\"\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"Shared With Me\",\r\n                     *     \"actual_value\": \"shared_with_me\"\r\n                     *   }\r\n                     * ],\r\n                     * \"custom_views\": [\r\n                     *   {\r\n                     *     \"display_value\": \"All Contacts\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": true,\r\n                     *     \"system_name\": \"ALLVIEWS\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"All Contacts\",\r\n                     *     \"id\": \"3000000028135\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"Mailing Labels\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"ALLVIEWS\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"Mailing Labels\",\r\n                     *     \"id\": \"3000000028144\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"My Contacts\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"MYVIEWS\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"My Contacts\",\r\n                     *     \"id\": \"3000000028333\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"New Last Week\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"lastweek\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"New Last Week\",\r\n                     *     \"id\": \"3000000028183\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"New This Week\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"thisweek\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"New This Week\",\r\n                     *     \"id\": \"3000000028171\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"Recently Created Contacts\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"RECENTLYCREATED\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"Recently Created Contacts\",\r\n                     *     \"id\": \"3000000028195\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"Recently Modified Contacts\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"RECENTLYMODIFIED\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"Recently Modified Contacts\",\r\n                     *     \"id\": \"3000000028207\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"Unread Contacts\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"UNREADVIEWS\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"Unread Contacts\",\r\n                     *     \"id\": \"3000000028156\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   }\r\n                     * ],\r\n                     * \"info\": {\r\n                     *   \"per_page\": 8,\r\n                     *   \"default\": \"3000000028135\",\r\n                     *   \"count\": 8,\r\n                     *   \"page\": 1,\r\n                     *   \"more_records\": false\r\n                     * }\r\n                     *}\r\n                     *@example\r\n                     *ZOHO.CRM.META.getCustomViews({\"Entity\":\"Contacts\",\"Id\":\"3000000028135\"}).then(function(data){\r\n                     *\tconsole.log(data);\r\n                     *});\r\n                     * //prints\r\n                     *{\r\n                     * \"categories\": [\r\n                     *   {\r\n                     *     \"display_value\": \"Created By Me\",\r\n                     *     \"actual_value\": \"created_by_me\"\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"Shared With Me\",\r\n                     *     \"actual_value\": \"shared_with_me\"\r\n                     *   }\r\n                     * ],\r\n                     * \"custom_views\": [\r\n                     *   {\r\n                     *     \"display_value\": \"All Contacts\",\r\n                     *     \"criteria\": null,\r\n                     *     \"system_name\": \"ALLVIEWS\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"sort_by\": null,\r\n                     *     \"offline\": true,\r\n                     *     \"default\": true,\r\n                     *     \"name\": \"All Contacts\",\r\n                     *     \"id\": \"3000000028135\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"fields\": [\r\n                     *       {\r\n                     *         \"api_name\": \"Full_Name\",\r\n                     *         \"id\": \"3000000000681\"\r\n                     *       },\r\n                     *       {\r\n                     *         \"api_name\": \"Account_Name\",\r\n                     *         \"id\": \"3000000000683\"\r\n                     *       },\r\n                     *       {\r\n                     *         \"api_name\": \"Email\",\r\n                     *         \"id\": \"3000000000687\"\r\n                     *       },\r\n                     *       {\r\n                     *         \"api_name\": \"Phone\",\r\n                     *         \"id\": \"3000000000695\"\r\n                     *       },\r\n                     *       {\r\n                     *         \"api_name\": \"Owner\",\r\n                     *         \"id\": \"3000000000673\"\r\n                     *       }\r\n                     *     ],\r\n                     *     \"favorite\": null,\r\n                     *     \"sort_order\": null\r\n                     *   }\r\n                     * ]\r\n                     *}\r\n                     *\r\n                     */\r\n                    getCustomViews: function (data) {\r\n                        data.type = data.Id ? 'CUSTOM_VIEW' : 'CUSTOM_VIEWS'\r\n                        return getMeta(data)\r\n                    }\r\n                },\r\n                /**\r\n                 * @namespace ZOHO.CRM.API\r\n                 */\r\n                API: {\r\n                    /**\r\n                     * @function addNotes\r\n                     * @description Add Notes to a record\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {Long} config.RecordID - RecordID to associate the notes.\r\n                     * @param {String} config.Title - Notes Title.\r\n                     * @param {String} config.Content - Notes Content.\r\n                     * @returns {Promise} Resolved with notes creation status\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.addNotes({Entity:\"Leads\",RecordID:\"1475615000000292033\",Title:\"Notes Title\",Content:\"TitleContent\"}).then(function(data){\r\n                     *  console.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"Modified_Time\": \"2017-12-20T14:08:56+05:30\",\r\n                     *        \"Modified_By\": {\r\n                     *          \"name\": \"NareshTesting\",\r\n                     *          \"id\": \"1000000031157\"\r\n                     *        },\r\n                     *        \"Created_Time\": \"2017-12-20T14:08:56+05:30\",\r\n                     *        \"id\": \"1000000044101\",\r\n                     *        \"Created_By\": {\r\n                     *          \"name\": \"NareshTesting\",\r\n                     *          \"id\": \"1000000031157\"\r\n                     *        }\r\n                     *      },\r\n                     *      \"message\": \"record added\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    addNotes: function (data) {\r\n                        const Entity = data.Entity\r\n                        const RelatedEntity = 'NOTES'\r\n                        const RecordID = data.RecordID\r\n                        const content = {\r\n                            data: [{\r\n                                Note_Title: data.Title,\r\n                                Note_Content: data.Content\r\n                            }]\r\n                        }\r\n                        return createRecord(Entity, content, RecordID, RelatedEntity)\r\n                    },\r\n                    addNotesAttachment: function (data) {\r\n                        const Entity = data.Entity\r\n                        const RecordID = data.RecordID\r\n                        const RelatedRecordID = data.RelatedRecordID\r\n                        const APIData = {\r\n                            Files: {\r\n                                FileName: File.Name,\r\n                                FileData: File.Content\r\n                            }\r\n                        }\r\n                        return updateNotes(Entity, RecordID, RelatedRecordID, APIData)\r\n                    },\r\n                    /**\r\n                     * @function insertRecord\r\n                     * @description Insert record to a modue\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {list} config.Trigger - The trigger input can be \"workflow\", \"approval\" or \"blueprint\". If the trigger is not mentioned, the workflows, approvals and blueprints related to the API will get executed. Enter the trigger value as [] to not execute the workflows\r\n                     * @param {Object} config.APIData - RecordID to associate the notes.\r\n                     * @return {Promise} Resolved with response data\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * var recordData = {\r\n                     *         \"Company\": \"Zylker\",\r\n                     *         \"Last_Name\": \"Peterson\"\r\n                     *   }\r\n                     * ZOHO.CRM.API.insertRecord({Entity:\"Leads\",APIData:recordData,Trigger:[\"workflow\"]}).then(function(data){\r\n                     *\tconsole.log(data);\r\n                     *\t});\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"Modified_Time\": \"2017-12-22T03:24:39+05:30\",\r\n                     *        \"Modified_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        },\r\n                     *        \"Created_Time\": \"2017-12-22T03:24:39+05:30\",\r\n                     *        \"id\": \"3000000040011\",\r\n                     *        \"Created_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        }\r\n                     *      },\r\n                     *      \"message\": \"record added\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     * @example\r\n                     * var data = [\r\n                     * {\r\n                     *         \"Company\": \"ZohoCorp\",\r\n                     *         \"Last_Name\": \"Babu\"\r\n                     * },\r\n                     * {\r\n                     * \t\"Company\": \"ZohoCorp\",\r\n                     *     \t\"Last_Name\": \"Naresh\"\r\n                     * }\r\n                     * ];\r\n                     * ZOHO.CRM.API.insertRecord({Entity:\"Leads\",APIData:data,Trigger:[\"workflow\"]}).then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"Modified_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *        \"Modified_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        },\r\n                     *        \"Created_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *        \"id\": \"3000000040015\",\r\n                     *        \"Created_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        }\r\n                     *      },\r\n                     *      \"message\": \"record added\",\r\n                     *      \"status\": \"success\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"Modified_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *        \"Modified_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        },\r\n                     *        \"Created_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *        \"id\": \"3000000040016\",\r\n                     *        \"Created_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        }\r\n                     *      },\r\n                     *      \"message\": \"record added\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    insertRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const APIData = data.APIData\r\n                        APIData.trigger = data.Trigger\r\n                        return createRecord(Entity, APIData)\r\n                    },\r\n                    /**\r\n                     * @function upsertRecord\r\n                     * @description Insert record or update matching existing record\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {list} config.Trigger - The trigger input can be \"workflow\", \"approval\" or \"blueprint\". If the trigger is not mentioned, the workflows, approvals and blueprints related to the API will get executed. Enter the trigger value as [] to not execute the workflows\r\n                     * @param {Object} config.APIData - insert json details\r\n                     * @param {Object} config.duplicate_check_fields  - this param will update existing record,add multiple fields with comma separated\r\n                     * @return {Promise} Resolved with response data\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     *var data = [\r\n                     *{\r\n                     *        \"Company\": \"zoho\",\r\n                     *        \"Last_Name\": \"zylker\",\r\n                     *    \"Email\":\"zylker@gmail.com\",\r\n                     *    \"Mobile\":\"1234567890\",\r\n                     *    \"Website\":\"https://www.zoho.com\"\r\n                     *\r\n                     *},\r\n                     *{\r\n                     *  \"Company\": \"zoho\",\r\n                     *      \"Last_Name\": \"zylker\",\r\n                     *  \"Email\":\"zylkder@gmail.com\",\r\n                     *  \"Website\":\"http://www.google.com\",\r\n                     *  \"Mobile\":\"8393749473934739\"\r\n                     *},\r\n                     *];\r\n                     *ZOHO.CRM.API.upsertRecord({Entity:\"Leads\",APIData:data,duplicate_check_fields:[\"Website\",\"Mobile\"],Trigger : [\"workflow\"]}).then(function(data){\r\n                     *  console.log(data);\r\n                     *});\r\n                     *\r\n                     * //prints\r\n                     *[\r\n                     *  {\r\n                     *    \"code\": \"SUCCESS\",\r\n                     *    \"duplicate_field\": \"Mobile\",\r\n                     *    \"action\": \"update\",\r\n                     *    \"details\": {\r\n                     *      \"Modified_Time\": \"2018-10-11T12:06:47+05:30\",\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"test \",\r\n                     *        \"id\": \"111134000000033383\"\r\n                     *      },\r\n                     *      \"Created_Time\": \"2018-10-11T11:55:10+05:30\",\r\n                     *      \"id\": \"111134000000036225\",\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"test \",\r\n                     *        \"id\": \"111134000000033383\"\r\n                     *      }\r\n                     *    },\r\n                     *    \"message\": \"record updated\",\r\n                     *    \"status\": \"success\"\r\n                     *  },\r\n                     *  {\r\n                     *    \"code\": \"SUCCESS\",\r\n                     *    \"duplicate_field\": \"Website\",\r\n                     *    \"action\": \"update\",\r\n                     *    \"details\": {\r\n                     *      \"Modified_Time\": \"2018-10-11T12:06:47+05:30\",\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"test \",\r\n                     *        \"id\": \"111134000000033383\"\r\n                     *      },\r\n                     *      \"Created_Time\": \"2018-10-11T11:55:10+05:30\",\r\n                     *      \"id\": \"111134000000036226\",\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"test \",\r\n                     *        \"id\": \"111134000000033383\"\r\n                     *      }\r\n                     *    },\r\n                     *    \"message\": \"record updated\",\r\n                     *    \"status\": \"success\"\r\n                     *  }\r\n                     *]\r\n                     */\r\n                    upsertRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const APIData = data.APIData\r\n                        APIData.trigger = data.Trigger\r\n                        APIData.action = 'UPSERT'\r\n                        if (data.duplicate_check_fields && data.duplicate_check_fields instanceof Array) {\r\n                            APIData.duplicate_check_fields = data.duplicate_check_fields.join(',')\r\n                        }\r\n                        return createRecord(Entity, APIData)\r\n                    },\r\n                    /**\r\n                     * @function getRecord\r\n                     * @description get all Details of a record\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {String} config.RecordID - RecordID to associate the notes.\r\n                     * @return {Promise} Resolved with data of record matching with RecordID\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.getRecord({Entity:\"Leads\",RecordID:\"1000000030132\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"Owner\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Company\": \"ZohoCorp\",\r\n                     *      \"Email\": null,\r\n                     *      \"Description\": null,\r\n                     *      \"$currency_symbol\": \"$\",\r\n                     *      \"$photo_id\": null,\r\n                     *      \"Website\": null,\r\n                     *      \"Twitter\": null,\r\n                     *      \"$upcoming_activity\": null,\r\n                     *      \"Salutation\": null,\r\n                     *      \"Last_Activity_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *      \"First_Name\": null,\r\n                     *      \"Full_Name\": \"Naresh\",\r\n                     *      \"Lead_Status\": null,\r\n                     *      \"Industry\": null,\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Skype_ID\": null,\r\n                     *      \"$converted\": false,\r\n                     *      \"$process_flow\": false,\r\n                     *      \"Phone\": null,\r\n                     *      \"Street\": null,\r\n                     *      \"Zip_Code\": null,\r\n                     *      \"id\": \"3000000040016\",\r\n                     *      \"Email_Opt_Out\": false,\r\n                     *      \"$approved\": true,\r\n                     *      \"Designation\": null,\r\n                     *      \"$approval\": {\r\n                     *        \"delegate\": false,\r\n                     *        \"approve\": false,\r\n                     *        \"reject\": false\r\n                     *      },\r\n                     *      \"Modified_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *      \"Created_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *      \"$converted_detail\": {},\r\n                     *      \"$followed\": false,\r\n                     *      \"$editable\": true,\r\n                     *      \"City\": null,\r\n                     *      \"No_of_Employees\": 0,\r\n                     *      \"Mobile\": null,\r\n                     *      \"Last_Name\": \"Naresh\",\r\n                     *      \"State\": null,\r\n                     *      \"$status\": \"cv_1\",\r\n                     *      \"Lead_Source\": null,\r\n                     *      \"Country\": null,\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Fax\": null,\r\n                     *      \"Annual_Revenue\": 0,\r\n                     *      \"Secondary_Email\": null\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    getRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const RecordID = data.RecordID\r\n                        return getRecord(Entity, RecordID)\r\n                    },\r\n                    /**\r\n                    * @function getBluePrint\r\n                    * @description Get blueprint details\r\n                    * @param {object} config - configuration object\r\n                    * @param {String} config.Entity - SysRefName of the module.\r\n                    * @param {String} config.RecordID - RecordID to associate the notes.\r\n                    * @return {Promise} Resolved with data of record matching with RecordID\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    * var config =\r\n                    *{\r\n                    *  \"Entity\": \"Leads\",\r\n                    *  \"RecordID\": \"111126000000036019\"\r\n                    *}\r\n                    *\r\n                    *\r\n                    *ZOHO.CRM.API.getBluePrint(config).then(function(data){\r\n                    *  console.log(data)\r\n                    *})\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"blueprint\": {\r\n                    *    \"process_info\": {\r\n                    *      \"field_id\": \"111126000000000885\",\r\n                    *      \"is_continuous\": false,\r\n                    *      \"api_name\": \"Lead_Status\",\r\n                    *      \"continuous\": false,\r\n                    *      \"field_label\": \"Lead Status\",\r\n                    *      \"name\": \"Lprint\",\r\n                    *      \"column_name\": \"STATUS\",\r\n                    *      \"field_value\": \"Pre Qualified\",\r\n                    *      \"id\": \"111126000000035049\",\r\n                    *      \"field_name\": \"Lead Status\"\r\n                    *    },\r\n                    *    \"transitions\": [\r\n                    *      {\r\n                    *        \"next_transitions\": [\r\n                    *          {\r\n                    *            \"name\": \"lost lead\",\r\n                    *            \"id\": \"111126000000035025\"\r\n                    *          }\r\n                    *        ],\r\n                    *        \"data\": {},\r\n                    *        \"next_field_value\": \"Not Qualified\",\r\n                    *        \"name\": \"not qualify\",\r\n                    *        \"criteria_matched\": true,\r\n                    *        \"id\": \"111126000000035019\",\r\n                    *        \"fields\": [],\r\n                    *        \"criteria_message\": null,\r\n                    *        \"percent_partial_save\": 0\r\n                    *      },\r\n                    *      {\r\n                    *        \"next_transitions\": [],\r\n                    *        \"data\": {},\r\n                    *        \"next_field_value\": \"Contacted\",\r\n                    *        \"name\": \"contact\",\r\n                    *        \"criteria_matched\": true,\r\n                    *        \"id\": \"111126000000035007\",\r\n                    *        \"fields\": [],\r\n                    *        \"criteria_message\": null,\r\n                    *        \"percent_partial_save\": 0\r\n                    *      }\r\n                    *    ]\r\n                    *  }\r\n                    *}\r\n                    */\r\n                    getBluePrint: function (data) {\r\n                        const APIData = {\r\n                            Entity: data.Entity,\r\n                            RecordID: data.RecordID,\r\n                            action: 'GET_BLUEPRINT_STATUS'\r\n                        }\r\n                        return getBluePrint(APIData)\r\n                    },\r\n                    /**\r\n                    * @function updateBluePrint\r\n                    * @description update blueprint details for particular record.\r\n                    * @param {Object} config - Configuration Object.\r\n                    * @param {String} config.Entity - SysRefName of the module.\r\n                    * @param {String} config.RecordID - RecordID to associate the notes.\r\n                    * @param {object} config.BlueprintData - blueprint data to update\r\n                    * @return {Promise} Resolved with data of record matching with RecordID\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    * var BlueprintData =\r\n                    *{\r\n                    *  \"blueprint\": [\r\n                    *    {\r\n                    *      \"transition_id\": \"111126000000035019\",\r\n                    *      \"data\": {\r\n                    *        \"Phone\": \"8940372937\",\r\n                    *        \"Notes\": \"Updated via blueprint\"\r\n                    *      }\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    *\r\n                    * update attachment with blueprint\r\n                    *\r\n                    *\r\n                    * var BlueprintData =\r\n                    *{\r\n                    *  \"blueprint\": [\r\n                    *    {\r\n                    *      \"transition_id\": \"1000000031897\",\r\n                    *      \"data\": {\r\n                    *        \"Attachments\": {\r\n                    *          \"$file_id\": [\r\n                    *            \"59cf260313b6907ffc56957f4241bd94ba3e0b6aad53b50f8b38583a859d623a\",\r\n                    *            \"59cf260313b6907ffc56957f4241bd94ba3e0b6aad53b50f8b38583a859d624d\"\r\n                    *          ]\r\n                    *        }\r\n                    *      }\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    * update link with blueprint\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"blueprint\": [\r\n                    *    {\r\n                    *      \"transition_id\": \"2000000031536\",\r\n                    *      \"data\": {\r\n                    *        \"Attachments\": {\r\n                    *          \"$link_url\": \"facebook.com\"\r\n                    *        },\r\n                    *        \"Notes\": \"Dileep checking Notes outside\"\r\n                    *      }\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    *\r\n                    *var config=\r\n                    *{\r\n                    *  Entity:\"Leads\",\r\n                    *  RecordID:\"111126000000036019\",\r\n                    *  BlueprintData:BlueprintData\r\n                    *}\r\n                    *\r\n                    *\r\n                    *ZOHO.CRM.API.updateBluePrint(config).then(function(data){\r\n                    *   console.log(data);\r\n                    *});\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    * {\r\n                    *    \"code\": \"SUCCESS\",\r\n                    *    \"details\": {},\r\n                    *    \"message\": \"transition updated successfully\",\r\n                    *    \"status\": \"success\"\r\n                    * }\r\n                    */\r\n                    updateBluePrint: function (data) {\r\n                        const APIData = {\r\n                            Entity: data.Entity,\r\n                            RecordID: data.RecordID,\r\n                            BlueprintData: data.BlueprintData,\r\n                            action: 'UPDATE_BLUEPRINT_STATUS'\r\n                        }\r\n                        return getBluePrint(APIData)\r\n                    },\r\n                    /**\r\n                    *@function uploadFile\r\n                    *@description upload the files in to zoho server and return appname and id\r\n                    *@memberof ZOHO.CRM.API\r\n                    *@params {object} config - upload file details\r\n                    *@return {Promise} Resolved with data of file\r\n                    *@example\r\n                    *var file = $(\"#attachmentinput\")\r\n                    *var file = document.getElementById(\"attachmentinput\").files[0];\r\n                    *var fileType = file.type;\r\n                    *var config = {\r\n                    *    \"CONTENT_TYPE\": \"multipart\",\r\n                    *    \"PARTS\": [{\r\n                    *        \"headers\": {\r\n                    *            \"Content-Disposition\": \"file;\"\r\n                    *        },\r\n                    *        \"content\": \"__FILE__\"\r\n                    *    }],\r\n                    *    \"FILE\": {\r\n                    *        \"fileParam\": \"content\",\r\n                    *        \"file\": file\r\n                    *    }\r\n\r\n                    *}\r\n                    *\r\n                    *\r\n                    *ZOHO.CRM.API.uploadFile(config).then(function(data) {\r\n                    *    console.log(data);\r\n                    *})\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *{\r\n                    *  \"data\": [\r\n                    *    {\r\n                    *      \"code\": \"SUCCESS\",\r\n                    *      \"details\": {\r\n                    *        \"name\": \"desk.png\",\r\n                    *        \"id\": \"b12bb1b005f171ac797b3773040438ba7da026eb056f272271d511e95581689b\"\r\n                    *      },\r\n                    *      \"message\": \"desk.png uploaded Succeessfully\",\r\n                    *      \"status\": \"success\"\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    */\r\n                    uploadFile: function (data) {\r\n                        return uploadFile(data)\r\n                    },\r\n                    /**\r\n                    *@function getFile\r\n                    *@memberof ZOHO.CRM.API\r\n                    *@description get file from file id\r\n                    *@params {object} config - file id\r\n                    *@return {Promise} Resolved with data of file binary string\r\n                    *@example\r\n                    *var config = {\r\n                    *    id:\"b12bb1b005f171ac797b3773040438ba7da026eb056f272271d511e95581689b\"\r\n                    *}\r\n                    *\r\n                    *\r\n                    *ZOHO.CRM.API.getFile(config);\r\n                    */\r\n                    getFile: function (data) {\r\n                        return getFile(data)\r\n                    },\r\n                    /**\r\n                     * @function getAllRecords\r\n                     * @description get list of all records in a module\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {String} [config.sort_order] - To sort records. allowed values {asc|desc}\r\n                     * @param {String} [config.converted] - To get the list of converted records\r\n                     * @param {String} [config.approved] - To get the list of approved records\r\n                     * @param {String} [config.page] - To get the list of records from the respective pages\r\n                     * @param {String} [config.per_page] - To get the list of records available per page\r\n                     * @return {Promise} Resolved with data of record matching with RecordID\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.getAllRecords({Entity:\"Leads\",sort_order:\"asc\",per_page:2,page:1})\r\n                     *.then(function(data){\r\n                     *    console.log(data)\r\n                     *})\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"Owner\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Company\": \"Testrec1\",\r\n                     *      \"Email\": null,\r\n                     *      \"Description\": null,\r\n                     *      \"$currency_symbol\": \"$\",\r\n                     *      \"$photo_id\": null,\r\n                     *      \"Website\": null,\r\n                     *      \"Twitter\": null,\r\n                     *      \"$upcoming_activity\": null,\r\n                     *      \"Salutation\": null,\r\n                     *      \"Last_Activity_Time\": \"2017-12-16T09:54:37+05:30\",\r\n                     *      \"First_Name\": null,\r\n                     *      \"Full_Name\": \"Testrec1\",\r\n                     *      \"Lead_Status\": null,\r\n                     *      \"Industry\": null,\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Skype_ID\": null,\r\n                     *      \"$converted\": false,\r\n                     *      \"$process_flow\": false,\r\n                     *      \"Phone\": null,\r\n                     *      \"Street\": null,\r\n                     *      \"Zip_Code\": null,\r\n                     *      \"id\": \"3000000032009\",\r\n                     *      \"Email_Opt_Out\": false,\r\n                     *      \"$approved\": true,\r\n                     *      \"Designation\": null,\r\n                     *      \"$approval\": {\r\n                     *        \"delegate\": false,\r\n                     *        \"approve\": false,\r\n                     *        \"reject\": false\r\n                     *      },\r\n                     *      \"Modified_Time\": \"2017-12-16T09:54:37+05:30\",\r\n                     *      \"Created_Time\": \"2017-12-16T09:54:37+05:30\",\r\n                     *      \"$converted_detail\": {},\r\n                     *      \"$followed\": false,\r\n                     *      \"$editable\": true,\r\n                     *      \"City\": null,\r\n                     *      \"No_of_Employees\": null,\r\n                     *      \"Mobile\": null,\r\n                     *      \"Last_Name\": \"Testrec1\",\r\n                     *      \"State\": null,\r\n                     *      \"$status\": \"cv_1\",\r\n                     *      \"Lead_Source\": null,\r\n                     *      \"Country\": null,\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Fax\": null,\r\n                     *      \"Annual_Revenue\": null,\r\n                     *      \"Secondary_Email\": null\r\n                     *    },\r\n                     *    {\r\n                     *      \"Owner\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Company\": \"Testrec2\",\r\n                     *      \"Email\": null,\r\n                     *      \"Description\": null,\r\n                     *      \"$currency_symbol\": \"$\",\r\n                     *      \"$photo_id\": null,\r\n                     *      \"Website\": null,\r\n                     *      \"Twitter\": null,\r\n                     *      \"$upcoming_activity\": null,\r\n                     *      \"Salutation\": null,\r\n                     *      \"Last_Activity_Time\": \"2017-12-16T09:54:58+05:30\",\r\n                     *      \"First_Name\": null,\r\n                     *      \"Full_Name\": \"Testrec2\",\r\n                     *      \"Lead_Status\": null,\r\n                     *      \"Industry\": null,\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Skype_ID\": null,\r\n                     *      \"$converted\": false,\r\n                     *      \"$process_flow\": false,\r\n                     *      \"Phone\": null,\r\n                     *      \"Street\": null,\r\n                     *      \"Zip_Code\": null,\r\n                     *      \"id\": \"3000000032091\",\r\n                     *      \"Email_Opt_Out\": false,\r\n                     *      \"$approved\": true,\r\n                     *      \"Designation\": null,\r\n                     *      \"$approval\": {\r\n                     *        \"delegate\": false,\r\n                     *        \"approve\": false,\r\n                     *        \"reject\": false\r\n                     *      },\r\n                     *      \"Modified_Time\": \"2017-12-16T09:54:58+05:30\",\r\n                     *      \"Created_Time\": \"2017-12-16T09:54:58+05:30\",\r\n                     *      \"$converted_detail\": {},\r\n                     *      \"$followed\": false,\r\n                     *      \"$editable\": true,\r\n                     *      \"City\": null,\r\n                     *      \"No_of_Employees\": null,\r\n                     *      \"Mobile\": null,\r\n                     *      \"Last_Name\": \"Testrec2\",\r\n                     *      \"State\": null,\r\n                     *      \"$status\": \"c_1\",\r\n                     *      \"Lead_Source\": null,\r\n                     *      \"Country\": null,\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Fax\": null,\r\n                     *      \"Annual_Revenue\": null,\r\n                     *      \"Secondary_Email\": null\r\n                     *    }\r\n                     *  ],\r\n                     *  \"info\": {\r\n                     *    \"per_page\": 2,\r\n                     *    \"count\": 2,\r\n                     *    \"page\": 1,\r\n                     *    \"more_records\": true\r\n                     *  }\r\n                     *}\r\n                     */\r\n                    getAllRecords: function (data) {\r\n                        return getAllRecords(data)\r\n                    },\r\n                    /**\r\n                     * @function updateRecord\r\n                     * @description To update a record in a module\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {list} config.Trigger - The trigger input can be \"workflow\", \"approval\" or \"blueprint\". If the trigger is not mentioned, the workflows, approvals and blueprints related to the API will get executed. Enter the trigger value as [] to not execute the workflows\r\n                     * @param {String} config.APIData - Update Record Data.\r\n                     * @return {Promise} Resolved with data of update Record Response\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * var config={\r\n                     *   Entity:\"Leads\",\r\n                     *   APIData:{\r\n                     *         \"id\": \"1000000049031\",\r\n                     *         \"Company\": \"Zylker\",\r\n                     *         \"Last_Name\": \"Peterson\"\r\n                     *   },\r\n                     *   Trigger:[\"workflow\"]\r\n                     * }\r\n                     * ZOHO.CRM.API.updateRecord(config)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"Modified_Time\": \"2017-12-22T03:29:57+05:30\",\r\n                     *        \"Modified_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        },\r\n                     *        \"Created_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *        \"id\": \"3000000040016\",\r\n                     *        \"Created_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        }\r\n                     *      },\r\n                     *      \"message\": \"record updated\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    updateRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const APIData = data.APIData\r\n                        APIData.trigger = data.Trigger\r\n                        return updateRecord(Entity, APIData)\r\n                    },\r\n                    /**\r\n                     * @function deleteRecord\r\n                     * @description To delete a record from a module\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {String} config.RecordID - RecordID to associate the notes.\r\n                     * @return {Promise} Resolved with Response to update record\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.deleteRecord({Entity:\"Leads\",RecordID: \"1000000049031\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"id\": \"3000000040015\"\r\n                     *      },\r\n                     *      \"message\": \"record deleted\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    deleteRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const recordID = data.RecordID\r\n                        return deleteRecord(Entity, recordID)\r\n                    },\r\n                    /**\r\n                     * @function searchRecord\r\n                     * @description To retrieve the records that matches your search criteria\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.Entity - SysRefName of module\r\n                     * @param {String} config.Type - Allowed values \"email|phone|word|criteria\"\r\n                     * @param {String} config.Query - query String\r\n                     * @param {boolean} config.delay - query String\r\n                     * @param {String} page - Pagination - Page number\r\n                     * @param {String} per_page - Pagination - per page limit\r\n                     * @return {Promise} Resolved with search result\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.searchRecord({Entity:\"Leads\",Type:\"phone\",Query:\"123456789\",delay:false})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * @example\r\n                     * ZOHO.CRM.API.searchRecord({Entity:\"Leads\",Type:\"email\",Query:\"test@zoho.com\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * @example\r\n                     * ZOHO.CRM.API.searchRecord({Entity:\"Leads\",Type:\"word\",Query:\"ZohoCrop\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * @example\r\n                     * ZOHO.CRM.API.searchRecord({Entity:\"Leads\",Type:\"criteria\",Query:\"(Company:equals:Zoho)\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * @example\r\n                     * ZOHO.CRM.API.searchRecord({Entity:\"Leads\",Type:\"criteria\",Query:\"((Company:equals:Zoho)or(Company:equals:zylker))\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     */\r\n                    searchRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const Type = data.Type\r\n                        const Query = data.Query\r\n                        const page = data.page\r\n                        const per_page = data.per_page\r\n                        const delay = data.delay\r\n                        return searchRecord(Entity, Type, Query, page, per_page, delay)\r\n                    },\r\n                    /**\r\n                    * @function getAllActions\r\n                    * @description We can view all the available actions that can be performed on a particular record.\r\n                    * @param {object} config - Configuration Object\r\n                    * @param {String} config.Entity - SysRefname of module\r\n                    * @param {String} config.RecordID - id of the particular record.\r\n                    * @return {Promise} Resolved List of actions be the specified module record.\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    * var config = {\r\n                    * \tEntity: \"Leads\",\r\n                    * \tRecordID : \"518440000000222778\"\r\n                    * }\r\n                    * ZOHO.CRM.API.getAllActions(config)\r\n                    * .then(function(data){\r\n                    *     console.log(data)\r\n                    * })\r\n                    * //prints\r\n                    *\r\n                    *{\r\n                    *  \"actions\": [\r\n                    *    {\r\n                    *      \"http_method\": \"GET\",\r\n                    *      \"name\": \"custom_links\",\r\n                    *      \"href\": \"/v2/Leads/111155000000036014/actions/custom_links\"\r\n                    *    },\r\n                    *    {\r\n                    *      \"http_method\": \"POST\",\r\n                    *      \"name\": \"change_owner\",\r\n                    *      \"href\": \"/v2/Leads/111155000000036014/actions/change_owner\"\r\n                    *    },\r\n                    *    {\r\n                    *      \"http_method\": \"POST\",\r\n                    *      \"name\": \"approvals\",\r\n                    *      \"href\": \"/v2/Leads/111155000000036014/actions/approvals\",\r\n                    *      \"params\": [\r\n                    *        {\r\n                    *          \"name\": \"action\",\r\n                    *          \"type\": \"text\",\r\n                    *          \"value\": [\r\n                    *            \"approve\",\r\n                    *            \"delegate\",\r\n                    *            \"reject\",\r\n                    *            \"resubmit\"\r\n                    *          ]\r\n                    *        },\r\n                    *        {\r\n                    *          \"name\": \"comments\",\r\n                    *          \"type\": \"text\"\r\n                    *        }\r\n                    *      ]\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    *\r\n                    *\r\n                    *The above response is obtained if the record is waiting for the approval and if the caller has administrator access.\r\n                    *If the record has no valid approval pending or the record id is invalid, the following is the response obtained.\r\n                    *\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"actions\": [\r\n                    *    {\r\n                    *      \"http_method\": \"GET\",\r\n                    *      \"name\": \"custom_links\",\r\n                    *      \"href\": \"/v2/Leads/111155000000036014/actions/custom_links\"\r\n                    *    },\r\n                    *    {\r\n                    *      \"http_method\": \"POST\",\r\n                    *      \"name\": \"change_owner\",\r\n                    *      \"href\": \"/v2/Leads/111155000000036014/actions/change_owner\"\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    */\r\n                    getAllActions: function (data) {\r\n                        data.action = 'GET_ALL_ACTIONS'\r\n                        return getAllActions(data)\r\n                    },\r\n                    /**\r\n                    * @function getApprovalRecords\r\n                    * @description This method is called by the one who has to approve.If it is called by others, they will get 204 response.\r\n                    * <br><br><b>\"others_awaiting\"</b> gives the list of all approvals pending regardless of who has to approve it. Usually, Super Admin and administrator will be able to use this API whereas standard user will still get a 204 empty response.<br><br>\r\n                    * @param {object} config - configuration object\r\n                    * @param {string} config.type - Allowed values \"awaiting | others_awaiting\"\r\n                    * @return {Promise} Resolved List of records for waiting the approval.\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    *\r\n                    *Example 1\r\n                    *\r\n                    * ZOHO.CRM.API.getApprovalRecords()\r\n                    * .then(function(data){\r\n                    *     console.log(data)\r\n                    * })\r\n                    *\r\n                    *It returns the pending approval records of the current user\r\n                    *\r\n                    *\r\n                    *Example 2\r\n                    * var config = {type:\"others_awaiting\"}\r\n                    *\r\n                    *\r\n                    * ZOHO.CRM.API.getApprovalRecords(config)\r\n                    * .then(function(data){\r\n                    *     console.log(data)\r\n                    * })\r\n                    *\r\n                    *It returns the pending approval records which should be approve by other user.\r\n                    * //prints\r\n                    *\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"data\": [\r\n                    *    {\r\n                    *      \"owner\": {\r\n                    *        \"phone\": null,\r\n                    *        \"name\": \"milestone2 \",\r\n                    *        \"mobile\": null,\r\n                    *        \"id\": \"111155000000032023\",\r\n                    *        \"email\": \"uk@zylker.com\"\r\n                    *      },\r\n                    *      \"initiated_time\": \"2018-07-16T10:16:54+05:30\",\r\n                    *      \"module\": \"Leads\",\r\n                    *      \"rule\": {\r\n                    *        \"name\": \"Name\",\r\n                    *        \"id\": \"111155000000036006\"\r\n                    *      },\r\n                    *      \"id\": \"111155000000036021\",\r\n                    *      \"type\": \"approval\",\r\n                    *      \"entity\": {\r\n                    *        \"name\": \"uk\",\r\n                    *        \"id\": \"111155000000036014\"\r\n                    *      },\r\n                    *      \"default_layout\": true,\r\n                    *      \"waiting_for\": {\r\n                    *        \"name\": \"uk \",\r\n                    *        \"id\": \"111155000000035012\"\r\n                    *      }\r\n                    *    }\r\n                    *  ],\r\n                    *  \"info\": {\r\n                    *    \"per_page\": 200,\r\n                    *    \"count\": 1,\r\n                    *    \"page\": 1,\r\n                    *    \"more_records\": false\r\n                    *  }\r\n                    *}\r\n                    *\r\n                    */\r\n                    getApprovalRecords: function (data) {\r\n                        const newdata = {}\r\n                        if (data) {\r\n                            data.action = 'GET_APPROVAL_RECORDS'\r\n                        } else {\r\n                            newdata.action = 'GET_APPROVAL_RECORDS'\r\n                            data = newdata\r\n                        }\r\n                        return getAllActions(data)\r\n                    },\r\n                    /**\r\n                    * @function getApprovalById\r\n                    * @description To get details of the particular approval.\r\n                    * @param {object} config - configuration object\r\n                    * @param {string} config.id - id of the approval\r\n                    * @return {Promise} Resolved details of the approval.\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    *var config = {\r\n                    *       id:\"518440000000222786\"\r\n                    *}\r\n                    *\r\n                    *\r\n                    *ZOHO.CRM.API.getApprovalById(config).then(function(d){\r\n                    *   console.log(d);\r\n                    *})\r\n                    *\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"data\": [\r\n                    *    {\r\n                    *      \"owner\": {\r\n                    *        \"phone\": null,\r\n                    *        \"name\": \"milestone2 \",\r\n                    *        \"mobile\": null,\r\n                    *        \"id\": \"111155000000032023\",\r\n                    *        \"history\": [],\r\n                    *        \"email\": \"uk@zylker.com\"\r\n                    *      },\r\n                    *      \"initiated_time\": \"2018-07-16T10:16:54+05:30\",\r\n                    *      \"criteria\": [\r\n                    *        {\r\n                    *          \"api_name\": \"Annual_Revenue\",\r\n                    *          \"field_label\": \"Annual Revenue\",\r\n                    *          \"value\": \"$1.00\"\r\n                    *        }\r\n                    *      ],\r\n                    *      \"module\": \"Leads\",\r\n                    *      \"rule\": {\r\n                    *        \"name\": \"Name\",\r\n                    *        \"id\": \"111155000000036006\"\r\n                    *      },\r\n                    *      \"id\": \"518440000000222786\",\r\n                    *      \"type\": \"approval\",\r\n                    *      \"entity\": {\r\n                    *        \"name\": \"uk\",\r\n                    *        \"id\": \"111155000000036014\"\r\n                    *      },\r\n                    *      \"default_layout\": true,\r\n                    *      \"waiting_for\": {\r\n                    *        \"name\": \"uk \",\r\n                    *        \"id\": \"111155000000035012\"\r\n                    *      }\r\n                    *    }\r\n                    *  ],\r\n                    *  \"info\": {\r\n                    *    \"per_page\": 200,\r\n                    *    \"count\": 1,\r\n                    *    \"page\": 1,\r\n                    *    \"more_records\": false\r\n                    *  }\r\n                    *}\r\n                    *\r\n                    */\r\n                    getApprovalById: function (data) {\r\n                        data.action = 'GET_APPROVALBYID'\r\n                        return getAllActions(data)\r\n                    },\r\n                    /**\r\n                    * @function getApprovalsHistory\r\n                    * @description View the history of records put up for approval\r\n                    * @return {Promise} Resolved List of records for waiting the approval.\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    *\r\n                    *ZOHO.CRM.API.getApprovalsHistory().then(function(data){\r\n                    *    console.log(data);\r\n                    *});\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"data\": [\r\n                    *    {\r\n                    *      \"audit_time\": \"2018-07-16T15:46:54+05:30\",\r\n                    *      \"done_by\": {\r\n                    *        \"name\": \"milestone2 \",\r\n                    *        \"id\": \"111155000000032023\"\r\n                    *      },\r\n                    *      \"module\": \"Leads\",\r\n                    *      \"record\": {\r\n                    *        \"name\": \"uk\",\r\n                    *        \"id\": \"111155000000036014\"\r\n                    *      },\r\n                    *      \"related_module\": null,\r\n                    *      \"action\": \"Submitted\",\r\n                    *      \"rule\": \"111155000000036006\",\r\n                    *      \"account\": null,\r\n                    *      \"related_name\": \"milestone2 \",\r\n                    *      \"territory\": null\r\n                    *    }\r\n                    *  ],\r\n                    *  \"info\": {\r\n                    *    \"per_page\": 200,\r\n                    *    \"count\": 1,\r\n                    *    \"page\": 1,\r\n                    *    \"more_records\": false\r\n                    *  }\r\n                    *}\r\n                    *\r\n                    *\r\n                    */\r\n                    getApprovalsHistory: function () {\r\n                        const data = {}\r\n                        data.action = 'GET_APPROVALS_HISTORY'\r\n                        return getAllActions(data)\r\n                    },\r\n                    /**\r\n                    * @function approveRecord\r\n                    * @description approve the record\r\n                    * @param {object} config - configuration object\r\n                    * @param {string} config.Entity - SysRefName of module\r\n                    * @param {string} config.RecordID - id of the record.\r\n                    * @param {string} config.actionType - type of action Allowed values  \"approve\" | \"delegate\" | \"resubmit\" | \"reject\"\r\n                    * @param {string} config.comments - comments (optional)\r\n                    * @param {string} config.user - only for delegate\r\n                    * @return {Promise} Resolved with the details of approval\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    *\r\n                    *\r\n                    * var config = {\r\n                    *   Entity:\"Leads\",\r\n                    *   RecordID:\"111155000000036014\",\r\n                    *   actionType:\"approve\"\r\n                    *}\r\n                    *\r\n                    *\r\n                    *\r\n                    *ZOHO.CRM.API.approveRecord(config).then(function(data){\r\n                    *    console.log(data);\r\n                    *});\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"code\": \"SUCCESS\",\r\n                    *  \"details\": {\r\n                    *    \"id\": \"111155000000036014\"\r\n                    *  },\r\n                    *  \"message\": \"Record approved successfully\",\r\n                    *  \"status\": \"success\"\r\n                    *}\r\n                    *\r\n                    */\r\n                    approveRecord: function (data) {\r\n                        data.action = 'UPDATE_APPROVAL'\r\n                        return getAllActions(data)\r\n                    },\r\n                    /**\r\n                     * @function getAllUsers\r\n                     * @description To retrieve list of users in ZohoCRM\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.Type - Allowed values \"AllUsers | ActiveUsers | DeactiveUsers | ConfirmedUsers | NotConfirmedUsers | DeletedUsers | ActiveConfirmedUsers | AdminUsers | ActiveConfirmedAdmins\"\r\n                     * @param {number} [config.page] - To get the list of users from the respective pages\r\n                     * @param {number} [config.per_page] - To get the list of users available per page\r\n                     * @return {Promise} Resolved List of users matching specified Type\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.getAllUsers({Type:\"AllUsers\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * //prints\r\n                     *{\r\n                     *  \"users\": [\r\n                     *    {\r\n                     *      \"confirm\": true,\r\n                     *      \"full_name\": \"NareshTesting \",\r\n                     *      \"role\": {\r\n                     *        \"name\": \"CEO\",\r\n                     *        \"id\": \"3000000029719\"\r\n                     *      },\r\n                     *      \"territories\": [],\r\n                     *      \"profile\": {\r\n                     *        \"name\": \"Administrator\",\r\n                     *        \"id\": \"3000000029725\"\r\n                     *      },\r\n                     *      \"last_name\": null,\r\n                     *      \"alias\": null,\r\n                     *      \"id\": \"3000000031045\",\r\n                     *      \"first_name\": \"NareshTesting\",\r\n                     *      \"email\": \"naresh.babu+dev2@zylker.com\",\r\n                     *      \"zuid\": \"5073288\",\r\n                     *      \"status\": \"active\"\r\n                     *    }\r\n                     *  ],\r\n                     *  \"info\": {\r\n                     *    \"per_page\": 200,\r\n                     *    \"count\": 1,\r\n                     *    \"page\": 1,\r\n                     *    \"more_records\": false\r\n                     *  }\r\n                     *}\r\n                     */\r\n                    getAllUsers: function (data) {\r\n                        const Type = data.Type\r\n                        const page = data.page\r\n                        const per_page = data.per_page\r\n                        return user({ Type: Type, page: page, per_page: per_page })\r\n                    },\r\n                    /**\r\n                     * @function getUser\r\n                     * @description To retrieve list of users in ZohoCRM\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.ID - UserID\r\n                     * @return {Promise} Resolved user matching userID\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.getUser({ID:\"3000000029719\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * //prints\r\n                     *{\r\n                     *  \"users\": [\r\n                     *    {\r\n                     *      \"country\": null,\r\n                     *      \"role\": {\r\n                     *        \"name\": \"CEO\",\r\n                     *        \"id\": \"3000000029719\"\r\n                     *      },\r\n                     *      \"customize_info\": {\r\n                     *        \"notes_desc\": null,\r\n                     *        \"show_right_panel\": null,\r\n                     *        \"bc_view\": null,\r\n                     *        \"show_home\": false,\r\n                     *        \"show_detail_view\": true,\r\n                     *        \"unpin_recent_item\": null\r\n                     *      },\r\n                     *      \"city\": null,\r\n                     *      \"signature\": null,\r\n                     *      \"name_format\": \"Salutation,First Name,Last Name\",\r\n                     *      \"language\": \"en_US\",\r\n                     *      \"locale\": \"en_US\",\r\n                     *      \"personal_account\": true,\r\n                     *      \"ntc_notification_type\": [\r\n                     *        3000000020985,\r\n                     *        3000000020988,\r\n                     *        3000000020991,\r\n                     *        3000000020994,\r\n                     *        3000000020997,\r\n                     *        3000000021012,\r\n                     *        3000000021003,\r\n                     *        3000000021006,\r\n                     *        3000000021009,\r\n                     *        3000000021078,\r\n                     *        3000000021072,\r\n                     *        3000000021075,\r\n                     *        3000000021069,\r\n                     *        3000000021081,\r\n                     *        3000000021084,\r\n                     *        3000000021087\r\n                     *      ],\r\n                     *      \"default_tab_group\": \"0\",\r\n                     *      \"street\": null,\r\n                     *      \"alias\": null,\r\n                     *      \"theme\": {\r\n                     *        \"normal_tab\": {\r\n                     *          \"font_color\": \"#FFFFFF\",\r\n                     *          \"background\": \"#222222\"\r\n                     *        },\r\n                     *        \"selected_tab\": {\r\n                     *          \"font_color\": \"#FFFFFF\",\r\n                     *          \"background\": \"#222222\"\r\n                     *        },\r\n                     *        \"new_background\": null,\r\n                     *        \"background\": \"#F3F0EB\",\r\n                     *        \"screen\": \"fixed\",\r\n                     *        \"type\": \"default\"\r\n                     *      },\r\n                     *      \"id\": \"3000000031045\",\r\n                     *      \"state\": null,\r\n                     *      \"country_locale\": \"en_US\",\r\n                     *      \"fax\": null,\r\n                     *      \"first_name\": \"NareshTesting\",\r\n                     *      \"email\": \"naresh.babu+dev2@zylker.com\",\r\n                     *      \"telephony_enabled\": false,\r\n                     *      \"imap_status\": false,\r\n                     *      \"zip\": null,\r\n                     *      \"decimal_separator\": \"en_US\",\r\n                     *      \"website\": null,\r\n                     *      \"time_format\": \"hh:mm a\",\r\n                     *      \"profile\": {\r\n                     *        \"name\": \"Administrator\",\r\n                     *        \"id\": \"3000000029725\"\r\n                     *      },\r\n                     *      \"mobile\": null,\r\n                     *      \"last_name\": null,\r\n                     *      \"time_zone\": \"Asia/Kolkata\",\r\n                     *      \"zuid\": \"5073288\",\r\n                     *      \"confirm\": true,\r\n                     *      \"rtl_enabled\": false,\r\n                     *      \"full_name\": \"NareshTesting \",\r\n                     *      \"ezuid\": \"6ca2127e9d60c217\",\r\n                     *      \"territories\": [],\r\n                     *      \"phone\": null,\r\n                     *      \"dob\": null,\r\n                     *      \"date_format\": \"MM/dd/yyyy\",\r\n                     *      \"ntc_enabled\": true,\r\n                     *      \"status\": \"active\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    getUser: function (data) {\r\n                        const ID = data.ID\r\n                        return user({ ID: ID })\r\n                    },\r\n                    /**\r\n                     * @function getRelatedRecords\r\n                     * @description To retrive related list records\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.Entity - \tSysRefName of the module.\r\n                     * @param {String} config.RecordID - RecordID to associate the notes.\r\n                     * @param {String} config.RelatedListName - \tSysRefName of the relatedList.\r\n                     * @param {Number} [config.page] - To get the list of related records from the respective page.\r\n                     * @param {Number} [config.per_page] - To get the list of related records available per page.\r\n                     * @return {Promise} Resolved user matching userID\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.getRelatedRecords({Entity:\"Leads\",RecordID:\"1000000030132\",RelatedList:\"Notes\",page:1,per_page:200})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * //prints\r\n                     *\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"Owner\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Modified_Time\": \"2017-12-22T03:58:20+05:30\",\r\n                     *      \"$attachments\": null,\r\n                     *      \"Created_Time\": \"2017-12-22T03:58:20+05:30\",\r\n                     *      \"Parent_Id\": {\r\n                     *        \"name\": \"Peterson\",\r\n                     *        \"id\": \"3000000040011\"\r\n                     *      },\r\n                     *      \"$editable\": true,\r\n                     *      \"$se_module\": \"Leads\",\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"$size\": null,\r\n                     *      \"$voice_note\": false,\r\n                     *      \"$status\": null,\r\n                     *      \"id\": \"3000000040059\",\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Note_Title\": null,\r\n                     *      \"Note_Content\": \"Notes2\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"Owner\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Modified_Time\": \"2017-12-22T03:58:16+05:30\",\r\n                     *      \"$attachments\": null,\r\n                     *      \"Created_Time\": \"2017-12-22T03:58:16+05:30\",\r\n                     *      \"Parent_Id\": {\r\n                     *        \"name\": \"Peterson\",\r\n                     *        \"id\": \"3000000040011\"\r\n                     *      },\r\n                     *      \"$editable\": true,\r\n                     *      \"$se_module\": \"Leads\",\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"$size\": null,\r\n                     *      \"$voice_note\": false,\r\n                     *      \"$status\": null,\r\n                     *      \"id\": \"3000000040055\",\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Note_Title\": null,\r\n                     *      \"Note_Content\": \"Notes1\"\r\n                     *    }\r\n                     *  ],\r\n                     *  \"info\": {\r\n                     *    \"per_page\": 200,\r\n                     *    \"count\": 2,\r\n                     *    \"page\": 1,\r\n                     *    \"more_records\": false\r\n                     *  }\r\n                     *}\r\n                     */\r\n                    getRelatedRecords: function (data) {\r\n                        return getRelatedRecord(data)\r\n                    },\r\n                    /**\r\n                     * @function updateRelatedRecords\r\n                     * @description To update the relation between the records\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.Entity - \tSysRefName of the module.\r\n                     * @param {String} config.RecordID - RecordID to associate the notes.\r\n                     * @param {String} config.RelatedListName - \tSysRefName of the relatedList.\r\n                     * @param {String} config.RelatedRecordID - \tRelated Record ID\r\n                     * @param {String} config.APIData - \tData to be updated in the related record\r\n                     * @return {Promise} Resolved user matching userID\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     *  var APIData = {\r\n                     * \tDescription:\"Test description\"\r\n                     *  }\r\n                     *  ZOHO.CRM.API.updateRelatedRecords({Entity:\"Leads\",RecordID:\"1000000079113\",RelatedList:\"Campaigns\",RelatedRecordID:\"1000000080041\",APIData:APIData})\r\n                     *  .then(function(data){\r\n                     *      console.log(data)\r\n                     *  })\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\":[\r\n                     *   {\r\n                     *     \"code\": \"SUCCESS\",\r\n                     *     \"details\": {\r\n                     *       \"id\": 1000000080041\r\n                     *     },\r\n                     *     \"message\": \"relation updated\",\r\n                     *     \"status\": \"success\"\r\n                     *   }\r\n                     * \t]\r\n                     * }\r\n                     */\r\n                    updateRelatedRecords: function (data) {\r\n                        const Entity = data.Entity\r\n                        const RecordID = data.RecordID\r\n                        const RelatedList = data.RelatedList\r\n                        const RelatedRecordID = data.RelatedRecordID\r\n                        const APIData = data.APIData\r\n                        return updateRelatedRecord(Entity, RecordID, RelatedList, RelatedRecordID, APIData)\r\n                    },\r\n                    /**\r\n                     * @function delinkRelatedRecord\r\n                     * @description To delink the relation between the records\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.Entity - \tSysRefName of the module.\r\n                     * @param {String} config.RecordID - RecordID to associate the notes.\r\n                     * @param {String} config.RelatedListName - \tSysRefName of the relatedList.\r\n                     * @param {String} config.RelatedRecordID - \tRelated Record ID\r\n                     * @return {Promise} Resolved user matching userID\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     *  ZOHO.CRM.API.delinkRelatedRecord({Entity:\"Leads\",RecordID:\"1000000079113\",RelatedList:\"Campaigns\",RelatedRecordID:\"1000000080041\"})\r\n                     *  .then(function(data){\r\n                     *      console.log(data)\r\n                     *  })\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"id\": \"3000000040055\"\r\n                     *      },\r\n                     *      \"message\": \"record deleted\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    delinkRelatedRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const RecordID = data.RecordID\r\n                        const RelatedList = data.RelatedList\r\n                        const RelatedRecordID = data.RelatedRecordID\r\n                        return deleteRelatedRecord(Entity, RecordID, RelatedList, RelatedRecordID)\r\n                    },\r\n                    /**\r\n                     * @function attachFile\r\n                     * @description To delink the relation between the records\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.Entity - \tSysRefName of the module.\r\n                     * @param {String} config.RecordID - RecordID to associate the notes.\r\n                     * @param {object} config.File - \tFile Object\r\n                     * @param {String} config.File.Name - \tFile Name\r\n                     * @param {object} config.File.Content - \tFile Content\r\n                     * @return {Promise} Resolved user Upload acknowledgement\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     *\r\n                     * ZOHO.CRM.API.attachFile({Entity:\"Leads\",RecordID:\"1000000031092\",File:{Name:\"myFile.txt\",Content:blob}}).then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"Modified_Time\": \"2017-12-20T14:22:30+05:30\",\r\n                     *        \"Modified_By\": {\r\n                     *          \"name\": \"NareshTesting\",\r\n                     *          \"id\": \"1000000031157\"\r\n                     *        },\r\n                     *        \"Created_Time\": \"2017-12-20T14:22:30+05:30\",\r\n                     *        \"id\": \"1000000044106\",\r\n                     *        \"Created_By\": {\r\n                     *          \"name\": \"NareshTesting\",\r\n                     *          \"id\": \"1000000031157\"\r\n                     *        }\r\n                     *      },\r\n                     *      \"message\": \"attachment uploaded successfully\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     * */\r\n                    attachFile: function (data) {\r\n                        const Entity = data.Entity\r\n                        const RecordID = data.RecordID\r\n                        const File = data.File\r\n                        var data = {\r\n                            FileName: File.Name,\r\n                            FileData: File.Content\r\n                        }\r\n                        return createRecord(Entity, data, RecordID, 'ATTACHMENT')\r\n                    },\r\n                    /**\r\n                     * @function getAllProfiles\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @description To get all the profiles in the app\r\n                     * @returns {Promise} Resolved with all the profiles present in the app\r\n                     * @example\r\n                     * ZOHO.CRM.API.getAllProfiles().then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     *  {\r\n                     *    \"profiles\": [\r\n                     *     {\r\n                     *        \"created_time\": null,\r\n                     *        \"modified_time\": null,\r\n                     *        \"name\": \"Administrator\",\r\n                     *        \"modified_by\": null,\r\n                     *       \"description\": \"This profile will have all the permissions. Users with Administrator profile will be able to view and manage all the data within the organization *. *        account by default.\",\r\n                     *        \"id\": \"12000000029855\",\r\n                     *        \"category\": false,\r\n                     *        \"created_by\": null\r\n                     *      },\r\n                     *      {\r\n                     *        \"created_time\": null,\r\n                     *        \"modified_time\": null,\r\n                     *        \"name\": \"Standard\",\r\n                     *        \"modified_by\": null,\r\n                     *        \"description\": \"This profile will have all the permissions except administrative privileges.\",\r\n                     *        \"id\": \"12000000029858\",\r\n                     *        \"category\": false,\r\n                     *        \"created_by\": null\r\n                     *      },\r\n                     *      {\r\n                     *        \"created_time\": \"2018-02-05T14:20:38+05:30\",\r\n                     *        \"modified_time\": \"2018-02-05T17:44:58+05:30\",\r\n                     *        \"name\": \"TestUser\",\r\n                     *        \"modified_by\": {\r\n                     *          \"name\": \"Arun \",\r\n                     *          \"id\": \"12000000032013\"\r\n                     *        },\r\n                     *        \"description\": \"TestUser API\",\r\n                     *        \"id\": \"12000000033045\",\r\n                     *        \"category\": true,\r\n                     *        \"created_by\": {\r\n                     *          \"name\": \"Arun \",\r\n                     *          \"id\": \"12000000032013\"\r\n                     *        }\r\n                     *     }\r\n                     *    ]\r\n                     *  }\r\n                     *\r\n                     */\r\n                    getAllProfiles: function (data) {\r\n                        const category = 'PROFILES'\r\n                        const type = 'GET_ALL_PROFILES'\r\n                        return getAllProfiles(category, type)\r\n                    },\r\n                    /**\r\n                     * @function getProfile\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @description To get a particular profile's details with ProfileID as input\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.ID - ProfileID\r\n                     * @returns {Promise} Resolved with the details of the profile for the given ProfileID\r\n                     * @example\r\n                     * ZOHO.CRM.API.getProfile({ID:\"12000000029858\"}).then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     * {\r\n                     *\t\"profiles\": [{\r\n                     *\t\t\"created_time\": null,\r\n                     *\t\t\"modified_time\": null,\r\n                     *\t\t\"permissions_details\": [{\r\n                     *\t\t\t\t\"display_label\": \"Email Integration ( POP3 / IMAP )\",\r\n                     *\t\t\t\t\"module\": null,\r\n                     *\t\t\t\t\"name\": \"Crm_Implied_Zoho_Mail_Integ\",\r\n                     *\t\t\t\t\"id\": \"12000000030788\",\r\n                     *\t\t\t\t\"enabled\": true\r\n                     *\t\t\t},\r\n                     *\t\t\t{\r\n                     *\t\t\t\t\"display_label\": \"BCC Dropbox\",\r\n                     *\t\t\t\t\"module\": null,\r\n                     *\t\t\t\t\"name\": \"Crm_Implied_BCC_Dropbox\",\r\n                     *\t\t\t\t\"id\": \"12000000030752\",\r\n                     *\t\t\t\t\"enabled\": true\r\n                     *\t\t\t},\r\n                     *\t\t\t{\r\n                     *\t\t\t\t\"display_label\": \"Show Chat Bar\",\r\n                     *\t\t\t\t\"module\": null,\r\n                     *\t\t\t\t\"name\": \"Crm_Implied_Chat_Bar\",\r\n                     *\t\t\t\t\"id\": \"12000000030806\",\r\n                     *\t\t\t\t\"enabled\": true\r\n                     *\t\t\t},\r\n                     *\t\t\t{\r\n                     *\t\t\t\t\"display_label\": null,\r\n                     *\t\t\t\t\"module\": null,\r\n                     *\t\t\t\t\"name\": \"Crm_Implied_Social_Integration\",\r\n                     *\t\t\t\t\"id\": \"12000000030734\",\r\n                     *\t\t\t\t\"enabled\": false\r\n                     *\t\t\t}\r\n                     *\t\t],\r\n                     *\t\t\"name\": \"Standard\",\r\n                     *\t\t\"modified_by\": null,\r\n                     *\t\t\"description\": \"This profile will have all the permissions except administrative privileges.\",\r\n                     *\t\t\"id\": \"12000000029858\",\r\n                     *\t\t\"category\": false,\r\n                     *\t\t\"created_by\": null,\r\n                     *\t\t\"sections\": [{\r\n                     *\t\t\t\"name\": \"template\",\r\n                     *\t\t\t\"categories\": [{\r\n                     *\t\t\t\t\t\"display_label\": \"Email & Chat Settings\",\r\n                     *\t\t\t\t\t\"permissions_details\": [\r\n                     *\t\t\t\t\t\t\"12000000030788\",\r\n                     *\t\t\t\t\t\t\"12000000030752\",\r\n                     *\t\t\t\t\t\t\"12000000030806\"\r\n                     *\t\t\t\t\t],\r\n                     *\t\t\t\t\t\"name\": \"email_chat\"\r\n                     *\t\t\t\t},\r\n                     *\t\t\t\t{\r\n                     *\t\t\t\t\t\"display_label\": \"Manage Templates\",\r\n                     *\t\t\t\t\t\"permissions_details\": [\r\n                     *\t\t\t\t\t\t\"12000000029984\",\r\n                     *\t\t\t\t\t\t\"12000000029987\",\r\n                     *\t\t\t\t\t\t\"12000000030698\"\r\n                     *\t\t\t\t\t],\r\n                     *\t\t\t\t\t\"name\": \"template\"\r\n                     *\t\t\t\t}\r\n                     *\t\t\t]\r\n                     *\t\t}]\r\n                     *\t}]\r\n                     * }\r\n                     *\r\n                     */\r\n                    getProfile: function (data) {\r\n                        const category = 'PROFILES'\r\n                        const type = 'GET_PROFILE'\r\n                        const ID = data.ID\r\n                        return getProfile(category, type, ID)\r\n                    },\r\n                    /**\r\n                     * @function updateProfile\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @description To update permissions for the given ProfileID\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.ID - ProfileID\r\n                     * @param {Object} config.APIData - Permission Data (PermissionID : true | false)\r\n                     * @returns {Promise} Resolved with a response message (Success or failure ) after updating the permissions\r\n                     * @example\r\n                     * var permissionData = {\r\n                     *     \"profiles\": [\r\n                     *\t\t{\r\n                     * \t\t\t\t\"permissions_details\": [\r\n                     *\t\t\t\t{\r\n                     * \t\t\t\t\t\"id\": \"12000000030827\",\r\n                     *\t\t\t\t\t\"enabled\": false\r\n                     *\t\t\t\t},\r\n                     *\t\t\t\t{\r\n                     *\t\t\t\t\t\"id\": \"12000000029879\",\r\n                     *\t\t\t\t\t\"enabled\": true\r\n                     * \t\t\t\t}\r\n                     * \t\t\t]\r\n                     *\t\t}\r\n                     *\t]\r\n                     *}\r\n                     * ZOHO.CRM.API.updateProfile({ID:\"12000000033045\",APIData:permissionData}).then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     * {\r\n                     *  \"profiles\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {},\r\n                     *      \"message\": \"profile updated successfully\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     * }\r\n                     *\r\n                     */\r\n                    updateProfile: function (data) {\r\n                        const category = 'UPDATE'\r\n                        const type = 'PROFILE'\r\n                        const ID = data.ID\r\n                        const APIData = data.APIData\r\n                        return updateProfile(category, type, ID, APIData)\r\n                    },\r\n                    /**\r\n                     * @function getOrgVariable\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @description get plugins configuration data\r\n                     * @returns {Promise} Resolved with Plugin Configuration\r\n                     * @example\r\n                     * Example - 1:\r\n                     * ZOHO.CRM.API.getOrgVariable(\"variableNamespace\").then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"Success\": {\r\n                     *   \"Content\": \"12345\"\r\n                     *  }\r\n                     *}\r\n                     *\r\n                     *\r\n                     *\r\n                     *  Example - 2:\r\n                     *\r\n                     * var data = {apiKeys:[\"key1\",\"key2\",\"ke3\"]};\r\n                     * ZOHO.CRM.API.getOrgVariable(data).then(function(data){\r\n                     *      console.log(data);\r\n                     * });\r\n                     *\r\n                     *\r\n                     *{\r\n                     *\"Success\":\r\n                     *{\r\n                     *   \"content\": {\r\n                     *      \"apikey\": {\r\n                     *         \"value\": \"BNMMNBVHJ\"\r\n                     *      },\r\n                     *      \"authtoken\": {\r\n                     *         \"value\": \"IUYTRERTYUI\"\r\n                     *      },\r\n                     *      \"apiscret\": {\r\n                     *         \"value\": \"848ksmduo389jd\"\r\n                     *      }\r\n                     *   }\r\n                     *}\r\n                     *}\r\n                     *\r\n                     *\r\n                     */\r\n                    getOrgVariable: function (nameSpace) {\r\n                        return config('VARIABLE', nameSpace)\r\n                    }\r\n                },\r\n                /**\r\n                 * @module ZOHO.CRM.UI\r\n                 */\r\n                UI: {\r\n                    /**\r\n                     * @namespace ZOHO.CRM.UI\r\n                     */\r\n                    /**\r\n                     * @function Resize\r\n                     * @description Resize Widget to the given dimensions\r\n                     * @param {Object} dimensions - Dimension of Dialer.\r\n                     * @param {Integer} dimensions.height - Height in px\r\n                     * @param {Integer} dimensions.width - Width in px\r\n                     * @returns {Promise} resolved with true | false\r\n                     * @memberof ZOHO.CRM.UI\r\n                     * @example\r\n                     * ZOHO.CRM.UI.Resize({height:\"200\",width:\"1000\"}).then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     * True\r\n                     *\r\n                     */\r\n                    Resize: function (data) {\r\n                        var data = {\r\n                            action: 'RESIZE',\r\n                            data: {\r\n                                width: data.width,\r\n                                height: data.height\r\n                            }\r\n                        }\r\n                        return manipulateUI(data)\r\n                    },\r\n                    /**\r\n                     * @namespace ZOHO.CRM.UI.Dialer\r\n                     */\r\n                    Dialer: {\r\n                        /**\r\n                         * @function maximize\r\n                         * @description maximizes the CallCenter Window\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Dialer\r\n                         */\r\n                        maximize: function () {\r\n                            const data = {\r\n                                action: {\r\n                                    telephony: 'MAXIMIZE'\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        },\r\n                        /**\r\n                         * @function minimize\r\n                         * @description minimize the CallCenter Window\r\n                         * @returns {Promise}  resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Dialer\r\n                         */\r\n                        minimize: function () {\r\n                            const data = {\r\n                                action: {\r\n                                    telephony: 'MINIMIZE'\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        },\r\n                        /**\r\n                         * @function notify\r\n                         * @description notify The user with an audible sound\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Dialer\r\n                         */\r\n                        notify: function () {\r\n                            const data = {\r\n                                action: {\r\n                                    telephony: 'NOTIFY'\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        }\r\n                    },\r\n                    /**\r\n                     * @namespace ZOHO.CRM.UI.Record\r\n                     */\r\n                    Record: {\r\n                        /**\r\n                         * @function open\r\n                         * @description Open DetailPage of the specified Record\r\n                         * @param {object} data - Configuration Object\r\n                         * @param {String} data.Entity - \tSysRefName of the module.\r\n                         * @param {String} data.RecordID - RecordID to open\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Record\r\n                         * @example\r\n                         * ZOHO.CRM.UI.Record.open({Entity:\"Leads\",RecordID:\"1000000036062\"})\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        open: function (data) {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            var data = {\r\n                                action: {\r\n                                    record: 'OPEN'\r\n                                },\r\n                                data: {\r\n                                    Entity: data.Entity,\r\n                                    RecordID: data.RecordID,\r\n                                    target: data.Target\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        },\r\n                        /**\r\n                         * @function edit\r\n                         * @description open EditPage of the specified Record\r\n                         * @param {object} data - Configuration Object\r\n                         * @param {String} data.Entity - \tSysRefName of the module.\r\n                         * @param {String} data.RecordID - RecordID to open\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Record\r\n                         * @example\r\n                         * ZOHO.CRM.UI.Record.edit({Entity:\"Leads\",RecordID:\"1000000036062\"})\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        edit: function (data) {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            var data = {\r\n                                action: {\r\n                                    record: 'EDIT'\r\n                                },\r\n                                data: {\r\n                                    Entity: data.Entity,\r\n                                    RecordID: data.RecordID,\r\n                                    target: data.Target\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        },\r\n                        /**\r\n                         * @function create\r\n                         * @description Open CreatePage of the specified Record\r\n                         * @param {object} data - Configuration Object\r\n                         * @param {String} data.Entity - \tSysRefName of the module.\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Record\r\n                         * @example\r\n                         * ZOHO.CRM.UI.Record.create({Entity:\"Leads\"})\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        create: function (data) {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            var data = {\r\n                                action: {\r\n                                    record: 'CREATE'\r\n                                },\r\n                                data: {\r\n                                    Entity: data.Entity,\r\n                                    RecordID: data.RecordID,\r\n                                    target: data.Target\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        },\r\n                        /**\r\n                         * @function populate\r\n                         * @description Populate the given data in the entity form\r\n                         * @param {object} RecordData\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Record\r\n                         * @example\r\n                         * ZOHO.CRM.UI.Record.populate({Annual_Revenue:\"500\",Description:\"Populating test data\",Phone:\"85663655785\"})\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        populate: function (recordData) {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            const data = {\r\n                                action: {\r\n                                    record: 'POPULATE'\r\n                                },\r\n                                data: recordData\r\n                            }\r\n                            return manipulateUI(data)\r\n                        }\r\n                    },\r\n                    /**\r\n                     * @namespace ZOHO.CRM.UI.Popup\r\n                     */\r\n                    Popup: {\r\n                        /**\r\n                         * @function close\r\n                         * @description Close Widget Popup\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Popup\r\n                         * @example\r\n                         * ZOHO.CRM.UI.Popup.close()\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        close: function () {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            const data = {\r\n                                action: {\r\n                                    popup: 'CLOSE'\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        },\r\n                        /**\r\n                         * @function closeReload\r\n                         * @description Close Widget Popup and reload the View\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Popup\r\n                         * @example\r\n                         * ZOHO.CRM.UI.Popup.closeReload()\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        closeReload: function () {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            const data = {\r\n                                action: {\r\n                                    popup: 'CLOSE_RELOAD'\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        }\r\n                    },\r\n                    /**\r\n                     * @namespace ZOHO.CRM.UI.Widget\r\n                     */\r\n                    Widget: {\r\n                        /**\r\n                         * @function open\r\n                         * @description open a WebTab Widget with custom onLoad Data\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Widget\r\n                         * @example\r\n                         * var message = {\r\n                         * \t\targ1:\"Argument 1\",\r\n                         * \t\targ2:\"Argument 2\",\r\n                         * \t\targ3Nested:{\r\n                         * \t\t\t\tsubArg1:\"SubArgument 1\",\r\n                         * \t\t\t\tsubArg2:\"SubArgument 2\",\r\n                         * \t\t\t\tsubArg3:\"SubArgument 3\",\r\n                         * \t\t\t}\r\n                         * }\r\n                         *\r\n                         * ZOHO.CRM.UI.Widget.open({Entity:\"WebTab1_Widget\",Message:message})\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        open: function (data) {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            var data = {\r\n                                action: {\r\n                                \twebTab: 'OPEN'\r\n                                },\r\n                                data: data\r\n                            }\r\n                            return manipulateUI(data)\r\n                        }\r\n                    }\r\n\r\n                },\r\n                /**\r\n                 * @namespace ZOHO.CRM.HTTP\r\n                 */\r\n                HTTP: {\r\n                    /**\r\n                     * @function get\r\n                     * @description Invoke  HTTP get\r\n                     * @returns {Promise} resolved with response of the initiated request\r\n                     * @memberof ZOHO.CRM.HTTP\r\n                     * @param {Object} request - Request Object\r\n                     * @param {Object} request.params - Request Params\r\n                     * @param {Object} request.headers - Request Headers\r\n                     * @example\r\n                     * var request ={\r\n                     * \turl : \"https://crm.zoho.com/crm/private/xml/Users/getUsers\",\r\n                     * \tparams:{\r\n                     * \t\tscope:\"crmapi\",\r\n                     * \t\ttype:\"AllUsers\"\r\n                     * \t},\r\n                     * \theaders:{\r\n                     *\t \tAuthorization:\"******************************\",\r\n                     * \t}\r\n                     * }\r\n                     * ZOHO.CRM.HTTP.get(request)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     * {\r\n                     *   \"users\": {\r\n                     *     \"user\": [\r\n                     *       {\r\n                     *         \"zip\": \"null\",\r\n                     *         \"country\": \"null\",\r\n                     *         \"website\": \"null\",\r\n                     *         \"role\": \"Acquisition Manager\",\r\n                     *         \"city\": \"null\",\r\n                     *         \"timezone\": \"Asia\\/Calcutta\",\r\n                     *         \"profile\": \"Administrator\",\r\n                     *         \"mobile\": \"null\",\r\n                     *         \"language\": \"en_US\",\r\n                     *         \"content\": \"Patricia Boyle\",\r\n                     *         \"zuid\": \"51857638\",\r\n                     *         \"confirm\": \"true\",\r\n                     *         \"phone\": \"null\",\r\n                     *         \"street\": \"null\",\r\n                     *         \"id\": \"1475615000000083003\",\r\n                     *         \"state\": \"null\",\r\n                     *         \"fax\": \"null\",\r\n                     *         \"email\": \"naresh.babu+demo1@zylker.com\",\r\n                     *         \"status\": \"active\"\r\n                     *       },\r\n                     *       {\r\n                     *         \"zip\": \"null\",\r\n                     *         \"country\": \"null\",\r\n                     *         \"website\": \"null\",\r\n                     *         \"role\": \"Standard\",\r\n                     *         \"city\": \"null\",\r\n                     *         \"timezone\": \"Asia\\/Calcutta\",\r\n                     *         \"profile\": \"testProfile\",\r\n                     *         \"mobile\": \"null\",\r\n                     *         \"language\": \"en_US\",\r\n                     *         \"content\": \"Naresh Babu\",\r\n                     *         \"zuid\": \"61712147\",\r\n                     *         \"confirm\": \"true\",\r\n                     *         \"phone\": \"null\",\r\n                     *         \"street\": \"null\",\r\n                     *         \"id\": \"1475615000000185001\",\r\n                     *         \"state\": \"null\",\r\n                     *         \"fax\": \"null\",\r\n                     *         \"email\": \"naresh.babu+demo2@zylker.com\",\r\n                     *         \"status\": \"active\"\r\n                     *       }\r\n                     *     ]\r\n                     *   }\r\n                     * }\r\n                     */\r\n                    get: function (data) {\r\n                        return remoteCall(HTTPRequest.GET, data)\r\n                    },\r\n                    /**\r\n                     * @function post\r\n                     * @description Invoke HTTP post\r\n                     * @returns {Promise} resolved with response of the initiated request\r\n                     * @memberof ZOHO.CRM.HTTP\r\n                     * @param {Object} request - Request Object\r\n                     * @param {Object} request.params - Request Params\r\n                     * @param {Object} request.headers - Request Headers\r\n                     * @param {Object} request.body - Request Body\r\n                     * @example\r\n                     * var data ='<Contacts><row no=\"1\"><FL val=\"First Name\">Amy</FL><FL val=\"Last Name\">Dawson</FL><FL val=\"Email\">testing@testing.com</FL><FL val=\"Title\">Manager</FL><FL val=\"Phone\">1234567890</FL><FL val=\"Mobile\">292827622</FL><FL val=\"Account Name\"> <![CDATA[\"A & A\"]]> </FL></row></Contacts>';\r\n                     * var request ={\r\n                     * \t\turl : \"https://crm.zoho.com/crm/private/xml/CustomModule1/insertRecords\",\r\n                     * \t\tparams:{\r\n                     * \t\t\tscope:\"crmapi\",\r\n                     * \t\t\txmlData:data\r\n                     * \t\t},\r\n                     * \t\theaders:{\r\n                     * \t \t\tAuthorization:\"******************************\",\r\n                     * \t\t}\r\n                     * }\r\n                     * ZOHO.CRM.HTTP.post(request)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     *<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\t\t\t\t\t *<response uri=\"/crm/private/xml/Contacts/insertRecords\">\r\n\t\t\t\t\t *  <result>\r\n\t\t\t\t\t *    <message>Record(s) added successfully</message>\r\n\t\t\t\t\t *    <recorddetail>\r\n\t\t\t\t \t *      <FL val=\"Id\">457154000000952001</FL>\r\n\t\t\t\t\t *      <FL val=\"Created Time\">2018-10-24 13:55:56</FL>\r\n\t\t\t\t\t *      <FL val=\"Modified Time\">2018-10-24 13:55:56</FL>\r\n\t\t\t\t\t *      <FL val=\"Created By\"><![CDATA[NareshAutomation]]></FL>\r\n\t\t\t\t\t *      <FL val=\"Modified By\"><![CDATA[NareshAutomation]]></FL>\r\n\t\t\t\t\t *    </recorddetail>\r\n\t\t\t\t\t *  </result>\r\n\t\t\t\t\t *</response>\r\n                     */\r\n                    post: function (data) {\r\n                        return remoteCall(HTTPRequest.POST, data)\r\n                    },\r\n                    /**\r\n                     * @function put\r\n                     * @description Invoke HTTP put\r\n                     * @returns {Promise} resolved with response of the initiated request\r\n                     * @memberof ZOHO.CRM.HTTP\r\n                     * @param {Object} request - Request Object\r\n                     * @param {Object} request.params - Request Params\r\n                     * @param {Object} request.headers - Request Headers\r\n                     * @param {Object} request.body - Request Body\r\n                     * @example\r\n                     * var apidata =[\r\n                     *{\r\n                     *\t\"Last_Name\":\"testupdate\",\r\n                     *\tid:\"457154000000952001\"\r\n                     *}\r\n                     *]\r\n                     *\r\n                     *\r\n                     * var request ={\r\n                     *      url : \"https://crm.zoho.com/crm/v2/Contacts\",\r\n                     *      headers:{\r\n                     *          Authorization:\"******************************\",\r\n                     *      },\r\n                     *      body:{data:apidata}\r\n                     * }\r\n                     * ZOHO.CRM.HTTP.put(request)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     *{\r\n\t\t\t\t\t *  \"data\": [\r\n\t\t\t\t\t *    {\r\n\t\t\t\t\t *      \"code\": \"SUCCESS\",\r\n\t\t\t\t\t *      \"details\": {\r\n\t\t\t\t\t *        \"Modified_Time\": \"2018-10-24T14:08:57+05:30\",\r\n\t\t\t\t\t *        \"Modified_By\": {\r\n\t\t\t\t\t *          \"name\": \"NareshAutomation\",\r\n\t\t\t\t\t *          \"id\": \"457154000000148011\"\r\n\t\t\t\t\t *        },\r\n\t\t\t\t\t *        \"Created_Time\": \"2018-10-24T13:55:56+05:30\",\r\n\t\t\t\t\t *        \"id\": \"457154000000952001\",\r\n\t\t\t\t\t *        \"Created_By\": {\r\n\t\t\t\t\t *          \"name\": \"NareshAutomation\",\r\n\t\t\t\t\t *          \"id\": \"457154000000148011\"\r\n\t\t\t\t\t *        }\r\n\t\t\t\t\t *      },\r\n\t\t\t\t\t *      \"message\": \"record updated\",\r\n\t\t\t\t\t *      \"status\": \"success\"\r\n\t\t\t\t\t *    }\r\n\t\t\t\t\t *  ]\r\n\t\t\t\t\t *}\r\n                     */\r\n                    put: function (data) {\r\n                        return remoteCall(HTTPRequest.PUT, data)\r\n                    },\r\n                    /**\r\n                     * @function patch\r\n                     * @description Invoke HTTP patch\r\n                     * @returns {Promise} resolved with response of the initiated request\r\n                     * @memberof ZOHO.CRM.HTTP\r\n                     * @param {Object} request - Request Object\r\n                     * @param {Object} request.params - Request Params\r\n                     * @param {Object} request.headers - Request Headers\r\n                     * @param {Object} request.body - Request Body\r\n                     * @example\r\n                     * var data ={\r\n                     * name:\"name\",\r\n                     * age:\"23\"\r\n                     * };\r\n                     * var request ={\r\n                     *      url : \"https://www.example.com/patch\",\r\n                     *      params:{\r\n                     *          scope:\"apiscope\",\r\n                     *      },\r\n                     *      headers:{\r\n                     *          Authorization:\"******************************\",\r\n                     *      },\r\n                     *      body:data\r\n                     * }\r\n                     * ZOHO.CRM.HTTP.patch(request)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     *\r\n                     *{\r\n\t\t\t\t\t *  \"args\": {},\r\n\t\t\t\t\t *  \"data\": \"\",\r\n\t\t\t\t\t *  \"files\": {},\r\n\t\t\t\t\t *  \"form\": {},\r\n\t\t\t\t\t *  \"headers\": {\r\n\t\t\t\t\t *    \"Accept\": \"application/json\",\r\n\t\t\t\t\t *    \"Accept-Language\": \"en-GB,en-US;q=0.9,en;q=0.8\",\r\n\t\t\t\t\t *    \"Content-Length\": \"0\"\r\n\t\t\t\t\t *  },\r\n\t\t\t\t\t *  \"json\": null,\r\n\t\t\t\t\t *  \"url\": \"https://www.example.com/patch\"\r\n\t\t\t\t\t *}\r\n                     *\r\n                     */\r\n                    patch: function (data) {\r\n                        return remoteCall(HTTPRequest.PATCH, data)\r\n                    },\r\n                    /**\r\n                     * @function delete\r\n                     * @description Invoke HTTP delete\r\n                     * @returns {Promise} resolved with response of the initiated request\r\n                     * @memberof ZOHO.CRM.HTTP\r\n                     * @param {Object} request - Request Object\r\n                     * @param {Object} request.params - Request Params\r\n                     * @param {Object} request.headers - Request Headers\r\n                     * @param {Object} request.body - Request Body\r\n                     * @example\r\n                     * var request ={\r\n                     *      url : \"https://crm.zoho.com/crm/v2/Leads/111158000000045188\",\r\n                     *      headers:{\r\n                     *          Authorization:\"******************************\",\r\n                     *      }\r\n                     * }\r\n                     * ZOHO.CRM.HTTP.delete(request)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     *\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"id\": \"111158000000045188\"\r\n                     *      },\r\n                     *      \"message\": \"record deleted\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     *\r\n                     */\r\n                    delete: function (data) {\r\n                        return remoteCall(HTTPRequest.DELETE, data)\r\n                    }\r\n                },\r\n                /**\r\n                 * @namespace ZOHO.CRM.CONNECTOR\r\n                 */\r\n                CONNECTOR: {\r\n                    /**\r\n                     * @function invokeAPI\r\n                     * @description Invokes Connector API\r\n                     * @returns {Promise} resolved with response of the Connector API\r\n                     * @memberof ZOHO.CRM.CONNECTOR\r\n                     * @param {String} nameSpace - NameSpace of Connector API to invoke\r\n                     * @param {Object} data - Connector API Data\r\n                     * @param {Object} data.VARIABLES - Dynamic Data represented by placeholders in connectorAPI\r\n                     * @param {Object} data.CONTENT_TYPE - ContentType - multipart for multipart request\r\n                     * @param {Array} data.PARTS - For multipart request provide parts config here\r\n                     * @param {Object} data.FILE - To include a file in your multipart request\r\n                     * @example\r\n                     * var data =\t{\r\n                     * \t \"VARIABLES\":{\r\n                     *           \"apikey\" : \"*********\",\r\n                     *           \"First_Name\" : \"Naresh\",\r\n                     *           \"Last_Name\" : \"Babu\",\r\n                     *           \"email\" : \"naresh.babu@zylker.com\"\r\n                     *         }\r\n                     *     }\r\n                     * ZOHO.CRM.CONNECTOR.invokeAPI(\"MailChimp.sendSubscription\",data)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * @example\r\n                     *\r\n                     * var data = {\r\n                     *     \"CONTENT_TYPE\":\"multipart\",\r\n                     *     \"PARTS\":[\r\n                     *               {\r\n                     *                   \"headers\": {\r\n                     *                       \"Content-Type\": \"application/json\"\r\n                     *                   },\r\n                     *                   \"content\": {\"mimeType\": \"application/vnd.google-apps.folder\", \"title\": \"NareshFolder\"\r\n                     *                   }\r\n                     *               }\r\n                     *             ]\r\n                     *   }\r\n                     *   ZOHO.CRM.CONNECTOR.invokeAPI(\"ex10.testconnector.uplaodfile\",data)\r\n                     *   .then(function(data){\r\n                     *       console.log(data)\r\n                     *   })\r\n                     * @example\r\n                     * var file = document.getElementById(\"File\").files[0];\r\n                     * var fileType;\r\n                     *   if (file.type === \"application/pdf\"){\r\n                     *     fileType = file.type;\r\n                     *   }\r\n                     *   else if(file.type === \"image/jpeg\"){\r\n                     *     fileType = file.type;\r\n                     *   }\r\n                     *   else if(file.type === \"text/plain\"){\r\n                     *     fileType = \"application/msword\";\r\n                     *   }\r\n                     *   else if(file.type === \"\"){\r\n                     *     fileType = \"application/msword\";\r\n                     *   }\r\n\r\n                     *   console.log(file);\r\n                     *   var data = {\r\n                     *     \"VARIABLES\":{\r\n                     *       \"pathFileName\" : \"/Zoho CRM/myFile/\"+file.name\r\n                     *     },\r\n                     *     \"CONTENT_TYPE\":\"multipart\",\r\n                     *     \"PARTS\":[\r\n                     *               {\r\n                     *                 \"headers\": {\r\n                     *                   \"Content-Type\": \"application/json\"\r\n                     *                 },\r\n                     *                 \"content\": {\"mimeType\": fileType,\"description\": \"TestFile to upload\", \"title\":file.name}\r\n                     *               },{\r\n                     *                 \"headers\": {\r\n                     *                   \"Content-Disposition\": \"file;\"\r\n                     *                 },\r\n                     *                 \"content\": \"__FILE__\"\r\n                     *               }\r\n                     *             ],\r\n                     *     \"FILE\":{\r\n                     *       \"fileParam\":\"content\",\r\n                     *       \"file\":file\r\n                     *     },\r\n                     *   }\r\n                     *   console.log(data);\r\n                     *   ZOHO.CRM.CONNECTOR.invokeAPI(\"ex10.testconnector.uplaodfile\",data)\r\n                     *   .then(function(data){\r\n                     *       console.log(data)\r\n                     *   })\r\n\r\n                     */\r\n                    invokeAPI: function (nameSpace, data) {\r\n                        return remoteCall(nameSpace, data, 'CONNECTOR_API')\r\n                    },\r\n                    /**\r\n                     * @function authorize\r\n                     * @description Prompts the Connector Authorize window\r\n                     * @returns {Promise} resolved with true on successful Authorization\r\n                     * @memberof ZOHO.CRM.CONNECTOR\r\n                     * @param {String} nameSpace - NameSpace of Connector to authorize\r\n                     * @example\r\n                     * var connectorName = \"zoho.authorize\";\r\n                     * ZOHO.CRM.CONNECTOR.authorize(connectorName);\r\n                     *\r\n                     */\r\n                    authorize: function (nameSpace) {\r\n                        return remoteCall(nameSpace, {}, 'CONNECTOR_AUTHORIZE')\r\n                    }\r\n                    /*\r\n                     * @function revokeConnector\r\n                     * @description revoke Connector\r\n                     * @returns {Promise} resolved with response of the Connector\r\n                     * @memberof ZOHO.CRM.CONNECTOR\r\n                     * @param {String} nameSpace - NameSpace of Connector to revoke\r\n                     * @example\r\n                     *   ZOHO.CRM.CONNECTOR.revokeConnector(\"zoho.accounts\")\r\n                     *   .then(function(data){\r\n                     *       console.log(data)\r\n                     *   })\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *    \"RESULT\": \"success\"\r\n                     * }\r\n                     *revokeConnector: function(nameSpace) {\r\n                     *    return remoteCall(nameSpace, {}, \"CONNECTOR_REVOKE\");\r\n                     *}\r\n\t\t\t\t\t */\r\n                },\r\n                /**\r\n                 * @namespace ZOHO.CRM.CONNECTION\r\n                 */\r\n                CONNECTION: {\r\n                    /**\r\n                     * @function invoke\r\n                     * @description Invoke a Connection\r\n                     * @returns {Promise} resolved with response of the connection made\r\n                     * @memberof ZOHO.CRM.CONNECTION\r\n                     * @param {String} conn_name - Connection Name\r\n                     * @param {Object} req_data - Request Data\r\n                     * @example\r\n                     * var conn_name = \"mailchimp4\";\r\n                     * var req_data ={\r\n                     *   \"parameters\" : {\r\n                     *       \"param1\" : \"paramvalue1\",\r\n                     *       \"param2\" : \"paramvalue2\"\r\n                     *   },\r\n                     *   \"headers\" : {\r\n                     *       \"header1\" : \"headervalue1\",\r\n                     *       \"header2\" : \"headervalue2\"\r\n                     *   },\r\n                     *   \"method\" : \"POST\",\r\n                     *   \"url\" : \"http://mailchimp.api/sample_api\",\r\n                     *   \"param_type\" : 1\r\n                     * };\r\n                     * ZOHO.CRM.CONNECTION.invoke(conn_name, req_data)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     * {\r\n                     *   \"code\" : \"SUCCESS\",\r\n                     *   \"details\" : {\r\n                     *       \"CODE\" : 200,\r\n                     *       \"message\" : \"action completed successfully\",\r\n                     *       \"status\" : \"Success\"\r\n                     *    },\r\n                     *   \"message\" : \"Connection invoked successfully\",\r\n                     *   \"status\" : \"success\"\r\n                     *  }\r\n                     */\r\n                    invoke: function (conn_name, req_data) {\r\n                        const request = {}\r\n                        const reqObj = {}\r\n                        reqObj.url = req_data.url\r\n                        reqObj.method = req_data.method\r\n                        reqObj.param_type = req_data.param_type\r\n                        reqObj.parameters = JSON.stringify(req_data.parameters)\r\n                        reqObj.headers = JSON.stringify(req_data.headers)\r\n                        request.data = reqObj\r\n                        const data = {\r\n                            category: 'CRM_CONNECTION', // no i18n\r\n                            connectionName: conn_name,\r\n                            data: request\r\n                        }\r\n                        return newRequestPromise(data)\r\n                    }\r\n                }\r\n            }\r\n        })()\r\n    }\r\n})()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WTemplateBoard\":\"WTemplateBoard_WTemplateBoard__3HTkn\"};","/* own message in */\r\nexport const OWN_MESSAGE_IN = \"OWN_MESSAGE_IN\";\r\n/* receipt message from client */\r\nexport const ERROR_IN = \"ERROR_IN\";\r\n/* CRM prev messages */\r\nexport const FROM_PREV_MSG = \"FROM_PREV_MSG\"\r\nexport const TO_PREV_MSG = \"TO_PREV_MSG\"\r\nexport const FROM_LIVE_MSG = \"FROM_LIVE_MSG\"\r\nexport const DELETE_FROM_PREV_MSG = \"DELETE_FROM_PREV_MSG\"\r\nexport const DELETE_TO_PREV_MSG = \"DELETE_TO_PREV_MSG\"\r\nexport const DELETE_FROM_LIVE_MSG = \"DELETE_FROM_LIVE_MSG\"\r\n/* TEMPLATE MESSAGE */\r\nexport const TEMPLATE_MESSAGE = \"TEMPLATE_MESSAGE\"\r\n\r\n\r\n","import { ERROR_IN } from '../constants/index';\r\n\r\nexport function errorsIn(payload) {\r\n    \r\n    return dispatch => {\r\n        dispatch({ type: ERROR_IN, payload: payload });\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport function badUrl() {\r\n    return {type: \"BAD_URL\"};\r\n}\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { errorsIn } from '../../js/actions/errors'\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    error: message => dispatch(errorsIn(message))\r\n  };\r\n}\r\n\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        myKey: 'E@Js#07Do=U$'\r\n        \r\n    }\r\n  }\r\n  componentDidMount() {\r\n    \r\n    this.handleSubmit()\r\n  }\r\n\r\n \r\n  handleSubmit(e) {\r\n    //e.preventDefault()\r\n    axios.post('/wabaSend/login', {password: this.state.myKey})\r\n    .then(res=> {\r\n       localStorage.setItem('jwtToken', res.data.token)\r\n       axios.defaults.headers.common['Authorization'] =  'Bearer'+res.data.token\r\n    })\r\n    .catch(err=>{\r\n      localStorage.removeItem('jwtToken')\r\n      if (err.response.status === 401) {\r\n        let message = \"Error validating your credentials\"\r\n        this.props.error(message);\r\n      }\r\n      else {\r\n        this.props.error(err.response.statusText);\r\n      }\r\n\r\n    })\r\n  }\r\n \r\n  render(){\r\n  return (\r\n    <div>\r\n\r\n\r\n      \r\n    </div>\r\n  )\r\n  }\r\n}\r\n\r\nconst connected = connect(null, mapDispatchToProps)(Login);\r\nexport default connected","import Login from \"./Login\";\r\nexport default Login;\r\n","import { isEmpty } from 'lodash';\r\nimport React from 'react';\r\nimport './Menuheader.css';\r\n\r\nconst Menuheader = (props) => (\r\n  <div id=\"left-column\">\r\n    <div class=\"sidebar-notifications\">\r\n      <img src=\"images/notifications.svg\" alt=\"Default img\"/>\r\n        <div class=\"sidebar-notifications-message\">\r\n          <span>Zeus4 WABA</span>\r\n        </div>\r\n    </div>\r\n       \r\n    <div id=\"inner-nav\"></div>\r\n      <div id=\"container\">\r\n        <div id=\"profile\">\r\n          <div id=\"image\">\r\n            <img id=\"profile-photo\" src=\"./images/no-user.jpg\" alt=\"attach\"/>\r\n              <a href=\"daya\"><i class=\"fas fa-pen stroke-transparent\"></i></a>\r\n          </div>\r\n          <p id=\"name\">{props.usrAll.Full_Name}<br />\r\n            <span id=\"email\">{props.usrAll.Email}</span>\r\n          </p>\r\n          <p id=\"designation\">{props.usrAll.Title}<br />\r\n            <span id=\"college\">{props.usrAll.Description}</span>\r\n          </p>\r\n          <p id=\"designation\">LeadSource : {props.usrAll.Lead_Source}</p>\r\n\r\n          <p id=\"designation\">Created Time : {props.usrAll.Created_Time}</p>\r\n          <p id=\"designation\">Last Activity Time : {props.usrAll.Last_Activity_Time}</p>\r\n        \r\n          <p>Type <code>/tpltext </code>to add a WABA Text Template </p>\r\n          <p>Type <code>/tplmedia </code>to add a WABA Media Template </p>\r\n          <p>Type <code>/tplshow </code>to view all templates </p>\r\n          <p>Type <code>/template </code>before template name if you want to send a template </p>\r\n        </div>\r\n\r\n        <div id=\"info-cards\">\r\n          <div class=\"card\">\r\n            <p><i class=\"fas fa-briefcase stroke-transparent\"></i>&nbsp;&nbsp;&nbsp;Account Name</p>\r\n            <a href=\"#\">{!isEmpty(props.usrAll.Account_Name) ? props.usrAll.Account_Name.name : 'No account associated'}</a>\r\n          </div>\r\n          <div class=\"card\">\r\n            <p><i class=\"fas fa-briefcase stroke-transparent\"></i>&nbsp;&nbsp;&nbsp;Contact Data</p>\r\n            <a href=\"#\"><img src='./images/mobile-2.jpg' alt='mobile' /> {props.usrAll.Mobile}</a><br />\r\n            <a href=\"#\"><img src='./images/phone-2.png' alt='mobile' />{props.usrAll.Phone}</a>\r\n          </div>\r\n          <div class=\"card\">\r\n            <p><i class=\"fas fa-briefcase stroke-transparent\"></i>&nbsp;&nbsp;&nbsp;Address Data</p>\r\n            <a href=\"#\"><img src='./images/state-2.png' alt='mobile' />{props.usrAll.State}</a><br />\r\n            <a href=\"#\"><img src='./images/location-2.png' alt='mobile' />{props.usrAll.City}, {props.usrAll.Street}</a>\r\n          </div>\r\n          \r\n        </div>\r\n        \r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n    \r\n  </div>\r\n   \r\n);\r\n\r\nMenuheader.propTypes = {};\r\n\r\nMenuheader.defaultProps = {};\r\n\r\nexport default Menuheader;\r\n\r\n/*\r\n<div class=\"sidebar-header\">\r\n    \r\n      \r\n      \r\n      \r\n      <img src=\"./images/no-user.jpg\" alt=\"attach\"/>\r\n      <span class=\"contact-data\">{props.usrAll.Full_Name}</span>\r\n      <div class=\"sidebar-header-icons\">\r\n        <img src=\"images/status.svg\" alt=\"Default img\" />\r\n        <img src=\"images/message-icon.svg\" alt=\"Default img\" />\r\n        <img src=\"images/menu-icon.svg\" alt=\"Default img\"  />\r\n      </div>\r\n    </div>\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    <div className='contact-data'>\r\n      <span><strong>Account Name: </strong></span><span class=\"contact-data\">{!isEmpty(props.usrAll.Account_Name) ? props.usrAll.Account_Name.name : 'No account associated'}</span><br />\r\n      <span><strong>Mobile: </strong></span><span class=\"contact-data\">{props.usrAll.Mobile}</span><br />\r\n      <span><strong>Title: </strong></span><span class=\"contact-data\">{props.usrAll.Title}</span><br />\r\n      <span><strong>Lead Source: </strong></span><span class=\"contact-data\">{props.usrAll.Lead_Source}</span><br />\r\n      <span><strong>Created Time: </strong></span><span class=\"contact-data\">{props.usrAll.Created_Time}</span><br />\r\n      <span><strong>Last Activity Time: </strong></span><span class=\"contact-data\">{props.usrAll.Last_Activity_Time}</span>\r\n      <span><h3>Address</h3>\r\n        <span><strong>City: </strong></span><span className='contact-data'>{props.usrAll.City}</span><br />\r\n        <span><strong>State: </strong></span><span className='contact-data'>{props.usrAll.State}</span><br />\r\n        <span><strong>Street: </strong></span><span className='contact-data'>{props.usrAll.Street}</span><br />\r\n      </span>\r\n\r\n    </div>\r\n\r\n*/\r\n\r\n","import { useDispatch } from 'react-redux';\r\nimport { addPrevMessagesTo } from '../../../js/actions/index'\r\nimport { orderBy } from 'lodash';\r\n\r\n\r\nconst LoadToMsgs = (props) => {\r\n  const dispatch = useDispatch()\r\n\r\n  let data = orderBy(props.msgTo, ['Created_Time'], ['asc']);\r\n  dispatch(addPrevMessagesTo(data));\r\n}\r\n\r\nexport default LoadToMsgs;\r\n\r\n","import { isObject } from 'lodash';\r\nimport { isEmpty } from 'lodash';\r\nimport { ERROR_IN, \r\n        OWN_MESSAGE_IN, \r\n        FROM_PREV_MSG, \r\n        TO_PREV_MSG,\r\n        FROM_LIVE_MSG, \r\n        DELETE_FROM_PREV_MSG,\r\n        DELETE_TO_PREV_MSG,\r\n        DELETE_FROM_LIVE_MSG\r\n    } from '../constants';\r\n\r\n//send a simple text message\r\nexport function addOwnMessage(payloadSend) {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('jwtToken')\r\n        const options = {\r\n            method: `POST`,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer: ${token}`\r\n              },\r\n            body: JSON.stringify(payloadSend)\r\n            \r\n            };\r\n        return fetch(\"/wabaMessage\", options)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let response = {...json}\r\n                if (!isEmpty(response.error)){\r\n                    dispatch({type: ERROR_IN, payload: response.error.message});\r\n                    payloadSend.error = response.error.message;\r\n                    dispatch({ type: OWN_MESSAGE_IN, payload: payloadSend });\r\n                } else if (isObject(response.errors)){\r\n                    dispatch({type: ERROR_IN, payload: response.errors.message});                    \r\n                } else {\r\n                    dispatch({ type: OWN_MESSAGE_IN, payload: payloadSend });\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                dispatch({type: ERROR_IN, payload: 'Unknown error'});\r\n                console.log('Error action', err)\r\n            })\r\n    }\r\n}\r\n\r\n/**sent whatsapp template to approve */\r\nexport function sendTemplate(payload) {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('jwtToken')\r\n        const options = {\r\n            method: `POST`,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer: ${token}`\r\n              },\r\n            body: JSON.stringify(payload)\r\n            \r\n            };\r\n        return fetch(\"/wabaTemplate\", options)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let response = {...json}\r\n                if (!isEmpty(response.error)){\r\n                    dispatch({type: ERROR_IN, payload: response.error.message});\r\n                } else if (isObject(response.errors)){\r\n                    dispatch({type: ERROR_IN, payload: response.errors.message});                    \r\n                } else {\r\n                    //dispatch({ type: OWN_MESSAGE_IN, payload: payloadSend });\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                dispatch({type: ERROR_IN, payload: 'Unknown error'});\r\n                console.log('Error action', err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n/**get approved templates from whatsapp */\r\nexport function getTemplates(payload) {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('jwtToken')\r\n        const options = {\r\n            method: `GET`,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer: ${token}`\r\n              },\r\n            \r\n            };\r\n\r\n        return fetch(\"/gettemplates\", options)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let response = {...json}\r\n                console.log(\"Response Get templates\", response)\r\n                if (!isEmpty(response.error)){\r\n                    dispatch({type: ERROR_IN, payload: response.error.message});\r\n                    //payload.error = response.error.message;\r\n                    //dispatch({ type: OWN_MESSAGE_IN, payload: payloadSend });\r\n                } else if (isObject(response.errors)){\r\n                    dispatch({type: ERROR_IN, payload: response.errors.message});                    \r\n                } else {\r\n                    //dispatch({ type: OWN_MESSAGE_IN, payload: payloadSend });\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                dispatch({type: ERROR_IN, payload: 'An unknown error occurred when trying to retrieve WhatsApp Templates'});\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function addPrevMessagesTo(payload) {\r\n    return dispatch => {\r\n        dispatch({ type: TO_PREV_MSG, payload: payload });\r\n    }\r\n}\r\n\r\n\r\nexport function addPrevMessagesFrom(payload) {\r\n    return dispatch => {\r\n        dispatch({ type: FROM_PREV_MSG, payload: payload });\r\n    }\r\n}\r\n\r\nexport function addLiveMessagesFrom(payload) {\r\n    return dispatch => {\r\n        dispatch({ type: FROM_LIVE_MSG, payload: payload });\r\n    }\r\n}\r\n\r\nexport function deletePrevMessagesFrom(payload) {\r\n    return dispatch => {\r\n        dispatch({ type: DELETE_FROM_PREV_MSG, payload})\r\n    }\r\n}\r\n\r\nexport function deletePrevMessagesTo(payload) {\r\n    return dispatch => {\r\n        dispatch({ type: DELETE_TO_PREV_MSG, payload})\r\n    }\r\n}\r\n\r\nexport function deleteLiveMessagesFrom(payload) {\r\n    return dispatch => {\r\n        dispatch({ type: DELETE_FROM_LIVE_MSG, payload})\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function writeError(payload) {\r\n    return dispatch => {\r\n        dispatch({type: ERROR_IN, payload})\r\n    }\r\n}","import { useDispatch } from 'react-redux';\r\nimport { addPrevMessagesFrom } from '../../../js/actions/index'\r\nimport { orderBy } from 'lodash';\r\n\r\n\r\nconst LoadFromMsgs = (props) => {\r\n  const dispatch = useDispatch()\r\n\r\n  let data = orderBy(props.msgFrom, ['Created_Time'], ['asc']);\r\n  dispatch(addPrevMessagesFrom(data));\r\n}\r\n\r\nexport default LoadFromMsgs;\r\n\r\n","import React from 'react';\r\nimport { ZOHO } from '../../../vendor/ZSDK';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addLiveMessagesFrom } from '../../../js/actions/index'\r\nimport { last } from 'lodash';\r\n\r\n\r\nfunction WriteToZohoFromMsg(props) {\r\n    const messages = useSelector(store => store.messages_in)\r\n\r\n    const dispatch = useDispatch()\r\n    const last_in_message = last(messages)\r\n\r\n\r\n    let status = '';\r\n    //set type of message between successfully and unsuccessfully delivered\r\n    if (last_in_message !== '') {\r\n      status = 'error'\r\n    }\r\n    \r\n    //set data to insert\r\n    if (last_in_message.message !== '' && last_in_message.message !== null) {\r\n      const data = {'Name': props.user, 'zeus4waba__Whatsapp_From': props.user, 'zeus4waba__w': `${last_in_message.message}`, 'zeus4waba__Whatsapp_Status': `${status}`}\r\n      ZOHO.CRM.API.insertRecord({Entity: 'zeus4waba__Whatsapps', APIData: data})\r\n        .then((dataMessage => {\r\n          const id = dataMessage.data[0].details.id\r\n          //get the record\r\n          ZOHO.CRM.API.getRecord({Entity: 'zeus4waba__Whatsapps', RecordID: id})\r\n            .then((response => {\r\n              dispatch(addLiveMessagesFrom(response.data));\r\n            }))\r\n          //dispatch(addLiveMessagesFrom(dataMessage.data[0]));\r\n        }))\r\n        .catch((e) => console.log(e))\r\n    }\r\n \r\n  return (\r\n    <div>\r\n    </div>\r\n    );\r\n  }\r\n\r\nexport default WriteToZohoFromMsg;\r\n","import React from 'react';\nimport { ZOHO } from '../../../vendor/ZSDK';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { writeError } from '../../../js/actions/index'\nimport { last, isEmpty } from 'lodash';\n\n\nconst DeleteToZohoMsg = () => {\n  const messages = useSelector(store => store.messages_id)\n  const dispatch = useDispatch();\n\n  if (!isEmpty (messages)) {\n    const last_id_message = last(messages)\n\n    if (last_id_message && last_id_message !== '' && last_id_message !== null) {\n        ZOHO.CRM.API.deleteRecord({Entity: 'zeus4waba__Whatsapps', RecordID: `${last_id_message}`})\n          .then((response => {\n            const status = response.data[0].status\n            if (status !== 'success') {\n              dispatch(writeError(response.data[0].message))\n            }\n          }))\n     \n    }\n  }\n};\n\nexport default DeleteToZohoMsg;\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { isEmpty } from 'lodash';\r\nimport { deletePrevMessagesTo } from '../../../js/actions/index'\r\n\r\n\r\nconst WriteToPrevMsgs = () => {\r\n  const to_prev_messages = useSelector(store => store.to_prev_messages)\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      {to_prev_messages.map(msg => (\r\n        (msg.zeus4waba__w !== null && msg.zeus4waba__w !== '') \r\n        ?\r\n          <div class=\"receiver\">\r\n              <span class=\"receiver-message\">{msg.zeus4waba__w} </span>\r\n              <span class=\"align-right\" onClick={() => dispatch(deletePrevMessagesTo(msg.id))}><img src=\"./images/delete_message-2.jpg\" alt=\"attach\" /></span>\r\n\r\n                {isEmpty(msg.zeus4waba__Whatsapp_Status) ? \r\n                (\r\n                  <span class=\"message-status\"><img src=\"./images/double-check-seen.svg\" alt=\"attach\" /></span>\r\n                ) \r\n                : \r\n                (\r\n                  <span class=\"align-right\"><img src=\"./images/error.png\" alt=\"attach\" /></span>\r\n                )}  \r\n                <span class=\"message-time align-right\">{msg.Created_Time}</span>\r\n\r\n            </div>\r\n            \r\n            :\r\n\r\n            ''\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WriteToPrevMsgs;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { deletePrevMessagesFrom } from '../../../js/actions/index'\r\nimport { isEmpty } from 'lodash';\r\nimport './WriteFromPrevMsgs.css'\r\n\r\nconst WriteFromPrevMsgs = () => {\r\n  const from_prev_messages = useSelector(store => store.from_prev_messages)\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      {from_prev_messages.map(msg => (\r\n        (msg.zeus4waba__w !== null && msg.zeus4waba__w !== '') \r\n        ?\r\n          <div class=\"sender\">\r\n              <span class=\"sender-message\">{msg.zeus4waba__w} </span>\r\n              <span class=\"align-right\" onClick={() => dispatch(deletePrevMessagesFrom(msg.id))}><img src=\"./images/delete_message-2.jpg\" alt=\"attach\"  /></span>              \r\n                {isEmpty(msg.zeus4waba__Whatsapp_Status) ? \r\n                (\r\n                  <span class=\"message-status\"><img src=\"./images/double-check-seen.svg\" alt=\"attach\" /></span>\r\n                ) \r\n                : \r\n                (\r\n                  <span class=\"align-right\"><img src=\"./images/error.png\" alt=\"attach\" /></span>\r\n                )} \r\n                <span class=\"message-time align-right\">{msg.Created_Time}</span>\r\n            </div>\r\n            \r\n            :\r\n\r\n            ''\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WriteFromPrevMsgs;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteLiveMessagesFrom } from '../../../js/actions/index'\r\nimport { isEmpty } from 'lodash';\r\n\r\n\r\nconst WriteToLiveMsgs = (props) => {\r\n  const from_live_messages = useSelector(store => store.from_live_messages)\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      {from_live_messages.map(msg => (\r\n        (msg.zeus4waba__w !== null && msg.zeus4waba__w !== '') \r\n        ?\r\n          <div class=\"sender\">\r\n              <span class=\"sender-message\">{msg.zeus4waba__w} </span>\r\n              <span class=\"align-right\" onClick={() => dispatch(deleteLiveMessagesFrom(msg.id))}><img src=\"./images/delete_message-2.jpg\" alt=\"attach\"  /></span>              \r\n                {isEmpty(msg.zeus4waba__Whatsapp_Status) ? \r\n                (\r\n                  <span class=\"message-status\"><img src=\"./images/double-check-seen.svg\" alt=\"attach\" /></span>\r\n                ) \r\n                : \r\n                (\r\n                  <span class=\"message-status\"><img src=\"./images/error.png\" alt=\"attach\" /></span>\r\n                )}    \r\n                <span class=\"message-time align-right\">{msg.Created_Time}</span>\r\n\r\n            </div>\r\n            \r\n            :\r\n\r\n            ''\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WriteToLiveMsgs\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'animate.css';\r\nimport './Error.css'\r\n\r\nconst mapStateToProps = state => {\r\n  return { errors_in: state.errors_in }\r\n}\r\n\r\nexport class ErrorComponent extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        {this.props.errors_in.map(post => (\r\n          <div class='padre animate__animated animate__bounceOutRight animate__delay-4s'>\r\n        \r\n         \r\n            <div >{post}</div>\r\n          \r\n       \r\n      </div>\r\n      ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst connected = connect(mapStateToProps)(ErrorComponent);\r\nexport default connected;\r\n","import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {sendTemplate} from '../../../js/actions/index';\r\nimport './WTemplate.css';\r\n\r\nconst WTemplate = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState({\r\n                            visible: props.visible,\r\n                            title: '',\r\n                            language: 'en_US',\r\n                            category: 'MARKETING',\r\n                            message_text: ''\r\n                          })\r\n\r\n  const handleInputChange = (event) => {\r\n    setData({\r\n      ...data,\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    const object = {\r\n      template_name: data.title,\r\n      language: data.language,\r\n      category: data.category,\r\n      template_text: data.message_text\r\n\r\n    }\r\n    dispatch(sendTemplate({ ...object}))\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.visible ? \r\n        <div class=\"superior-text animate__animated animate__bounceInRight\">\r\n            <h3>Text Template</h3>\r\n            <div class=\"form-row\">\r\n              <div class=\"form-group col-md-6\">\r\n                <label for=\"title\">Title</label>\r\n                <input \r\n                    type=\"text\" \r\n                    class=\"form-control\"\r\n                    name=\"title\"\r\n                    placeholder=\"Template Title\"\r\n                    onChange={handleInputChange} />\r\n              </div>  \r\n              <div class=\"form-group col-md-6\">\r\n                <label for=\"language\">Language</label>\r\n                <select name=\"language\" class=\"form-control\" onChange={handleInputChange}>\r\n                  <option selected>Choose...</option>\r\n                  <option value='en_US'>US</option>\r\n                </select>    \r\n              </div>\r\n              <div class=\"form-group col-md-6\">\r\n                <label for=\"category\">Category</label>\r\n                <select name=\"category\" class=\"form-control\" onChange={handleInputChange}>\r\n                  <option selected>Choose...</option>\r\n                  <option value='TRANSACTIONAL'>Transactional</option>\r\n                  <option value='MARKETING'>Marketing</option>\r\n                  <option value='OTP'>OTP</option>\r\n                </select>    \r\n              </div>\r\n\r\n              <div class=\"form-group col-md-6\">\r\n                <label for=\"TemplateText\">Template Text</label>\r\n                <textarea \r\n                      class=\"form-control\"\r\n                      placeholder=\"Template plain text\"\r\n                      name=\"message_text\"\r\n                      onChange={handleInputChange}      \r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <button type=\"submit\" class=\"btn btn-primary\" onClick={handleSubmit}>Send Template</button>\r\n      </div>\r\n\r\n      :\r\n\r\n      <div></div>\r\n      }\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nexport default WTemplate;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './WMediaTemplate.css';\r\n\r\n\r\nclass WMediaTemplate extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { \r\n      visible: this.props.visible\r\n    }\r\n  }\r\n\r\n  /*setParams = () => {\r\n    this.props.handler(false)\r\n  }*/\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n      {this.props.visible ? \r\n        <div class=\"superior-text animate__animated animate__bounceInRight\">\r\n            <h3>Media Template</h3>\r\n            <p>Working on it....</p>\r\n        </div>\r\n\r\n      :\r\n\r\n      <div></div>\r\n      }\r\n      </div>\r\n\r\n\r\n      \r\n  \r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nWMediaTemplate.propTypes = {};\r\n\r\nWMediaTemplate.defaultProps = {};\r\n\r\nexport default WMediaTemplate;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './WriteWTemplates.css';\nimport { extend } from 'lodash';\n\nclass WriteWTemplates extends React.Component {\n\n  //pass data-template to parent\n  setParams = (e) => {\n    const temp = e.target.dataset.template;\n    this.props.handler(temp)\n  }\n\n \n \n render() {\n  return (\n<div data-testid=\"WriteWTemplates\">\n    {\n      this.props.templates.map(post => (\n        <p class='cursor-hand' onClick={this.setParams} data-template={post}>{post}</p>\n      ))\n    }\n  </div>\n  )\n }\n \n}\n\nWriteWTemplates.propTypes = {};\n\nWriteWTemplates.defaultProps = {};\n\nexport default WriteWTemplates;\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './WTemplateBoard.module.css';\r\nimport { getTemplates } from '../../../js/actions/index';\r\nimport WriteWTemplates from '../WriteWTemplates/WriteWTemplates';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getTemplates: message => dispatch(getTemplates(message))\r\n  };\r\n}\r\n\r\nclass WTemplateBoard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.rr = []\r\n   \r\n  }\r\n\r\n  componentDidMount() {\r\n    //let templates = this.props.getTemplates();\r\n    this.rr = ['template1', 'template2', 'template3', 'template4'];\r\n  }\r\n\r\n\r\n  //set handlerTemp from parent\r\n  setParams = (temp) => {\r\n    this.props.handlerTemp(temp)\r\n  }\r\n\r\n  // Handler\r\n  handler = (template) => {\r\n    this.setParams(template)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.visible ? \r\n          <div class=\"superior-text animate__animated animate__bounceInRight\">\r\n              <h3>Template Board</h3>\r\n              <div>\r\n                <WriteWTemplates handler={this.handler} templates={this.rr}/>\r\n\r\n              </div>\r\n          </div>\r\n        :\r\n        <div></div>\r\n        }\r\n      </div>\r\n\r\n\r\n      \r\n  \r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst connected = connect('', mapDispatchToProps)(WTemplateBoard);\r\nexport default connected;\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { addOwnMessage } from '../../js/actions/index'\r\nimport { errorsIn } from \"../../js/actions/errors\";\r\nimport \"./Board.css\";\r\nimport { isEmpty } from 'lodash';\r\nimport WriteToPrevMsgs from '../Writers/WriteToPrevMsgs/WriteToPrevMsgs';\r\nimport WriteFromPrevMsgs from '../Writers/WriteFromPrevMsgs/WriteFromPrevMsgs';\r\nimport WriteToLiveMsgs from '../Writers/WriteToLiveMsgs/WriteToLiveMsgs';\r\nimport Error from '../Error/Error';\r\nimport WTemplate from '../WTemplates/WTemplate/WTemplate';\r\nimport WMediaTemplate from \"../WTemplates/WMediaTemplate/WMediaTemplate\";\r\nimport WTemplateBoard from \"../WTemplates/WTemplateBoard/WTemplateBoard\";\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addOwnMessage: message => dispatch(addOwnMessage(message)),\r\n    errorsIn: message => dispatch(errorsIn(message))\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { messages_in: state.messages_in, to_prev_messages: state.to_prev_messages, from_prev_messages: state.from_prev_messages }\r\n}\r\n\r\nclass BoardComponent extends React.Component {\r\n  constructor(props) {\r\n    //window['initial']();\r\n    super(props)\r\n    this.state = { message: '', \r\n                    mobileTo: '',\r\n                    showTextTemplateForm: false,\r\n                    showMediaTemplateForm: false,\r\n                    showAllTemplates: false }\r\n    this.handleMessage = this.handleMessage.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.mobile = '';\r\n    this.fullname = window.fullname;\r\n  }\r\n\r\n  state = {\r\n    template_board: ''\r\n  }\r\n\r\n  handleMessage(event) {\r\n    this.setState({ message: event.target.value })\r\n    this.setState({showTextTemplateForm: false})\r\n    let value = event.target.value;\r\n\r\n    switch (value) {\r\n      case '/tpltext':\r\n        this.setState({showTextTemplateForm: true});\r\n        break;\r\n      case '/tplmedia':\r\n        this.setState({showMediaTemplateForm: true});\r\n        break;\r\n      case '/tplshow':\r\n        this.setState({showAllTemplates: true});\r\n        break;\r\n      default:\r\n        this.setState({\r\n                    showTextTemplateForm: false,\r\n                    showMediaTemplateForm: false,\r\n                    showAllTemplates: false\r\n                  });\r\n        break;\r\n    }\r\n\r\n    \r\n  }\r\n\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    if (isEmpty(this.props.mobile)) {\r\n      this.props.errorsIn (\"No mobile detected in this contact\");\r\n      throw new Error(\"No mobile configure\")\r\n    }\r\n      \r\n    if (this.state.message !== '') {\r\n      if (this.messageRouter()) {\r\n        this.props.addOwnMessage({ mobile: this.props.mobile, message: this.state.message });\r\n        this.setState({\r\n          message: ''\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  //check message contain for specials chars combinations\r\n  messageRouter() {\r\n    const message = this.state.message\r\n    if (message.indexOf('/template') === 0) {\r\n      //temporal error\r\n      this.props.errorsIn (\"/template Message is not supported yet\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  //wtemplateboard callback function\r\n  //set /template type message\r\n  handleTemplate = (tmp) => {\r\n    this.setState({template_board: tmp})\r\n    this.setState({\r\n      message: `/template ${tmp}`,\r\n      showAllTemplates: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id='columna2' class=\"main\">\r\n        <div class=\"chat-window\">\r\n          <WTemplate visible={this.state.showTextTemplateForm} />\r\n          <WMediaTemplate visible={this.state.showMediaTemplateForm} />\r\n          <WTemplateBoard handlerTemp={this.handleTemplate} visible={this.state.showAllTemplates} />\r\n          <Error />\r\n          <WriteToPrevMsgs />\r\n          <WriteFromPrevMsgs />\r\n          <WriteToLiveMsgs />\r\n          \r\n          \r\n        </div>\r\n          \r\n        <div class=\"type-message-bar\">\r\n          <div class=\"type-message-bar-center\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"\"\r\n              id=\"comment\"\r\n              placeholder=\"Send a message\"\r\n              value={this.state.message}\r\n              onChange={this.handleMessage}\r\n            />\r\n          </div>\r\n          <div class=\"type-message-bar-right\">\r\n            <img src=\"images/whatsapp-send-1.png\" alt=\"Send\" onClick={this.handleSubmit}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )\r\n    } \r\n}\r\n\r\nconst connected = connect(mapStateToProps, mapDispatchToProps)(BoardComponent);\r\nexport default connected;\r\n\r\n  /*\r\n  <div class=\"main\">\r\n          <div class=\"chat-window-header\">\r\n            <div class=\"chat-window-header-left\">\r\n              <div class=\"contact-name-and-status-container\">\r\n              <span class=\"chat-window-contact-name\"></span>\r\n              </div>\r\n            </div>\r\n            <div class=\"chat-window-header-right\">\r\n              <img class=\"chat-window-search-icon\" src=\"images/search-icon.svg\" alt=\"attach\" />\r\n              <img class=\"chat-window-menu-icon\" src=\"images/menu-icon.svg\" alt=\"attach\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"chat-window\">\r\n            \r\n            \r\n            \r\n            {this.props.messages_in.map(post => (\r\n                <div class=\"sender\">\r\n                  <span class=\"sender-message\">{post.message} </span>\r\n                  <span class=\"message-time\">21:32</span>\r\n                  {isEmpty(post.error) ? \r\n                    (\r\n                      <span class=\"message-status\"><img src=\"./images/double-check-seen.svg\" alt=\"attach\" /></span>\r\n                    ) \r\n                    : \r\n                    (\r\n                      <span class=\"message-status\"><img src=\"./images/status.svg\" alt=\"attach\" /></span>\r\n                    )}\r\n                </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <div class=\"type-message-bar\">\r\n            <div class=\"type-message-bar-left\">\r\n              <img src=\"images/icons.svg\" alt=\"icon\"/>\r\n              <img src=\"images/attach-icon.svg\" alt=\"attach\" />\r\n            </div>\r\n            <div class=\"type-message-bar-center\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                id=\"comment\"\r\n                placeholder=\"Send a message\"\r\n                value={this.state.message}\r\n                onChange={this.handleMessage}\r\n              />\r\n            </div>\r\n            <div class=\"type-message-bar-right\">\r\n              <img src=\"images/whatsapp-send-1.png\" alt=\"Send\" onClick={this.handleSubmit}/>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  {this.props.messages_in.map(post => (\r\n            <li key={post.mobile}>Sending {post.message} To: {post.mobile}</li>\r\n          ))}\r\n          \r\n          \r\n          <div class=\"sender\">\r\n              <span class=\"sender-message-tail\"><img src=\"images/message-tail-sender.svg\" alt=\"attach\"/></span>\r\n              <span class=\"sender-message\">I'm good, but I'm sooo bored ðŸ¥±ðŸ¥±ðŸ¥±</span>\r\n              <span class=\"message-time\">21:35</span>\r\n              <span class=\"message-status\"><img src=\"./images/double-check-seen.svg\" alt=\"attach\"/></span>\r\n            </div>\r\n            <div class=\"receiver\">\r\n              <span class=\"receiver-message-tail\">\r\n                <img src=\"images/message-tail-receiver.svg\" alt=\"attach\"/>\r\n              </span>\r\n              <span class=\"receiver-message\">Check this out...</span>\r\n              <span class=\"message-time\">21:36</span>\r\n            </div>\r\n            <div class=\"receiver image-message\">\r\n              <span class=\"receiver-message\"><img src=\"./images/meme-coding.png\" alt=\"attach\"/></span>\r\n              <span class=\"message-time\">21:36</span>\r\n            </div>\r\n            <div class=\"receiver receiver-audio-message\">\r\n              <div class=\"audio-message\">\r\n                <div class=\"audio-message-left\">\r\n                  <img src=\"images/play-audio-icon.svg\" alt=\"attach\"/>\r\n                </div>\r\n                <div class=\"audio-message-center\">\r\n                  <div class=\"audio-message-center-top\">\r\n                    <span class=\"audio-message-bar\"></span>\r\n                    <input type=\"range\" min=\"0\" max=\"100\" value=\"75\" />\r\n                  </div>\r\n                  <div class=\"audio-message-center-bottom\">\r\n                    <div class=\"audio-message-bottom\">\r\n                      <span class=\"audio-message-length\">1:15</span>\r\n                      <span class=\"message-time\">21:36</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"audio-message-right\">\r\n                  <img class=\"audio-message-contact-image\" src=\"images/timmy-m-harley.jpg\" alt=\"attach\"/>\r\n                  <img class=\"audio-message-microphone\" src=\"./images/microphone-seen.svg\" alt=\"attach\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"sender\">\r\n              <span class=\"sender-message-tail\"><img src=\"images/message-tail-sender.svg\" alt=\"attach\" /></span>\r\n              <span class=\"sender-message\">hahahahaaha</span>\r\n              <span class=\"message-time\">21:39</span>\r\n              <span class=\"message-status\"><img src=\"./images/double-check-seen.svg\" alt=\"attach\" /></span>\r\n            </div>\r\n          \r\n          \r\n          \r\n          \r\n          */","import React, { useEffect } from 'react';\r\nimport { ZOHO } from '../../vendor/ZSDK';\r\nimport Menuheader from '../Menuheader/Menuheader';\r\nimport LoadToMsgs from '../Loaders/LoadToMsgs/LoadToMsgs';\r\nimport LoadFromMsgs from '../Loaders/LoadFromMsgs/LoadFromMsgs';\r\nimport WriteToZohoFromMsg from '../Zohos/WriteToZohoFromMsg/WriteToZohoFromMsg';\r\nimport DeleteToZohoMsg from '../Zohos/DeleteToZohoMsg/DeleteToZohoMsg';\r\nimport Board from '../Board/Board';\r\nimport { filter } from 'lodash';\r\nimport './Zoho.css';\r\n\r\nfunction App() {\r\n\r\n  const [userAll, setUsr] = React.useState('');\r\n  const [messagesToPrev, getMessagesTo] = React.useState('');\r\n  const [messagesFromPrev, getMessagesFrom] = React.useState('');\r\n  const [allMessages, getAllMessages] = React.useState('');\r\n  const [userId, getUserId] = React.useState('');\r\n  const [entity, getEntity] = React.useState('');\r\n  const [mobile, getMobile] = React.useState('');\r\n\r\n\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  const [error, setError] = React.useState(null);\r\n  \r\n  useEffect(() => {\r\n    \r\n    async function init() {\r\n      try{\r\n\r\n        await ZOHO.embeddedApp.on(\"PageLoad\",function(data) {\r\n          //Custom Bussiness logic goes here\r\n          let entity = data.Entity;\r\n          let recordID = data.EntityId;\r\n          getEntity(entity);\r\n          getUserId(recordID.toString())\r\n          // Set data we want from CRM into props\r\n          ZOHO.CRM.API.getRecord({Entity:entity,RecordID:recordID})\r\n            .then((data) => { \r\n              //window.myvar = data.data[0]['Mobile']\r\n              getMobile(data.data[0]['Mobile'])\r\n              setUsr(data.data[0]);\r\n              \r\n            })\r\n            .then(() => {\r\n              //select pre messages\r\n              ZOHO.CRM.API.searchRecord({Entity: 'zeus4waba__Whatsapps', sort_order:\"asc\", Type:\"criteria\",Query:`(Name:equals:${recordID})`})\r\n                .then((dataMessage => {\r\n                  getAllMessages(dataMessage.data)\r\n                  //Separar los mensajes To y From, para agregarlos al store correctamente\r\n                  let messagesTo = filter(dataMessage.data, {'zeus4waba__Whatsapp_To': `${recordID}`})\r\n                  let messagesFrom = filter(dataMessage.data, {'zeus4waba__Whatsapp_From': `${recordID}`})\r\n                  \r\n                  getMessagesTo(messagesTo)\r\n                  getMessagesFrom(messagesFrom)\r\n                  setIsLoaded(true);\r\n                }))\r\n            })\r\n            \r\n            .catch((e) => console.log(e))\r\n    \r\n          })\r\n          \r\n          return await ZOHO.embeddedApp.init();\r\n\r\n      }catch(e){\r\n        console.log(e)\r\n      }\r\n\r\n    }\r\n    init();\r\n\r\n}, [])\r\n\r\nconst ContentLoader = () =>{\r\n  // handle rendering conditionally based on AJAX response\r\n  if (error) {\r\n      // API Data Error State: render the error state\r\n    return (\r\n        <div>Error</div>\r\n    )\r\n\r\n  } else if (!isLoaded) {\r\n    // API Data Not Loaded: render the loading progress spinner\r\n    return (\r\n        <div className='contenedor'>\r\n        <div className='contenido'> </div>\r\n    </div>\r\n    )\r\n  } else {\r\n    // API Data Loaded Succesfully: \r\n    // render the completed interface with data loaded, triggered by the state update of isLoaded and !error (no error)\r\n    return (\r\n        <div>\r\n          <Board mobile={mobile} entity={entity} />\r\n          <Menuheader usrAll={userAll} />\r\n          <LoadToMsgs msgTo={messagesToPrev}/>\r\n          <LoadFromMsgs msgFrom={messagesFromPrev} />\r\n          <WriteToZohoFromMsg user={userId}/>\r\n          <DeleteToZohoMsg />\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\n\r\nreturn (\r\n  <div>\r\n    {ContentLoader()} \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Login from './components/Login';\r\nimport ZohoApp from './components/Zoho/Zoho';\r\n\r\nconst App = ()=> {\r\n     \r\n  return (\r\n    <div className=\"App\">\r\n      <ZohoApp />\r\n      <Login/>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { OWN_MESSAGE_IN, \r\n        ERROR_IN, \r\n        FROM_PREV_MSG, \r\n        TO_PREV_MSG, \r\n        FROM_LIVE_MSG,\r\n        DELETE_FROM_PREV_MSG,\r\n        DELETE_TO_PREV_MSG,\r\n        DELETE_FROM_LIVE_MSG\r\n      } from \"../constants/index\";\r\n\r\nconst initialState = {\r\n  articles: [],\r\n  messages_in: [{mobile: '', message: ''}],\r\n  errors_in: [],\r\n  to_prev_messages: [{message: ''}],\r\n  from_prev_messages: [{message: ''}],\r\n  from_live_messages: [],\r\n  messages_id: []\r\n};\r\n\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch(action.type)  {\r\n    case OWN_MESSAGE_IN: {\r\n      return Object.assign({}, state, {\r\n        messages_in: state.messages_in.concat(action.payload)\r\n      });\r\n    }\r\n\r\n    case ERROR_IN: {\r\n      return Object.assign({}, state, {\r\n        errors_in: state.errors_in.concat(action.payload)\r\n      });\r\n    }\r\n\r\n    case TO_PREV_MSG: {\r\n      return Object.assign({}, state, {\r\n        to_prev_messages: state.to_prev_messages.concat(action.payload)\r\n      });\r\n    }\r\n\r\n    case FROM_PREV_MSG: {\r\n      return Object.assign({}, state, {\r\n        from_prev_messages: state.from_prev_messages.concat(action.payload)\r\n      });\r\n    }\r\n\r\n    case FROM_LIVE_MSG: {\r\n      return Object.assign({}, state, {\r\n        from_live_messages: state.from_live_messages.concat(action.payload)\r\n      });\r\n    }\r\n\r\n    case DELETE_FROM_PREV_MSG: {\r\n      const byId = action.payload\r\n      return {\r\n              ...state,\r\n              from_prev_messages: state.from_prev_messages.filter(msg => msg.id !== byId),\r\n              messages_id: state.messages_id.concat(byId)\r\n          }\r\n      }\r\n\r\n      case DELETE_TO_PREV_MSG: {\r\n        const byId = action.payload\r\n        return {\r\n                ...state,\r\n                to_prev_messages: state.to_prev_messages.filter(msg => msg.id !== byId),\r\n                messages_id: state.messages_id.concat(byId)\r\n            }\r\n        }\r\n\r\n        case DELETE_FROM_LIVE_MSG: {\r\n          const byId = action.payload\r\n          return {\r\n                  ...state,\r\n                  from_live_messages: state.from_live_messages.filter(msg => msg.id !== byId),\r\n                  messages_id: state.messages_id.concat(byId)\r\n              }\r\n          }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport default rootReducer;\r\n","\r\nconst initialState = {\r\n  errors: [],\r\n};\r\n\r\n\r\nfunction errorReducer(state = initialState, action) {\r\n  switch(action.type)  {\r\n    case 'ERROR_IN': {\r\n      return Object.assign({}, state, {\r\n        errors: state.errors.concat(action.payload)\r\n      });\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport default errorReducer;\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nimport errorReducer from '../reducers/errors';\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    storeEnhancers(applyMiddleware(thunk)),\r\n    //applyMiddleware(forbiddenDataUrl)\r\n  );\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./js/store/index\";\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}