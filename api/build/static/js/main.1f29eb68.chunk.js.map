{"version":3,"sources":["js/constants/index.js","js/actions/errors.js","components/Login/Login.js","components/Login/index.js","components/DealForm/DealForm.js","components/Menuheader/Menuheader.js","js/actions/index.js","components/Zohos/WriteToZohoFromMsg/WriteToZohoFromMsg.js","components/Zohos/DeleteToZohoMsg/DeleteToZohoMsg.js","components/Loaders/LoadAllMsgs/LoadAllMsgs.js","components/Writers/WriteAllMsgs/WriteAllMsgs.js","components/Error/Error.js","components/WTemplates/WTemplate/WTemplate.js","components/WTemplates/WMediaTemplate/WMediaTemplate.js","components/WTemplates/WriteWTemplates/WriteWTemplates.js","components/WTemplates/WTemplateBoard/WTemplateBoard.js","components/ShowReplyMsg/ShowReplyMsg.js","components/Board/Board.js","components/Zoho/Zoho.js","App.js","reportWebVitals.js","js/reducers/index.js","js/reducers/errors.js","js/store/index.js","index.js","components/Writers/WriteAllMsgs/WriteAllMsgs.module.css","components/WTemplates/WriteWTemplates/WriteWTemplates.module.css","components/DealForm/DealForm.module.css","components/ShowReplyMsg/ShowReplyMsg.module.css","vendor/ZSDK.js","components/WTemplates/WTemplateBoard/WTemplateBoard.module.css"],"names":["OWN_MESSAGE_OUT","ERROR_IN","ALL_MSG","DELETE_ALL_MSG","errorsIn","payload","dispatch","type","Login","props","useDispatch","_useState","useState","_useState2","Object","slicedToArray","myKey","axios","post","password","then","res","localStorage","setItem","data","token","defaults","headers","common","catch","err","removeItem","response","status","statusText","DealForm","react_default","a","createElement","visible","className","concat","styles","class","name","value","Account_Name","id","for","disabled","defaultProps","Menuheader","setVisible","components_DealForm_DealForm","usrAll","src","alt","href","Full_Name","Email","Title","Description","Lead_Source","Created_Time","Last_Activity_Time","isEmpty","Mobile","Phone","State","City","Street","onClick","addAllMessages","WriteToZohoFromMsg","messages","useSelector","store","messages_out","last_in_message","last","context","message_id","message","Name","user","zeus4waba__Whatsapp_From","zeus4waba__w","zeus4waba__Whatsapp_Status","zeus4waba__Whatsapp_MessageID","messageID","zeus4waba__ReplyTo","replyTo","ZOHO","CRM","API","insertRecord","Entity","APIData","dataMessage","details","getRecord","RecordID","e","console","log","DeleteToZohoMsg","messages_id","last_id_message","deleteRecord","LoadAllMsgs","orderBy","WriteAllMsgs","all_messages","all_msgs","map","msg","zeus4waba__Whatsapp_To","receiverMessageReply","idMsg","message_reply","filter","el","substr","selectMessage","alignRight","handlerReply","ErrorComponent","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","errors_in","React","Component","connected","connect","state","WTemplate","title","language","category","message_text","setData","handleInputChange","event","objectSpread","defineProperty","target","placeholder","onChange","selected","object","template_name","template_text","waba_id","wabaId","getItem","options","method","Accept","Content-Type","Authorization","body","JSON","stringify","fetch","json","isObject","error","errors","WMediaTemplate","_this","call","WriteWTemplates","setParams","temp","dataset","template","handler","disComponent","component","comp","text","data-testid","styledTable","templates","data-template","data-language","data-message","WTemplateBoard","rr","setRr","from","WTemplates_WriteWTemplates_WriteWTemplates","handlerTemp","ShowReplyMsg","messageReply","handlerVisibility","BoardComponent","messages_in","_React$useState","_React$useState2","setMessage","_React$useState3","_React$useState4","setMessageReply","_React$useState5","_React$useState6","_React$useState7","_React$useState8","showTextTemplateForm","setTextTplForm","_React$useState9","_React$useState10","showMediaTemplateForm","setMediaTplForm","_React$useState11","_React$useState12","showAllTemplates","setAllTemplates","_React$useState13","_React$useState14","setContext","_React$useState15","_React$useState16","showReplyMsgView","setMsgReplyView","_React$useState17","_React$useState18","setTemplateBoard","messageRouter","indexOf","input_name","split","template_language","template_message","to","mobile","whatsappId","parameters","components","k","v","push","checkForParameters","cadena","parameter","strArr","i","length","includes","join","WTemplates_WTemplateBoard_WTemplateBoard","tmp","messageText","extract_parameters","WTemplates_WTemplate_WTemplate","WTemplates_WMediaTemplate_WMediaTemplate","components_Error_Error","Writers_WriteAllMsgs_WriteAllMsgs","components_ShowReplyMsg_ShowReplyMsg","payloadSend","preventDefault","App","userAll","setUsr","allMessages","getAllMessages","userId","getUserId","entity","getEntity","getMobile","mobileFromId","getWhatsAppID","getWabaID","isLoaded","setIsLoaded","useEffect","_init","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","embeddedApp","on","recordID","EntityId","toString","searchRecord","sort_order","Type","Query","getOrgVariable","Success","Content","init","abrupt","sent","stop","Board_Board","components_Menuheader_Menuheader","Loaders_LoadAllMsgs_LoadAllMsgs","WriteToZohoFromMsg_WriteToZohoFromMsg","Zohos_DeleteToZohoMsg_DeleteToZohoMsg","Zoho_Zoho","components_Login","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","articles","rootReducer","undefined","action","assign","byId","errorReducer","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","createRoot","document","getElementById","render","es","src_App_0","module","exports","active-row","d","__webpack_exports__","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","ZSDKUtil","GlobalLogger","QueryParams","GetQueryParams","ZLogger","mode","URL","qParams","location","forEach","ele","idx","miniSplit","hasOwnProperty","serviceOrigin","decodeURIComponent","prototype","Info","isDevMode","isLogEnabled","info","Error","getLogger","Sleep","milliSeconds","startTime","Date","getTime","ZSDKMessageManager","SDKContext","AuthParentWindow","AuthParentOrigin","Logger","promiseIDCtr","PromiseQueue","RegExp","HandleSetContext","MessageEvent","origin","parent","SetContext","ExecuteLoadHandler","HandleUpdateContext","HandleEventResponse","HandlePromiseCallback","promiseid","HandleEventFailure","promiseID","isSuccess","resolve","reject","getNextPromiseID","AddToPromiseQueue","Promise","time","PostMessage","appOrigin","encodeURIComponent","getCurrentURLPath","postMessage","protocol","host","pathname","Init","ctx","config","parse","messageType","eventName","MEvent","incomingSource","source","incomingOrigin","isAppRegistered","isAuthorizedMessage","eventHandler","SET_CONTEXT","UPDATE_CONTEXT","EVENT_RESPONSE","EVENT_RESPONSE_FAILURE","ZSDKEventManager","NotifyEventListeners","AppContext","HandleCustomEvent","HandleEvent","MessageInterceptor","stack","RegisterApp","registerSDKClient","DERegisterApp","uniqueID","getUniqueID","SendRequest","isPromiseEvent","PromiseID","SendEvent","TriggerEvent","EventListeners","AttachEventListener","fn","Array","isArray","eventData","internalEventCheck","match","bindedListeners","NotifyInternalEventHandler","UpdateContext","ExecuteContextUpdateHandler","ZSDK","that","AppCode","ContextUpdateHandler","connectors","paramsObj","localeResource","version","_isAppRegistered","isOnLoadTriggered","isContextReady","HelperContext","getContext","GetRequest","isPromise","RegisterClient","contextData","modelData","model","locale","keys","constructor","LoadLocaleResource","ZSDKModelManager","AddModel","Model","GetModelStore","eventHandlerFn","GetConnectors","_loadJSON","InitI18n","filepath","callback","xobj","XMLHttpRequest","open","onreadystatechange","readyState","responseText","send","Translate","valStr","_getKeyByString","translateOptions","eval","keysArr","_replaceString","str","find","replace","$r","o","s","all","querySelectorAll","getAttribute","hasAttribute","innerHTML","Bootstrap","MessageHandler","addEventListener","Event","Listen","Trigger","OnLoad","AppLoadHandler","OnUnLoad","AppUnLoadHandler","OnContextUpdate","AppCtxUpdateHandler","appSDK","initPromise","eventListenerMap","isInitTriggered","promiseResolve","newRequestPromise","sdkVersion","createNewFileObj","file","oldfile","File","createRecord","APIdata","RelatedEntity","FileData","newfileObj","RelatedID","getBluePrint","getAllActions","remoteCall","requestData","FILE","newfileobj","reqData","url","params","Parts","PARTS","partBoundary","PART_BOUNDARY","ContentType","CONTENT_TYPE","responseType","RESPONSE_TYPE","Message","queryString","array","constructQueryString","Header","Body","PARTS_BOUNDARY","nameSpace","manipulateUI","$","obj","promiseData","ID","page","per_page","getMeta","Id","HTTPRequest","ACTION","setConfig","enableAccountAccess","FUNCTIONS","execute","func_name","req_data","request","auth_type","customFunctionName","CONFIG","getOrgInfo","getCurrentUser","GetCurrentEnvironment","META","getFields","getModules","getAssignmentRules","getLayouts","LayoutId","getRelatedList","getCustomViews","addNotes","Note_Title","Note_Content","addNotesAttachment","RelatedRecordID","updateNotes","Files","FileName","trigger","upsertRecord","duplicate_check_fields","relatedListSysRef","RelatedList","updateBluePrint","BlueprintData","uploadFile","getFile","getAllRecords","updateRecord","delay","getApprovalRecords","newdata","getApprovalById","getApprovalsHistory","approveRecord","getAllUsers","getUser","getRelatedRecords","updateRelatedRecords","updateRelatedRecord","delinkRelatedRecord","deleteRelatedRecord","attachFile","getAllProfiles","getProfile","Category","updateProfile","UI","Resize","width","height","Dialer","maximize","telephony","minimize","notify","Record","record","Target","edit","create","populate","recordData","Popup","close","popup","closeReload","Widget","webTab","HTTP","get","put","patch","delete","CONNECTOR","invokeAPI","authorize","CONNECTION","invoke","conn_name","reqObj","param_type","connectionName"],"mappings":"mLACaA,EAAkB,kBAElBC,EAAW,WAEXC,EAAU,UACVC,EAAiB,iBCJvB,SAASC,EAASC,GAErB,OAAO,SAAAC,GACHA,EAAS,CAAEC,KAAMN,EAAUI,QAASA,KCC5C,ICLeG,EDKD,SAACC,GACb,IAAMH,EAAWI,cADMC,EAEGC,mBAAS,gBAFZC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEhBK,EAFgBH,EAAA,GAAAA,EAAA,GAIvBI,IAAMC,KAAK,qBAAsB,CAACC,SAAUH,IACzCI,KAAK,SAAAC,GAEJC,aAAaC,QAAQ,WAAYF,EAAIG,KAAKC,OAC1CR,IAAMS,SAASC,QAAQC,OAAvB,cAAkD,SAASP,EAAIG,KAAKC,QAErEI,MAAM,SAAAC,GACLR,aAAaS,WAAW,YACI,MAAxBD,EAAIE,SAASC,OAEf3B,EAASF,EADK,sCAIdE,EAASF,EAAS0B,EAAIE,SAASE,uDEnBjCC,EAAW,SAAC1B,GAGhB,OACE2B,EAAAC,EAAAC,cAAA,WACC7B,EAAM8B,QACLH,EAAAC,EAAAC,cAAA,OAAKE,UAAS,GAAAC,OAAKC,IAAOP,SAAZ,8CAAd,sBAEEC,EAAAC,EAAAC,cAAA,OAAKK,MAAM,YACTP,EAAAC,EAAAC,cAAA,SACE/B,KAAK,SACLoC,MAAM,eACNC,KAAK,UACLC,MAAOpC,EAAMe,KAAKsB,aAAaC,KAEjCX,EAAAC,EAAAC,cAAA,SACE/B,KAAK,SACLoC,MAAM,eACNC,KAAK,UACLC,MAAOpC,EAAMe,KAAKuB,KAGpBX,EAAAC,EAAAC,cAAA,OAAKK,MAAM,wBACTP,EAAAC,EAAAC,cAAA,SAAOU,IAAI,SAAX,aACEZ,EAAAC,EAAAC,cAAA,SACE/B,KAAK,OACLoC,MAAM,eACNC,KAAK,eAIXR,EAAAC,EAAAC,cAAA,OAAKK,MAAM,wBACTP,EAAAC,EAAAC,cAAA,SAAOU,IAAI,SAAX,eACEZ,EAAAC,EAAAC,cAAA,SACE/B,KAAK,OACLoC,MAAM,eACNC,KAAK,cACLC,MApCM,iBAqCNI,UAAQ,KAGdb,EAAAC,EAAAC,cAAA,OAAKK,MAAM,wBACTP,EAAAC,EAAAC,cAAA,SAAOU,IAAI,SAAX,gBACEZ,EAAAC,EAAAC,cAAA,SACE/B,KAAK,OACLoC,MAAM,eACNC,KAAK,kBAGXR,EAAAC,EAAAC,cAAA,OAAKK,MAAM,wBACTP,EAAAC,EAAAC,cAAA,SAAOU,IAAI,SAAX,eACEZ,EAAAC,EAAAC,cAAA,YACEK,MAAM,eACNC,KAAK,iBAIXR,EAAAC,EAAAC,cAAA,UAAQ/B,KAAK,SAASoC,MAAM,mBAA5B,cAIN,KAOJR,EAASe,aAAe,GAETf,QCrETgB,SAAa,SAAC1C,GAAU,IAAAE,EACEC,oBAAS,GADXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACrB4B,EADqB1B,EAAA,GACZuC,EADYvC,EAAA,GAO5B,OACEuB,EAAAC,EAAAC,cAAA,OAAKS,GAAG,eACNX,EAAAC,EAAAC,cAACe,EAAD,CAAUd,QAASA,EAASf,KAAMf,EAAM6C,SACxClB,EAAAC,EAAAC,cAAA,OAAKK,MAAM,yBACTP,EAAAC,EAAAC,cAAA,OAAKiB,IAAI,2BAA2BC,IAAI,gBACtCpB,EAAAC,EAAAC,cAAA,OAAKK,MAAM,iCACTP,EAAAC,EAAAC,cAAA,4BAINF,EAAAC,EAAAC,cAAA,OAAKS,GAAG,cACNX,EAAAC,EAAAC,cAAA,OAAKS,GAAG,aACNX,EAAAC,EAAAC,cAAA,OAAKS,GAAG,WACNX,EAAAC,EAAAC,cAAA,OAAKS,GAAG,SACNX,EAAAC,EAAAC,cAAA,OAAKS,GAAG,gBAAgBQ,IAAI,uBAAuBC,IAAI,WACrDpB,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,QAAOrB,EAAAC,EAAAC,cAAA,KAAGK,MAAM,oCAE5BP,EAAAC,EAAAC,cAAA,KAAGS,GAAG,QAAQtC,EAAM6C,OAAOI,UAAUtB,EAAAC,EAAAC,cAAA,WACnCF,EAAAC,EAAAC,cAAA,QAAMS,GAAG,SAAStC,EAAM6C,OAAOK,QAEjCvB,EAAAC,EAAAC,cAAA,KAAGS,GAAG,eAAetC,EAAM6C,OAAOM,MAAMxB,EAAAC,EAAAC,cAAA,WACtCF,EAAAC,EAAAC,cAAA,QAAMS,GAAG,WAAWtC,EAAM6C,OAAOO,cAEnCzB,EAAAC,EAAAC,cAAA,KAAGS,GAAG,eAAN,gBAAkCtC,EAAM6C,OAAOQ,aAE/C1B,EAAAC,EAAAC,cAAA,KAAGS,GAAG,eAAN,kBAAoCtC,EAAM6C,OAAOS,cACjD3B,EAAAC,EAAAC,cAAA,KAAGS,GAAG,eAAN,wBAA0CtC,EAAM6C,OAAOU,oBAEvD5B,EAAAC,EAAAC,cAAA,iBAAQF,EAAAC,EAAAC,cAAA,yBAAR,gCACAF,EAAAC,EAAAC,cAAA,iBAAQF,EAAAC,EAAAC,cAAA,0BAAR,iCACAF,EAAAC,EAAAC,cAAA,iBAAQF,EAAAC,EAAAC,cAAA,yBAAR,0BACAF,EAAAC,EAAAC,cAAA,iBAAQF,EAAAC,EAAAC,cAAA,0BAAR,yDAGFF,EAAAC,EAAAC,cAAA,OAAKS,GAAG,cACNX,EAAAC,EAAAC,cAAA,OAAKK,MAAM,QACTP,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAGK,MAAM,wCAAZ,4BACAP,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,KAAMQ,kBAAQxD,EAAM6C,OAAOR,cAAiD,wBAAjCrC,EAAM6C,OAAOR,aAAaF,OAE/ER,EAAAC,EAAAC,cAAA,OAAKK,MAAM,QACTP,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAGK,MAAM,wCAAZ,4BACAP,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,KAAIrB,EAAAC,EAAAC,cAAA,OAAKiB,IAAI,wBAAwBC,IAAI,WAAjD,IAA8D/C,EAAM6C,OAAOY,QAAW9B,EAAAC,EAAAC,cAAA,WACtFF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,KAAIrB,EAAAC,EAAAC,cAAA,OAAKiB,IAAI,uBAAuBC,IAAI,WAAY/C,EAAM6C,OAAOa,QAE3E/B,EAAAC,EAAAC,cAAA,OAAKK,MAAM,QACTP,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAGK,MAAM,wCAAZ,4BACAP,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,KAAIrB,EAAAC,EAAAC,cAAA,OAAKiB,IAAI,uBAAuBC,IAAI,WAAY/C,EAAM6C,OAAOc,OAAUhC,EAAAC,EAAAC,cAAA,WACnFF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,KAAIrB,EAAAC,EAAAC,cAAA,OAAKiB,IAAI,0BAA0BC,IAAI,WAAY/C,EAAM6C,OAAOe,KAA5E,KAAoF5D,EAAM6C,OAAOgB,SAEnGlC,EAAAC,EAAAC,cAAA,OAAKK,MAAM,OAAO4B,QArDP,WACnBnB,GAAW,KAqDDhB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAGK,MAAM,wCAAZ,gCAYdQ,EAAWD,aAAe,GAEXC,eC8HR,SAASqB,EAAenE,GAC3B,OAAO,SAAAC,GACHA,EAAS,CAAEC,KAAML,EAASG,QAASA,KCjK5BoE,MApCf,SAA4BhE,GACxB,IAAMiE,EAAWC,YAAY,SAAAC,GAAK,OAAIA,EAAMC,eACtCvE,EAAWI,cACXoE,EAAkBC,eAAKL,GAM7B,GAHiBT,kBAAQa,EAAgBE,UAAWF,EAAgBE,QAAQC,WAG5C,KAA5BH,EAAgBI,SAA8C,OAA5BJ,EAAgBI,QAAkB,CACtE,IAAM1D,EAAO,CAAC2D,KAAQ1E,EAAM2E,KAAMC,yBAA4B5E,EAAM2E,KAC1DE,aAAA,GAAA7C,OAAmBqC,EAAgBI,SACnCK,2BAAA,GAAA9C,OAAiCqC,EAAgB7C,QACjDuD,8BAAA,GAAA/C,OAAoCqC,EAAgBW,WACpDC,mBAAA,GAAAjD,OAAyBqC,EAAgBa,UAInDC,IAAKC,IAAIC,IAAIC,aAAa,CAACC,OAAQ,uBAAwBC,QAASzE,IACjEJ,KAAM,SAAA8E,GACL,IAAMnD,EAAKmD,EAAY1E,KAAK,GAAG2E,QAAQpD,GAEvC6C,IAAKC,IAAIC,IAAIM,UAAU,CAACJ,OAAQ,uBAAwBK,SAAUtD,IAC/D3B,KAAM,SAAAY,GACL1B,EAASkE,EAAexC,EAASR,WAGtCK,MAAM,SAACyE,GAAD,OAAOC,QAAQC,IAAIF,KAGhC,OACElE,EAAAC,EAAAC,cAAA,aCXWmE,EApBS,WACtB,IAAM/B,EAAWC,YAAY,SAAAC,GAAK,OAAIA,EAAM8B,cACtCpG,EAAWI,cAEjB,IAAKuD,kBAASS,GAAW,CACvB,IAAMiC,EAAkB5B,eAAKL,GAEzBiC,GAAuC,KAApBA,GAA8C,OAApBA,GAC7Cf,IAAKC,IAAIC,IAAIc,aAAa,CAACZ,OAAQ,uBAAwBK,SAAQ,GAAA5D,OAAKkE,KACrEvF,KAAM,SAAAY,GACL,IFqMe3B,EEpMA,YADA2B,EAASR,KAAK,GAAGS,QAE9B3B,GFmMaD,EEnMO2B,EAASR,KAAK,GAAG0D,QFoMxC,SAAA5E,GACHA,EAAS,CAACC,KAAMN,EAAUI,mBG5MnBwG,EAPK,SAACpG,GACFC,aAGjBJ,CAASkE,EADEsC,kBAAQrG,EAAMiE,SAAU,CAAC,gBAAiB,CAAC,oCCkDzCqC,EAnDM,SAACtG,GACpB,IAAMuG,EAAerC,YAAY,SAAAC,GAAK,OAAIA,EAAMqC,WAC1C3G,EAAWI,cAoBjB,OACE0B,EAAAC,EAAAC,cAAA,WACG0E,EAAaE,IAAI,SAAAC,GAAG,OAEG,OAArBA,EAAI7B,cAA8C,KAArB6B,EAAI7B,aAEhClD,EAAAC,EAAAC,cAAA,OAAKK,MAAsC,OAA/BwE,EAAIC,uBAAkC,WAAa,UACjC,OAA3BD,EAAIzB,mBAA8BtD,EAAAC,EAAAC,cAAA,OAAKE,UAAWE,IAAO2E,sBArB9C,SAACC,GACrB,GAAc,OAAVA,EAAgB,CAClB,IAAMC,EAAgBP,EAAaQ,OAAO,SAAUC,GAGlD,OAAOA,EAAGjC,gCAAkC8B,IAE3C,GACH,IAAKrD,kBAAQsD,GACX,SAAA9E,OAAW8E,EAAcxD,aAAa2D,OAAO,EAAG,IAAhD,OAAAjF,OAAyD8E,EAAcjC,aAAaoC,OAAO,EAAE,KAE/F,OAAO,KAUgFC,CAAcR,EAAIzB,oBAAhE,OAAgG,GADrI,cACoJtD,EAAAC,EAAAC,cAAA,QAAMK,MAAM,oBAAoBwE,EAAI7B,aAApC,KAClJlD,EAAAC,EAAAC,cAAA,QAAME,UAAWE,IAAOkF,WAAYrD,QAAS,kBAAMjE,GJ2K7BD,EI3KwD8G,EAAIpE,GJ4KnF,SAAAzC,GACHA,EAAS,CAAEC,KAAMJ,EAAgBE,eAFlC,IAA2BA,II3KkE+B,EAAAC,EAAAC,cAAA,OAAKiB,IAAI,gCAAgCC,IAAI,YACrIpB,EAAAC,EAAAC,cAAA,QAAME,UAAWE,IAAOkF,WAAYrD,QAAS,kBA3BpC+C,EA2BoDH,EAAI3B,8BA3BjDN,EA2BgFiC,EAAI7B,kBA1B5G7E,EAAMoH,aAAaP,EAAOpC,GADV,IAACoC,EAAOpC,IA2BoG9C,EAAAC,EAAAC,cAAA,OAAKiB,IAAI,qBAAqBC,IAAI,YAC7G,YAAnC2D,EAAI5B,2BAEJnD,EAAAC,EAAAC,cAAA,QAAMK,MAAM,kBAAiBP,EAAAC,EAAAC,cAAA,OAAKiB,IAAI,iCAAiCC,IAAI,YAI3EpB,EAAAC,EAAAC,cAAA,QAAMK,MAAM,eAAcP,EAAAC,EAAAC,cAAA,OAAKiB,IAAI,qBAAqBC,IAAI,YAE9DpB,EAAAC,EAAAC,cAAA,QAAMK,MAAM,4BAA4BwE,EAAIpD,eAKlD,+CC3CG+D,eAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAhH,OAAAkH,EAAA,EAAAlH,CAAAmH,KAAAH,GAAAhH,OAAAoH,EAAA,EAAApH,CAAAmH,KAAAnH,OAAAqH,EAAA,EAAArH,CAAAgH,GAAAM,MAAAH,KAAAI,YAAA,OAAAvH,OAAAwH,EAAA,EAAAxH,CAAAgH,EAAAC,GAAAjH,OAAAyH,EAAA,EAAAzH,CAAAgH,EAAA,EAAAU,IAAA,SAAA3F,MAAA,WAEI,OACET,EAAAC,EAAAC,cAAA,WACG2F,KAAKxH,MAAMgI,UAAUvB,IAAI,SAAAhG,GAAI,OAC5BkB,EAAAC,EAAAC,cAAA,OAAKK,MAAM,qEAGTP,EAAAC,EAAAC,cAAA,WAAOpB,WARnB4G,EAAA,CAAoCY,IAAMC,YAmB3BC,EADGC,YAtBM,SAAAC,GACtB,MAAO,CAAEL,UAAWK,EAAML,YAqBVI,CAAyBf,WCiE5BiB,SAvFG,SAACtI,GAEjB,IAAMH,EAAWI,cAFUC,EAGHC,mBAAS,CACP2B,QAAS9B,EAAM8B,QACfyG,MAAO,GACPC,SAAU,QACVC,SAAU,YACVC,aAAc,KARbtI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGpBa,EAHoBX,EAAA,GAGduI,EAHcvI,EAAA,GAWrBwI,EAAoB,SAACC,GACzBF,EAAQtI,OAAAyI,EAAA,EAAAzI,CAAA,GACHU,EADEV,OAAA0I,EAAA,EAAA1I,CAAA,GAEJwI,EAAMG,OAAO7G,KAAQ0G,EAAMG,OAAO5G,UAiBvC,OACET,EAAAC,EAAAC,cAAA,WACG7B,EAAM8B,QACLH,EAAAC,EAAAC,cAAA,OAAKK,MAAM,0DACPP,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKK,MAAM,YACTP,EAAAC,EAAAC,cAAA,OAAKK,MAAM,uBACTP,EAAAC,EAAAC,cAAA,SAAOU,IAAI,SAAX,SACAZ,EAAAC,EAAAC,cAAA,SACI/B,KAAK,OACLoC,MAAM,eACNC,KAAK,QACL8G,YAAY,iBACZC,SAAUN,KAEhBjH,EAAAC,EAAAC,cAAA,OAAKK,MAAM,uBACTP,EAAAC,EAAAC,cAAA,SAAOU,IAAI,YAAX,YACAZ,EAAAC,EAAAC,cAAA,UAAQM,KAAK,WAAWD,MAAM,eAAegH,SAAUN,GACrDjH,EAAAC,EAAAC,cAAA,UAAQsH,UAAQ,GAAhB,aACAxH,EAAAC,EAAAC,cAAA,UAAQO,MAAM,SAAd,MACAT,EAAAC,EAAAC,cAAA,UAAQO,MAAM,SAAd,QAGJT,EAAAC,EAAAC,cAAA,OAAKK,MAAM,uBACTP,EAAAC,EAAAC,cAAA,SAAOU,IAAI,YAAX,YACAZ,EAAAC,EAAAC,cAAA,UAAQM,KAAK,WAAWD,MAAM,eAAegH,SAAUN,GACrDjH,EAAAC,EAAAC,cAAA,UAAQsH,UAAQ,GAAhB,aACAxH,EAAAC,EAAAC,cAAA,UAAQO,MAAM,iBAAd,iBACAT,EAAAC,EAAAC,cAAA,UAAQO,MAAM,aAAd,aACAT,EAAAC,EAAAC,cAAA,UAAQO,MAAM,OAAd,SAIJT,EAAAC,EAAAC,cAAA,OAAKK,MAAM,uBACTP,EAAAC,EAAAC,cAAA,SAAOU,IAAI,gBAAX,iBACAZ,EAAAC,EAAAC,cAAA,YACMK,MAAM,eACN+G,YAAY,sBACZ9G,KAAK,eACL+G,SAAUN,MAKpBjH,EAAAC,EAAAC,cAAA,UAAQ/B,KAAK,SAASoC,MAAM,kBAAkB4B,QAzDnC,WACnB,INiG2BlE,EMjGrBwJ,EAAS,CACbC,cAAetI,EAAKwH,MACpBC,SAAUzH,EAAKyH,SACfC,SAAU1H,EAAK0H,SACfa,cAAevI,EAAK2H,aACpBa,QAASvJ,EAAMwJ,QAGjB3J,GNyF2BD,EMzFHS,OAAAyI,EAAA,EAAAzI,CAAA,GAAK+I,GN0FtB,SAAAvJ,GACH,IAAMmB,EAAQH,aAAa4I,QAAQ,YAC7BC,EAAU,CACZC,OAAM,OACNzI,QAAS,CACL0I,OAAU,mBACVC,eAAgB,mBAChBC,cAAA,WAAA9H,OAA4BhB,IAEhC+I,KAAMC,KAAKC,UAAUrK,IAGzB,OAAOsK,MAAM,kBAAmBR,GAC3B/I,KAAK,SAAAC,GAAG,OAAIA,EAAIuJ,SAChBxJ,KAAK,SAAAwJ,GACF,IAAI5I,EAAQlB,OAAAyI,EAAA,EAAAzI,CAAA,GAAO8J,GACnB,GAAIC,mBAAS7I,EAASR,MAAO,CAEzB,IAAMyD,EAAajD,EAASR,KAAKuB,GACjCzC,EAAS,CAAEC,KAAMN,EAAUI,QAAO,YAAAoC,OAAcwC,EAAd,iCAC3B4F,mBAAS7I,EAAS8I,SAAW7G,kBAAQjC,EAAS8I,OACrDxK,EAAS,CAACC,KAAMN,EAAUI,QAAS2B,EAAS8I,MAAM5F,UAC3C2F,mBAAS7I,EAAS+I,SACzBzK,EAAS,CAACC,KAAMN,EAAUI,QAAS2B,EAAS+I,OAAO7F,YAM1DrD,MAAM,SAAAC,GACHxB,EAAS,CAACC,KAAMN,EAAUI,QAAS,kBACnCkG,QAAQC,IAAI,eAAgB1E,UMzEhC,kBAKNM,EAAAC,EAAAC,cAAA,eChFA0I,qBACJ,SAAAA,EAAYvK,GAAO,IAAAwK,EAAA,OAAAnK,OAAAkH,EAAA,EAAAlH,CAAAmH,KAAA+C,IACjBC,EAAAnK,OAAAoH,EAAA,EAAApH,CAAAmH,KAAAnH,OAAAqH,EAAA,EAAArH,CAAAkK,GAAAE,KAAAjD,KAAMxH,KACDqI,MAAQ,CACXvG,QAAS0I,EAAKxK,MAAM8B,SAHL0I,wEAejB,OACE7I,EAAAC,EAAAC,cAAA,WACC2F,KAAKxH,MAAM8B,QACVH,EAAAC,EAAAC,cAAA,OAAKK,MAAM,0DACPP,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,+BAKNF,EAAAC,EAAAC,cAAA,oBA1BuBoG,IAAMC,YAyCnCqC,EAAe9H,aAAe,GAEf8H,iCCGAG,EA9CS,SAAC1K,GAEvB,IAAM2K,EAAY,SAAC9E,GACjB,IAAM+E,EAAO/E,EAAEmD,OAAO6B,QAAQC,SACxBtC,EAAW3C,EAAEmD,OAAO6B,QAAQrC,SAC5B/D,EAAUoB,EAAEmD,OAAO6B,QAAQpG,QACjCzE,EAAM+K,QAAQH,EAAMpC,EAAU/D,IAG1BuG,EAAe,SAACC,GACpB,OACEA,EAAUxE,IAAI,SAAAyE,GAAI,OAChBA,EAAKC,QAKX,OACExJ,EAAAC,EAAAC,cAAA,OAAKuJ,cAAY,kBAAkBrJ,UAAWE,IAAOyI,iBACnD/I,EAAAC,EAAAC,cAAA,SAAOE,UAAWE,IAAOoJ,aACvB1J,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kBAAaF,EAAAC,EAAAC,cAAA,oBAAeF,EAAAC,EAAAC,cAAA,sBAAiBF,EAAAC,EAAAC,cAAA,yBAEjDF,EAAAC,EAAAC,cAAA,aACI2B,kBAAQxD,EAAMsL,WAYd3J,EAAAC,EAAAC,cAAA,YAVE7B,EAAMsL,UAAU7E,IAAI,SAAAhG,GAAI,OACtBkB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIK,MAAM,cAAc4B,QAAS6G,EAAWY,gBAAe9K,EAAI,KAAU+K,gBAAe/K,EAAI,SAAcgL,eAAcT,EAAavK,EAAI,aAAkBA,EAAI,MAC/JkB,EAAAC,EAAAC,cAAA,cAAMpB,EAAI,QACVkB,EAAAC,EAAAC,cAAA,cAAMpB,EAAI,SAAV,KACAkB,EAAAC,EAAAC,cAAA,UAAKmJ,EAAavK,EAAI,oBCyC3BiL,EAhEQ,SAAC1L,GACtB,IAAMH,EAAWI,cADeC,EAEbC,mBAAS,IAFIC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE1ByL,EAF0BvL,EAAA,GAEtBwL,EAFsBxL,EAAA,GA+ChC,OACEuB,EAAAC,EAAAC,cAAA,WACG7B,EAAM8B,QACLH,EAAAC,EAAAC,cAAA,OAAKK,MAAM,0DACPP,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAQiC,QAhDG,SAAClE,GAEpB,IAAMoB,EAAQH,aAAa4I,QAAQ,YACzBC,EAAU,CACZC,OAAM,OACNzI,QAAS,CACL0I,OAAU,mBACVC,eAAgB,mBAChBC,cAAA,WAAA9H,OAA4BhB,IAEhC+I,KAAMC,KAAKC,UAAU,CAAE4B,KAAM7L,EAAMwJ,UAIvC,OAAOU,MAAM,gBAAiBR,GACzB/I,KAAK,SAAAC,GAAG,OAAIA,EAAIuJ,SAChBxJ,KAAK,SAAAwJ,GACF,IAAI5I,EAAQlB,OAAAyI,EAAA,EAAAzI,CAAA,GAAO8J,GACfC,mBAAS7I,EAASR,MAEpB6K,EAAMrK,EAASR,KAAKA,MACVyC,kBAAQjC,EAAS8I,OAIlBD,mBAAS7I,EAAS+I,SACzBzK,EAAS,CAACC,KAAMN,EAAUI,QAAS2B,EAAS+I,OAAO7F,UAJnD5E,EAAS,CAACC,KAAMN,EAAUI,QAAS2B,EAAS8I,MAAM5F,YAUzDrD,MAAM,SAAAC,GACHyE,QAAQC,IAAI1E,GACZxB,EAAS,CAACC,KAAMN,EAAUI,QAAS,6EAcvC,iBACA+B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACiK,EAAD,CAAiBf,QAXX,SAACD,EAAUtC,EAAU/D,GACnCzE,EAAM+L,YAAYjB,EAAUtC,EAAU/D,IAUK6G,UAAWK,MAIpDhK,EAAAC,EAAAC,cAAA,+BC9CSmK,EAtBM,SAAChM,GAMpB,OACE2B,EAAAC,EAAAC,cAAA,WACG7B,EAAM8B,QACLH,EAAAC,EAAAC,cAAA,OAAKE,UAAS,GAAAC,OAAKC,IAAOgK,aAAZ,yCACVtK,EAAAC,EAAAC,cAAA,OAAKiC,QARO,WACpB9D,EAAMkM,sBAOgClM,EAAMyE,QAAQwC,OAAO,EAAE,IAArD,SAKNtF,EAAAC,EAAAC,cAAA,cC+KSsK,EApLQ,SAACnM,GACAkE,YAAY,SAAAC,GAAK,OAAIA,EAAMiI,cAA/C,IACMvM,EAAWI,cAFaoM,EAIApE,IAAM9H,SAAS,IAJfmM,EAAAjM,OAAAC,EAAA,EAAAD,CAAAgM,EAAA,GAIvB5H,EAJuB6H,EAAA,GAIdC,EAJcD,EAAA,GAAAE,EAKUvE,IAAM9H,SAAS,IALzBsM,EAAApM,OAAAC,EAAA,EAAAD,CAAAmM,EAAA,GAKvBP,EALuBQ,EAAA,GAKTC,EALSD,EAAA,GAAAE,EAME1E,IAAM9H,SAAS,IANjByM,EAAAvM,OAAAC,EAAA,EAAAD,CAAAsM,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAOiB3E,IAAM9H,UAAS,IAPhC2M,EAAAzM,OAAAC,EAAA,EAAAD,CAAAwM,EAAA,GAOvBE,EAPuBD,EAAA,GAODE,EAPCF,EAAA,GAAAG,EAQmBhF,IAAM9H,UAAS,GARlC+M,EAAA7M,OAAAC,EAAA,EAAAD,CAAA4M,EAAA,GAQvBE,EARuBD,EAAA,GAQAE,EARAF,EAAA,GAAAG,EAScpF,IAAM9H,UAAS,GAT7BmN,EAAAjN,OAAAC,EAAA,EAAAD,CAAAgN,EAAA,GASvBE,EATuBD,EAAA,GASLE,EATKF,EAAA,GAAAG,EAUAxF,IAAM9H,SAAS,IAVfuN,EAAArN,OAAAC,EAAA,EAAAD,CAAAoN,EAAA,GAUvBlJ,EAVuBmJ,EAAA,GAUdC,EAVcD,EAAA,GAAAE,EAWc3F,IAAM9H,UAAS,GAX7B0N,EAAAxN,OAAAC,EAAA,EAAAD,CAAAuN,EAAA,GAWvBE,EAXuBD,EAAA,GAWLE,EAXKF,EAAA,GAAAG,EAYa/F,IAAM9H,SAAS,IAZ5B8N,EAAA5N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAYPE,GAZOD,EAAA,GAAAA,EAAA,IAqExBE,EAAgB,WACpB,GAAqC,IAAjC1J,EAAQ2J,QAAQ,aAAoB,CAEtC,IAAMC,EAAa5J,EAAQ6J,MAAM,KAC3BjF,EAAgBgF,EAAW,GAC3BE,EAAoBF,EAAW,GACjCG,EAAmB,CACrBC,GAAKzO,EAAM0O,OACXrF,cAAA,GAAArH,OAAoBqH,GACpBb,SAAA,GAAAxG,OAAcuM,GACd1C,KAAQ7L,EAAM2O,YAIVC,EAAaP,EAAW,GAe9B,OAdIO,IACFJ,EAAiBK,WAAa,CAAC,CAAE/O,KAAQ,SACzC0O,EAAiBK,WAAW,GAA5B,WAA+C,GACtBD,EAAWN,MAAM,KAEzB7H,IAAI,SAASqI,EAAGC,GAC/BP,EAAiBK,WAAW,GAA5B,WAA6CG,KAAK,CAAClP,KAAQ,OAAQqL,KAAA,GAAAnJ,OAAW8M,QAMlFhJ,QAAQC,IAAIyI,GACZ3O,GX5CqBD,EW4CC4O,EX3CnB,SAAA3O,GACH,IAAMmB,EAAQH,aAAa4I,QAAQ,YAC7BC,EAAU,CACZC,OAAM,OACNzI,QAAS,CACL0I,OAAU,mBACVC,eAAgB,mBAChBC,cAAA,WAAA9H,OAA4BhB,IAEhC+I,KAAMC,KAAKC,UAAUrK,IAGzB,OAAOsK,MAAM,gBAAiBR,GACzB/I,KAAK,SAAAC,GAAG,OAAIA,EAAIuJ,SAChBxJ,KAAK,SAAAwJ,GACF,IAAI5I,EAAQlB,OAAAyI,EAAA,EAAAzI,CAAA,GAAO8J,GACnB,GAAIC,mBAAS7I,EAASR,MAAO,CAEzB,IAAMyD,EAAajD,EAASR,KAAKkD,SAAS,GAAG3B,GAC7C1C,EAAQoF,UAAYR,EACpB5E,EAAQ6E,QAAR,qBAAAzC,OAAuCpC,EAAQyJ,eAC/CzJ,EAAQ4B,OAAS,UACjB5B,EAAQsF,QAAW1B,kBAAQ5D,EAAQ2E,SAAwC,GAA7B3E,EAAQ2E,QAAQC,WAC9D3E,EAAS,CAAEC,KAAMP,EAAiBK,QAASA,SAEtCwK,mBAAS7I,EAAS8I,SAAW7G,kBAAQjC,EAAS8I,OACnDxK,EAAS,CAACC,KAAMN,EAAUI,QAAS2B,EAAS8I,MAAM5F,UAC3C2F,mBAAS7I,EAAS+I,QACzBzK,EAAS,CAACC,KAAMN,EAAUI,QAAS2B,EAAS+I,OAAO7F,UAEpDqB,QAAQC,IAAI,WAAYxE,KAI9BH,MAAM,SAAAC,GACHxB,EAAS,CAACC,KAAMN,EAAUI,QAAS,kBACnCkG,QAAQC,IAAI,eAAgB1E,SWQ7B,EX7CR,IAAsBzB,EW+CvB,OAAO,GAoBHqP,EAAqB,SAACC,EAAQC,GAGlC,IAFA,IAAMC,EAASF,EAAOZ,MAAM,KACtB1N,EAAM,GACJyO,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IAC9BvJ,QAAQC,IAAIqJ,EAAOC,IACdD,EAAOC,GAAGE,SAAV,GAAAvN,OAAsBmN,KACrBvO,EAAIoO,KAAJ,SAGV,OAAOpO,EAAI4O,KAAK,MAqBlB,OACI7N,EAAAC,EAAAC,cAAA,OAAKS,GAAG,WAAWJ,MAAM,QACvBP,EAAAC,EAAAC,cAAA,OAAKK,MAAM,eACTP,EAAAC,EAAAC,cAAC4N,EAAD,CAAgB1D,YAjDD,SAAC2D,EAAKlH,EAAU/D,GACrCyJ,EAAiBwB,GACjB,IAAIC,EAAW,aAAA3N,OAAgB0N,EAAhB,KAAA1N,OAAuBwG,GAEhCoH,EAAqBX,EAAmBxK,EAAS,MACnDmL,GAA6C,OAAvBA,IACxBD,GAAW,IAAA3N,OAAQ4N,IAGrBrD,EAAU,GAAAvK,OAAI2N,IACdnC,GAAgB,IAuCmC1L,QAASyL,EAAkB/D,OAAQxJ,EAAMwJ,SACtF7H,EAAAC,EAAAC,cAACgO,EAAD,CAAW/N,QAASiL,EAAsBvD,OAAQxJ,EAAMwJ,SACxD7H,EAAAC,EAAAC,cAACiO,EAAD,CAAgBhO,QAASqL,IACzBxL,EAAAC,EAAAC,cAACkO,EAAD,MACApO,EAAAC,EAAAC,cAACmO,EAAD,CAAc5I,aAdC,SAACP,EAAOpC,GAC7BkJ,EAAW,CAACnJ,WAAcqC,IAC1B6F,EAAgBjI,GAChBsJ,GAAgB,MAYVpM,EAAAC,EAAAC,cAACoO,EAAD,CAAc/D,kBAvBC,WACrByB,EAAW,IACXjB,EAAgB,IAChBqB,GAAgB,IAoBuCjM,QAASgM,EAAkBrJ,QAASwH,KAGvFtK,EAAAC,EAAAC,cAAA,OAAKK,MAAM,oBACTP,EAAAC,EAAAC,cAAA,OAAKK,MAAM,2BACTP,EAAAC,EAAAC,cAAA,SACM/B,KAAK,OACLqC,KAAK,GACLG,GAAG,UACH2G,YAAY,iBACZ7G,MAAOqC,EACPyE,SA3JM,SAACL,GAKnB,OAJA0D,EAAW1D,EAAMG,OAAO5G,OACxB4K,GAAe,GACHnE,EAAMG,OAAO5G,OAGvB,IAAK,WACH4K,GAAe,GACf,MACF,IAAK,YACHI,GAAgB,GAChB,MACF,IAAK,WACHtH,QAAQC,IAAI,SAAU/F,EAAMwJ,QAC5BgE,GAAgB,GAChB,MACF,QACER,GAAe,GACfI,GAAgB,GAChBI,GAAgB,QA2IhB7L,EAAAC,EAAAC,cAAA,OAAKK,MAAM,0BACTP,EAAAC,EAAAC,cAAA,OAAKiB,IAAI,6BAA6BC,IAAI,OAAOe,QApItC,SAAC+E,GXtCnB,IAAuBqH,EWwCtB,GADArH,EAAMsH,iBACF3M,kBAAQxD,EAAM0O,QACd7O,EAASF,EAAS,4CAItB,GAAgB,KAAZ8E,GACE0J,IAAiB,CACnB,IAAMpN,EAAO,CACX0N,GAAIzO,EAAM0O,OAAQjK,QAASA,EAASoH,KAAM7L,EAAM2O,YAG7CnL,kBAAQe,KACXxD,EAAKwD,QAAUA,GAGjB1E,GXvDkBqQ,EWuDKnP,EXtDxB,SAAAlB,GACH,IAAMmB,EAAQH,aAAa4I,QAAQ,YAC7BC,EAAU,CACZC,OAAM,OACNzI,QAAS,CACL0I,OAAU,mBACVC,eAAgB,mBAChBC,cAAA,WAAA9H,OAA4BhB,IAEhC+I,KAAMC,KAAKC,UAAUiG,IAIzB,OADApK,QAAQC,IAAI,UAAWmK,GAChBhG,MAAM,eAAgBR,GACxB/I,KAAK,SAAAC,GAAG,OAAIA,EAAIuJ,SAChBxJ,KAAK,SAAAwJ,GACF,IAAI5I,EAAQlB,OAAAyI,EAAA,EAAAzI,CAAA,GAAO8J,GAEnB,GAAIC,mBAAS7I,EAASR,MAAO,CAEzB,IAAMyD,EAAajD,EAASR,KAAKkD,SAAS,GAAG3B,GAC7C4N,EAAYlL,UAAYR,EACxB0L,EAAY1O,OAAS,UACrB0O,EAAYhL,QAAW1B,kBAAQ0M,EAAY3L,SAA4C,GAAjC2L,EAAY3L,QAAQC,WAE1E3E,EAAS,CAAEC,KAAMP,EAAiBK,QAASsQ,SAEtC9F,mBAAS7I,EAAS8I,SAAW7G,kBAAQjC,EAAS8I,QACnDxK,EAAS,CAACC,KAAMN,EAAUI,QAAS2B,EAAS8I,MAAM5F,UAClDyL,EAAY7F,MAAQ9I,EAAS8I,MAAM5F,QACnC5E,EAAS,CAAEC,KAAMP,EAAiBK,QAASsQ,KACpC9F,mBAAS7I,EAAS+I,QACzBzK,EAAS,CAACC,KAAMN,EAAUI,QAAS2B,EAAS+I,OAAO7F,UAKnD5E,EAAS,CAAEC,KAAMP,EAAiBK,QAASsQ,MAIlD9O,MAAM,SAAAC,GACHxB,EAAS,CAACC,KAAMN,EAAUI,QAAS,kBACnCkG,QAAQC,IAAI,eAAgB1E,QWYhCkL,EAAW,IACXwB,GAAgB,GAChBJ,EAAW,IACXjB,EAAgB,myMC6Bb0D,OA/Ff,WAAe,IAAA/D,EAEapE,IAAM9H,SAAS,IAF5BmM,EAAAjM,OAAAC,EAAA,EAAAD,CAAAgM,EAAA,GAENgE,EAFM/D,EAAA,GAEGgE,EAFHhE,EAAA,GAAAE,EAGyBvE,IAAM9H,SAAS,IAHxCsM,EAAApM,OAAAC,EAAA,EAAAD,CAAAmM,EAAA,GAGN+D,EAHM9D,EAAA,GAGO+D,EAHP/D,EAAA,GAAAE,EAIe1E,IAAM9H,SAAS,IAJ9ByM,EAAAvM,OAAAC,EAAA,EAAAD,CAAAsM,EAAA,GAIN8D,EAJM7D,EAAA,GAIE8D,EAJF9D,EAAA,GAAAC,EAKe5E,IAAM9H,SAAS,IAL9B2M,EAAAzM,OAAAC,EAAA,EAAAD,CAAAwM,EAAA,GAKN8D,EALM7D,EAAA,GAKE8D,EALF9D,EAAA,GAAAG,EAMehF,IAAM9H,SAAS,IAN9B+M,EAAA7M,OAAAC,EAAA,EAAAD,CAAA4M,EAAA,GAMNyB,EANMxB,EAAA,GAME2D,EANF3D,EAAA,GAAAG,EAOyBpF,IAAM9H,SAAS,GAPxCmN,EAAAjN,OAAAC,EAAA,EAAAD,CAAAgN,EAAA,GAONyD,EAPMxD,EAAA,GAOQyD,EAPRzD,EAAA,GAAAG,EAQexF,IAAM9H,SAAS,MAR9BuN,EAAArN,OAAAC,EAAA,EAAAD,CAAAoN,EAAA,GAQNjE,EARMkE,EAAA,GAQEsD,EARFtD,EAAA,GAAAE,EASmB3F,IAAM9H,UAAS,GATlC0N,EAAAxN,OAAAC,EAAA,EAAAD,CAAAuN,EAAA,GASNqD,EATMpD,EAAA,GASIqD,EATJrD,EAAA,GAAAG,EAUa/F,IAAM9H,SAAS,MAV5B8N,EAAA5N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAUN3D,EAVM4D,EAAA,GAwFf,OAxFeA,EAAA,GAabkD,oBAAU,WAAM,SAAAC,IAAA,OAAAA,EAAA/Q,OAAAgR,EAAA,EAAAhR,CAAAiR,IAAAC,KAEd,SAAAC,IAAA,OAAAF,IAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQzM,IAAK0M,YAAYC,GAAG,WAAW,SAAS/Q,GAE5C,IAAI4P,EAAS5P,EAAKwE,OACdwM,EAAWhR,EAAKiR,SACpBpB,EAAUD,GACVD,EAAUqB,EAASE,YAEnB9M,IAAKC,IAAIC,IAAIM,UAAU,CAACJ,OAAOoL,EAAO/K,SAASmM,IAC5CpR,KAAK,SAACI,GACL8P,EAAU9P,EAAKA,KAAK,GAAV,QACVuP,EAAOvP,EAAKA,KAAK,MAGlBJ,KAAK,WAEJwE,IAAKC,IAAIC,IAAI6M,aAAa,CAAC3M,OAAQ,uBAAwB4M,WAAW,MAAOC,KAAK,WAAWC,MAAK,gBAAArQ,OAAiB+P,EAAjB,OAC/FpR,KAAM,SAAA8E,GACL+K,EAAe/K,EAAY1E,MAC3BmQ,GAAY,OAGjB9P,MAAM,SAACyE,GAAD,OAAOC,QAAQC,IAAIF,KAE1BV,IAAKC,IAAIC,IAAIiN,eAAe,4BACzB3R,KAAK,SAASI,GACbgQ,EAAchQ,EAAKwR,QAAQC,WAG/BrN,IAAKC,IAAIC,IAAIiN,eAAe,qBACzB3R,KAAK,SAASI,GACbiQ,EAAUjQ,EAAKwR,QAAQC,aA/BjC,cAAAd,EAAAE,KAAA,EAmCiBzM,IAAK0M,YAAYY,OAnClC,cAAAf,EAAAgB,OAAA,SAAAhB,EAAAiB,MAAA,wBAAAjB,EAAAkB,SAAApB,OAFc7J,MAAAH,KAAAI,YAAA,WAAAwJ,EAAAzJ,MAAAH,KAAAI,WAwCd6K,IAED,CAAC/D,IAkCF/M,EAAAC,EAAAC,cAAA,WA9BIwI,EAGE1I,EAAAC,EAAAC,cAAA,oBAGMoP,EAWNtP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgR,EAAD,CAAOnE,OAAQA,EAAQiC,OAAQA,EAAQhC,WAAYmC,EAActH,OAAQA,IACzE7H,EAAAC,EAAAC,cAACiR,EAAD,CAAYjQ,OAAQwN,IACpB1O,EAAAC,EAAAC,cAACkR,EAAD,CAAa9O,SAAUsM,IACvB5O,EAAAC,EAAAC,cAACmR,EAAD,CAAoBrO,KAAM8L,IAC1B9O,EAAAC,EAAAC,cAACoR,EAAD,OAbFtR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAf,QC/DOqO,GAVH,WAEV,OACEzO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACqR,GAAD,MACAvR,EAAAC,EAAAC,cAACsR,EAAD,MACAxR,EAAAC,EAAAC,cAAA,cCCSuR,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA1N,EAAA,GAAAlF,KAAA4S,EAAAC,KAAA,WAAqB7S,KAAK,SAAA8S,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,eCDRU,GAAe,CACnBC,SAAU,GACV5P,aAAc,CAAC,CAACsK,OAAQ,GAAIjK,QAAS,KACrCuD,UAAW,GACX/B,YAAa,GACbO,SAAU,IAwCGyN,OApCf,WAAmD,IAA9B5L,EAA8BT,UAAA0H,OAAA,QAAA4E,IAAAtM,UAAA,GAAAA,UAAA,GAAtBmM,GAAcI,EAAQvM,UAAA0H,OAAA,EAAA1H,UAAA,QAAAsM,EACjD,OAAOC,EAAOrU,MACZ,KAAKP,EACH,OAAOc,OAAO+T,OAAO,GAAI/L,EAAO,CAC9BjE,aAAciE,EAAMjE,aAAapC,OAAOmS,EAAOvU,WAInD,KAAKJ,EACH,OAAOa,OAAO+T,OAAO,GAAI/L,EAAO,CAC9BL,UAAWK,EAAML,UAAUhG,OAAOmS,EAAOvU,WAI7C,KAAKH,EACH,OAAOY,OAAO+T,OAAO,GAAI/L,EAAO,CAC9B7B,SAAU6B,EAAM7B,SAASxE,OAAOmS,EAAOvU,WAI3C,KAAKF,EACH,IAAM2U,EAAOF,EAAOvU,QACpB,OAAOS,OAAAyI,EAAA,EAAAzI,CAAA,GACFgI,EADL,CAEE7B,SAAU6B,EAAM7B,SAASO,OAAO,SAAAL,GAAG,OAAIA,EAAIpE,KAAO+R,IAClDpO,YAAaoC,EAAMpC,YAAYjE,OAAOqS,KAK1C,QACE,OAAOhM,aC1BEiM,ICfTC,GAAiBC,OAAOC,sCAAwCC,KASvDvQ,GAPDwQ,aACVV,GACAM,GAAeK,aAAgBC,QCAtBC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvT,EAAAC,EAAAC,cAACsT,EAAA,EAAD,CAAUhR,MAAOA,IACfxC,EAAAC,EAAAC,cAACuT,GAAD,QAOJhC,yBClBAiC,EAAAC,QAAA,CAAkBnO,WAAA,iCAAAP,qBAAA,gECAlByO,EAAAC,QAAA,CAAkB5K,gBAAA,yCAAAW,YAAA,qCAAAkK,aAAA,yDCAlBF,EAAAC,QAAA,CAAkB5T,SAAA,gDCAlB2T,EAAAC,QAAA,CAAkBrJ,aAAA,uKCDlBsH,oBAAAiC,EAAAC,oBAAA,sBAAAtQ,OAAA,IAAAuQ,oCAAAnC,oBAAA,IAAAoC,4CAAApC,oBAAAqC,EAAAF,qCAGMG,SAAY,SAAUA,GACxB,IAGIC,EAHEC,EAAcC,IAMpB,SAASC,EAASC,IAmBlB,SAASF,EAAgBG,GAErB,IAAMC,EAAU,GAahB,OAZAD,EAAMA,GAAO3B,OAAO6B,SAASrT,MACFiE,OAAOkP,EAAI/H,QAAQ,KAAO,GAAGE,MAAM,KAC/CgI,QAAQ,SAAUC,EAAKC,GAClC,IAAMC,EAAYF,EAAIjI,MAAM,KAC5B8H,EAAQK,EAAU,IAAMA,EAAU,KAIlCL,EAAQM,eAAe,mBACvBN,EAAQO,cAAgBC,mBAAmBR,EAAQO,gBAGhDP,EAoBX,OArDAH,EAAQY,UAAUC,KAAO,YACjBjB,EAASkB,aAAelB,EAASmB,iBACjCxC,OAAO1O,QAAQmR,KAAKtP,MAAM,KAAMC,YAGxCqO,EAAQY,UAAUK,MAAQ,YAClBrB,EAASkB,aAAelB,EAASmB,iBACjCxC,OAAO1O,QAAQuE,MAAM1C,MAAM,KAAMC,YAwCzCiO,EAASG,eAAiBA,EAC1BH,EAASkB,UAbT,WACI,OAAOhB,GAAeA,EAAYgB,WAatClB,EAASmB,aAXT,WACI,OAAOjB,GAAeA,EAAYiB,cAWtCnB,EAASsB,UAxCT,WAKI,OAJKrB,GAAkBA,aAAwBG,IAC3CH,EAAe,IAAIG,GAGhBH,GAoCXD,EAASuB,MART,SAAgBC,GAEZ,IADA,IAAMC,GAAY,IAAIC,MAAOC,UACrBF,EAAYD,GAAgB,IAAIE,MAAOC,cAQ5C3B,EA7DO,CA8DfrB,OAAOqB,UAAY,IAEhB4B,mBAAsB,SAAUA,GAClC,IAAIC,EAQAC,EAAsBC,EAPpBC,EAAShC,SAASsB,YAEpBW,EAAe,IACbC,EAAe,GAEE,IAAIC,OAAO,uIAyElC,SAASC,EAAkBC,EAActY,GAChBsY,EAAaC,OAClCR,EAAmBnD,OAAO4D,OAC1BR,EAAmBF,EAAW3B,YAAYY,cAE1Ce,EAAWW,WAAWzY,EAAQmB,MAC9B2W,EAAWY,qBAEf,SAASC,EAAqBL,EAActY,IAQ5C,SAAS4Y,EAAqBN,EAActY,GAGxC6Y,EAFkB7Y,EAAQ8Y,WAEO,EADhB9Y,EAAQmB,MAG7B,SAAS4X,EAAoBT,EAActY,GAGvC6Y,EAFkB7Y,EAAQ8Y,WAEO,EADhB9Y,EAAQmB,MAG7B,SAAS0X,EAAuBG,EAAWC,EAAWtX,GAC9CwW,EAAarB,eAAekC,KACxBC,EACAd,EAAaa,GAAWE,QAAQvX,GAEhCwW,EAAaa,GAAWG,OAAOxX,GAGnCwW,EAAaa,QAAa1E,SACnB6D,EAAaa,IA8D5B,SAASI,IACL,MAAO,UAAYlB,IAEvB,SAASmB,EAAmBL,GAsBxB,OArBgB,IAAIM,QAAQ,SAAUJ,EAASC,GAE3ChB,EAAaa,GAAa,CACtBE,QAASA,EACTC,OAAQA,EACRI,MAAM,IAAI5B,MAAOC,aAwC7B,SAAS4B,EAAarY,GAKlB,GAJoB,kBAATA,IACPA,EAAKsY,UAAYC,mBAAmBC,OAGnC5B,EACD,MAAM,IAAIT,MAAM,qCAEpBS,EAAiB6B,YAAYzY,EAAM2W,EAAW3B,YAAYY,eAE9D,SAAS4C,IACL,OAAO/E,OAAO6B,SAASoD,SAAW,KAAOjF,OAAO6B,SAASqD,KAAOlF,OAAO6B,SAASsD,SASpF,OAPAlC,EAAmBmC,KApOnB,SAAeC,EAAKC,GAChB,IAAKD,GAAsB,kBAARA,EACf,MAAM3C,MAAM,iCAEhB,GAAI4C,GAA4B,kBAAXA,EACjB,MAAM5C,MAAM,kDAKhB,OAFAQ,EAAamC,EAgBjB,SAAyB3B,GAErB,IACI,IAAInX,EAAoC,kBAAtBmX,EAAanX,KAAoBiJ,KAAK+P,MAAM7B,EAAanX,MAAQmX,EAAanX,KAClG,MAAO8E,GACL,IAAI9E,EAAOmX,EAAanX,KAE5B,IAAMiZ,EAAcjZ,EAAKjB,KACnBma,EAAYlZ,EAAKkZ,UAEvB,IACI,GAAkB,gBAAdA,GArBZ,SAA8BC,GAC1B,IAAMC,EAAiBD,EAAOE,OACxBC,EAAiBH,EAAO/B,OAE9B,SAAIT,EAAW4C,mBAAqB3C,IAAqBwC,GAAkBvC,IAAqByC,IAIzF,IAAInD,MAAM,0BAasBqD,CAAoBrC,GACnD,OAAQ8B,GACR,IAAK,mBAcjB,SAAsB9B,EAActY,GACnBA,EAAQmB,KAArB,IAUMyZ,EAPgB,CAClBC,YAAaxC,EACbyC,eAAgBnC,EAChBoC,eAAgBnC,EAChBoC,uBAAwBjC,GANV/Y,EAAQqa,WAUtBO,GAAwC,oBAAjBA,EACvBA,EAAatC,EAActY,GAiBnC,SAA4BsY,EAActY,GACtCib,iBAAiBC,qBAAqBpD,EAAWqD,WAAYnb,EAAQqa,UAAWra,EAAQmB,MAhBpFia,CAAkB9C,EAActY,GA5BxBqb,CAAY/C,EAAcnX,GAC1B,MAEJ,QACI2W,EAAWwD,mBAAmBhD,EAAcnX,IAItD,MAAO8E,GACLgS,EAAOX,MAAM,2BAA4BrR,EAAEsV,SArCzB3H,KAAKiE,IA2N/BA,EAAmB2D,YAnCnB,WACI,IAAMC,EAAoB,CACtBvb,KAAM,YACNma,UAAW,WACXZ,UAAWC,mBAAmBC,MAIlC/E,OAAO4D,OAAOoB,YAAY6B,EAAmB3D,EAAW3B,YAAYY,gBA4BxEc,EAAmB6D,cA1BnB,WAOIlC,EAN4B,CACxBtZ,KAAM,YACNma,UAAW,aACXsB,SAAU7D,EAAW8D,iBAwB7B/D,EAAmBgE,YA3HnB,SAAsB/R,GAClB,IAAKA,GAA8B,kBAAZA,EACnB,MAAM,IAAIwN,MAAM,0BAGpB,OA4BJ,SAAoB+C,EAAWra,EAAS8b,GACpC,IAAKzB,EACD,MAAM,IAAI/C,MAAM,uBAAwB+C,GAG5C,IAAM0B,EAAYD,EAAiB1C,SAAqB9E,EAexD,GAFAkF,EAZoB,CAEhBtZ,KAAM,YACNma,UAAWA,EACXsB,SAAU7D,EAAW8D,cACrBrC,MAAM,IAAI5B,MAAOC,UACjBkB,UAAWiD,EAGX5a,KAAMnB,IAKN8b,EACA,OAAOzC,EAAkB0C,GAjDtBC,CAAU,eAAgBlS,GAAS,IAuH9C+N,EAAmBoE,aArHnB,SAAuB5B,EAAWra,EAAS8b,GACvC,IAAKzB,EACD,MAAM,IAAI/C,MAAM,uBAAwB+C,GAG5C,IAAM0B,EAAYD,EAAiB1C,SAAqB9E,EAexD,GAFAkF,EAZoB,CAEhBtZ,KAAM,YACNma,UAAWA,EACXsB,SAAU7D,EAAW8D,cACrBrC,MAAM,IAAI5B,MAAOC,UACjBkB,UAAWiD,EAGX5a,KAAMnB,IAKN8b,EACA,OAAOzC,EAAkB0C,IAkG1BlE,EAtPiB,CAuPzBjD,OAAOiD,oBAAsB,IAE5BoD,iBAAoB,SAAUA,GAC9B,IAAMhD,EAAShC,SAASsB,YAElB2E,EAAiB,GA8CvB,OAJAjB,EAAiBkB,oBAvCjB,SAA8B9B,EAAW+B,GACnB,oBAAPA,IAKNC,MAAMC,QAAQJ,EAAe7B,MAC9B6B,EAAe7B,GAAa,IAEhC6B,EAAe7B,GAAWjL,KAAKgN,KA+BnCnB,EAAiBC,qBA5BjB,SAA+BC,EAAYd,EAAWkC,GAClD,IAAMC,EAAqBnC,EAAUoC,MAAM,wBAGrCC,GAFkBL,MAAMC,QAAQE,IAAuBA,EAAmB9M,OAExDwM,EAAe7B,IACvC,GAAIqC,GAAmBL,MAAMC,QAAQI,GACjC,IAAK,IAAIjN,EAAI,EAAGA,EAAIiN,EAAgBhN,OAAQD,IAC7BiN,EAAgBjN,GACxB5E,KAAKsQ,EAAYoB,QAGxBtE,EAAOf,KAAK,0CAA2CmD,IAkB/DY,EAAiB0B,2BAdjB,SAAqC7E,EAAY9X,GAC7C,IAAMqa,EAAYra,EAAQqa,UAER,iBAAdA,GACAvC,EAAWW,WAAWzY,EAAQmB,MAC9B2W,EAAWY,sBACU,2BAAd2B,IACPvC,EAAW8E,cAAc5c,EAAQmB,MACjC2W,EAAW+E,gCAQZ5B,EAjDa,CAkDrBrG,OAAOqG,kBAAoB,IAE9B,SAAS6B,OAEL,IAAMC,KAAOnV,KACToV,QACAC,qBACAC,WACA/G,YACAwF,SACEwB,UAAY,GACdC,eAAiB,GAEfC,QAAU,QAEVpF,OAAShC,SAASsB,YAEpB+F,kBAAmB,EACnBC,mBAAoB,EAGxB3V,KAAK4V,gBAAiB,EACtB5V,KAAK6V,cAAgB,GACrB7V,KAAKuP,WAAY,EACjBvP,KAAK8V,WAAa,WACd,OAAOvC,YAGX,IAAIA,WAAa,GA4BjB,SAASzC,qBACkB,oBAAZsE,QACPO,kBAAqBtF,OAAOX,MAAM,oCAEtC0F,QAAQnS,KAAKsQ,WAAYA,YACzBoC,mBAAoB,GAJiBtF,OAAOX,MAAM,0CAMtD,SAASuF,8BACLI,qBAAqBpS,KAAKsQ,WAAYA,YAE1C,SAAST,kBACL,OAAO4C,iBAIX,SAASK,WAAY7T,GACjB,OAAO+N,mBAAmBgE,YAAY/R,GAI1C,SAASmS,aAAc5B,EAAWra,EAAS4d,GACvC,OAAO/F,mBAAmBoE,aAAa5B,EAAWra,EAAS4d,GAE/D,SAASC,iBACLhG,mBAAmB2D,cAIvB,SAAS/C,WAAYqF,GACjB7F,OAAOf,KAAK,2BAEZ,IAAM6G,EAAaD,GAAeA,EAAYE,OAAU,GAC1CF,GAAeA,EAAYG,OACnBH,GAAeA,EAAYV,eAYjD,GAVIxI,OAAOuC,WACH2G,EAAYG,QAAUH,EAAYV,gBACW,IAAnD3c,OAAOyd,KAAKJ,EAAYV,gBAAgB1N,QACxCoO,EAAYV,eAAee,cAAgB1d,QACjCqd,EAAYG,QACZG,mBAAmBN,EAAYG,QAKX,qBAArBI,iBAAkC,CACzC,IAAK,IAAMlW,KAAO4V,EACdnJ,OAAOyJ,iBAAiBC,SAASnW,EAAK4V,EAAU5V,IAEpDgT,WAAWoD,MAAQ3J,OAAOyJ,iBAAiBG,gBAI/C7C,SAAWmC,EAAYnC,SAGvBuB,WAAaY,EAAYZ,WACzBjF,OAAOf,KAAK,kBAAmBgG,YAE/BI,kBAAmB,EAEvB,SAAS1B,cACL,OAAOD,SAEX,SAASiB,cAAekB,IAGxB,SAAS3B,oBAAqB9B,EAAWoE,GACrCxD,iBAAiBkB,oBAAoB9B,EAAWoE,GAGpD,SAASC,gBACL,OAAOxB,WAGX,SAASkB,mBAAoBH,GACzBU,UAAU,qBAAuBV,EAAS,QAAS,SAAUtc,GAEzDyb,eAAiBhT,KAAK+P,MAAMxY,GAC5Bid,aAIR,SAASD,UAAWE,EAAUC,GAC1B,IAAMC,EAAO,IAAIC,eAEjBD,EAAKE,KAAK,MAAOJ,GAAU,GAC3BE,EAAKG,mBAAqB,WACC,GAAnBH,EAAKI,YAAkC,OAAfJ,EAAKnd,QAE7Bkd,EAASC,EAAKK,eAItBL,EAAKM,KAAK,MAGd,SAASC,UAAWnX,IAAK2B,SACrB,IAAIyV,OAAS,GAKb,GAJIpX,MACAoX,OAASC,gBAAgBpC,eAAgBjV,OAGxCoX,OACD,OAAO,EAGX,GAAIzV,QAAS,CACT,IAAI3B,IACEsX,iBAAmBrV,KAAK+P,MAAM/P,KAAKC,UAAUqV,KAAK5V,WAClD6V,QAAUlf,OAAOyd,KAAKuB,kBAC5B,IAAKtX,OAAOwX,QACRJ,OAASK,eAAeL,OAAQ,KAAOI,QAAQxX,KAAO,IAAKsX,iBAAiBE,QAAQxX,OAI5F,OAAOoX,OAGX,SAASK,eAAgBC,EAAKC,EAAMC,GAEhC,IADA,IAAIC,EAAK,GACFA,GAAMH,GACTG,EAAKH,EACLA,EAAMA,EAAIE,QAAQD,EAAMC,GAE5B,OAAOF,EAGX,SAASL,gBAAiBS,EAAGC,GAIzB,IADA,IAAMle,GADNke,GADAA,EAAIA,EAAEH,QAAQ,aAAc,QACtBA,QAAQ,MAAO,KACTrR,MAAM,KACTe,EAAI,EAAGuG,EAAIhU,EAAE0N,OAAQD,EAAIuG,IAAKvG,EAAG,CACtC,IAAMP,EAAIlN,EAAEyN,GACZ,KAAIP,KAAK+Q,GAGL,OAFAA,EAAIA,EAAE/Q,GAKd,OAAO+Q,EAGX,SAASrB,WACL,IAAMuB,IAAM/K,SAASgL,iBAAiB,eACtC,IAAK,IAAM3Q,KAAK0Q,IACZ,GAAIA,IAAIrJ,eAAerH,GAAI,CACvB,IAAI8P,OAASC,gBAAgBpC,eAAgB+C,IAAI1Q,GAAG4Q,aAAa,cACjE,IAAKd,OACD,OAAO,EAGX,GAAIY,IAAI1Q,GAAG6Q,aAAa,gBAAiB,CACrC,IAAMxW,QAAUM,KAAK+P,MAAM/P,KAAKC,UAAUqV,KAAK,IAAMS,IAAI1Q,GAAG4Q,aAAa,gBAAkB,OACrFV,QAAUlf,OAAOyd,KAAKpU,SACxB3B,IACJ,IAAKA,OAAOwX,QACRJ,OAASK,eAAeL,OAAQ,KAAOI,QAAQxX,KAAO,IAAK2B,QAAQ6V,QAAQxX,OAGnFgY,IAAI1Q,GAAG8Q,UAAYhB,QAK/B,SAASiB,YACLrK,YAAcF,SAASG,iBAGvBxB,OAAOuC,YAAchB,YAAYgB,UAEjC,IAAMW,EAAa,GACnBA,EAAWX,UAAYvC,OAAOuC,UAC9BW,EAAWY,mBAAqBA,mBAChCZ,EAAWW,WAAaA,WACxBX,EAAW8E,cAAgBA,cAC3B9E,EAAW3B,YAAcA,YACzB2B,EAAW4G,cAAgBA,cAC3B5G,EAAWmE,aAAeA,aAC1BnE,EAAW+E,4BAA8BA,4BACzC/E,EAAW8D,YAAcA,YACzB9D,EAAW4C,gBAAkBA,gBAG7B,IAAM+F,EAAiB5I,mBAAmBmC,KAAKlC,GAC/ClD,OAAO8L,iBAAiB,UAAWD,GACnC7L,OAAO8L,iBAAiB,SAAU,WAC9B7I,mBAAmB6D,kBAGS,qBAArB2C,kBACPzJ,OAAOyJ,iBAAiBrE,KAAKlC,GAGjC+F,iBA5NJ1C,WAAWoD,MAAQ,GAEnBpD,WAAWwF,MAAQ,GACnBxF,WAAWwF,MAAMC,OAASzE,oBAC1BhB,WAAWwF,MAAME,QAAU5E,aAE3Bd,WAAWwC,WAAaA,WACxBxC,WAAWhF,YAAcA,YACzBgF,WAAWmE,UAAYA,UAEvB1X,KAAKkZ,OAAS,SAAUC,GAEpB,GAA8B,oBAAnBA,EACP,MAAM,IAAIzJ,MAAM,oCAEpB0F,QAAU+D,EACNzD,kBAAoB5E,sBAE5B9Q,KAAKoZ,SAAW,SAAUC,KAG1BrZ,KAAKsZ,gBAAkB,SAAUC,GAE7BlE,qBAAuBkE,GAwM3BX,YAGG,IAAMjb,KAAQ,WACjB,IAAI6b,EAGAC,EAFEC,EAAmB,GACrBC,GAAkB,EAEtB,MAAO,CACHtP,YAAa,CACTC,GAAI,SAAUjJ,EAAOmT,GACjBkF,EAAiBrY,GAASmT,GAE9BvJ,KAAM,WAIE,IAAI2O,EAHX,IAAKD,EAUE,IAAK,IAAMpZ,KATjBoZ,GAAkB,EACZH,EAAS,IAAItE,KAEbuE,EAAc,IAAI/H,QAAQ,SAAUJ,EAASC,GACzCqI,EAAiBtI,IAErBkI,EAAON,OAAO,WACVU,MAEcF,EACdF,EAAO1D,aAAaiD,MAAMC,OAAOzY,EAAKmZ,EAAiBnZ,IAG/D,OAAOkZ,IAGf7b,IAAM,WACF,SAASic,EAAmBtgB,GAKxB,OADAA,EAAKugB,WAAa,IACXN,EAAO1D,aAAaiD,MAAME,QAAQ,YAAa1f,GAAM,GAGhE,SAASwgB,EAAkBC,GACvB,IAAMC,EAAUD,EAErB,OADqB,IAAIE,KAAK,CAACD,GAAUA,EAAQtf,KAAM,CAAErC,KAAM2hB,EAAQ3hB,OAGtE,SAAS6hB,EAAcpc,EAAQqc,EAAShc,EAAUic,GACjD,GAAID,EAAQE,SAAU,CACpB,IAAMC,EAAaR,EAAiBK,EAAQE,UACvCF,EAAQE,SAAWC,EAEvB,IAAMhhB,EAAO,CACT0H,SAAU,SACVlD,OAAQA,EACRyc,UAAWpc,EACXJ,QAASoc,GAGb,OADA7gB,EAAKjB,KAAO+hB,GAAiB,SACtBR,EAAkBtgB,GAc7B,SAASkhB,EAAczc,GAEnB,OADAA,EAAQiD,SAAW,YACZ4Y,EAAkB7b,GAmB7B,SAAS0c,EAAe1c,GAEpB,OADAA,EAAQiD,SAAW,YACZ4Y,EAAkB7b,GA4H7B,SAAS2c,EAAYxY,EAAQyY,EAAatiB,GACzC,GAAIsiB,EAAYC,KAAM,CACrB,IAAMC,EAAaf,EAAiBa,EAAYC,KAAKb,MACrDY,EAAYC,KAAKb,KAAOc,EAEtB,IAAIC,EACJ,GAAKziB,EA4BDyiB,EAAUH,MA5BH,CACP,IAAII,EAAMJ,EAAYI,IAChBC,EAASL,EAAYK,OACrBvhB,EAAUkhB,EAAYlhB,QACtB6I,EAAOqY,EAAYrY,KACnB2Y,EAAQN,EAAYO,MACpBC,EAAeR,EAAYS,cAC3BC,EAAcV,EAAYW,aAC1BC,EAAeZ,EAAYa,cAC3BzB,EAAOY,EAAYC,KACzB,IAAKG,EACD,KAAM,CAAEU,QAAS,eAErB,GAAIT,EAAQ,CACR,IAAMU,EA7BlB,SAA+B/I,GAC3B,IAAMgJ,EAAQ,GAEd,IAAK,IAAMrb,KAAOqS,EACdgJ,EAAMpU,KAAKsK,mBAAmBvR,GAAO,IAAMuR,mBAAmBc,EAAOrS,KAEzE,OAAOqb,EAAM5T,KAAK,KAuBU6T,CAAqBZ,GACzCD,IAAQA,EAAIpU,QAAQ,MAAQ,EAAI,IAAM,KAAO+U,EAEjDZ,EAAU,CACNC,IAAKA,EACLc,OAAQpiB,EACRqiB,KAAMxZ,EACNgZ,aAAcD,EACdG,cAAeD,EACfL,MAAOD,EACPc,eAAgBZ,EAChBP,KAAMb,GAYd,OAAOH,EANM,CACT5Y,SAAU,YACVgb,UAAW9Z,EACX5I,KAAMwhB,EACNziB,KAAMA,IAKd,SAAS4jB,EAAc3iB,GAKnB,OADA4iB,2CAAS5iB,EAHM,CACX0H,SAAU,OAGP4Y,EAAkBtgB,GAG7B,SAAS+Y,EAAQha,EAAM2jB,EAAWrB,GAO9B,OAAOf,EANM,CACT5Y,SAAU,SACV3I,KAAMA,EACN2jB,UAAWA,EACXje,QAAS4c,IAKjB,SAASjO,EAAQrU,EAAM8jB,GAMnB,OAAOvC,EALM,CACT5Y,SAAU,SACV3I,KAAMA,EACNsJ,OAAQwa,IAKhB,SAASjf,EAAM5D,GACX,IAAM8iB,EAAc,CAChBpb,SAAU,QAad,OAXI1H,EAAK+iB,GACLD,EAAYC,GAAK/iB,EAAK+iB,GACf/iB,EAAKqR,OACZyR,EAAYzR,KAAOrR,EAAKqR,KACpBrR,EAAKgjB,OACLF,EAAYE,KAAOhjB,EAAKgjB,MAExBhjB,EAAKijB,WACLH,EAAYG,SAAWjjB,EAAKijB,WAG7B3C,EAAkBwC,GAG7B,SAASI,EAASljB,GAOd,OAAOsgB,EANS,CACZ5Y,SAAU,OACV3I,KAAMiB,EAAKjB,KACXyF,OAAQxE,EAAKwE,OACb2e,GAAInjB,EAAKmjB,KAIjB,IAAMC,EACI,YADJA,EAEG,WAFHA,EAGG,WAHHA,EAIK,aAJLA,EAKM,cAEZ,MAAO,CACHC,OAAQ,CACJC,UAAW,SAAUT,GACjB,OAAOzP,EAAO,4BAA6ByP,IAE/CU,oBAAqB,SAAUV,GAC3B,OAAOzP,EAAO,wBAAyByP,KAM/CW,UAAW,CA+BPC,QAAS,SAAUC,EAAWC,GAC1B,IAAMC,EAAU,GAQhB,OAPAD,EAASE,UAAY,QACrBD,EAAQ5jB,KAAO2jB,EAMRrD,EALM,CACT5Y,SAAU,oBACVoc,mBAAoBJ,EACpB1jB,KAAM4jB,MASlBG,OAAQ,CAmBJC,WAAY,SAAUtB,GAClB,OAAO3J,EAAO,QAkClBkL,eAAgB,WACZ,OAAOlL,EAAO,iBAyBlBmL,sBAAuB,WACnB,OAAOnL,EAAO,oBA0ItBoL,KAAM,CAkRFC,UAAW,SAAUpkB,GAEjB,OADAA,EAAKjB,KAAO,aACLmkB,EAAQljB,IA8MnBqkB,WAAY,WAIR,OAAOnB,EAHM,CACTnkB,KAAM,iBAmDdulB,mBAAoB,SAAUtkB,GAE1B,OADAA,EAAKjB,KAAO,mBACLmkB,EAAQljB,IAm+CnBukB,WAAY,SAAUvkB,GAGlB,OAFAA,EAAKuB,GAAKvB,EAAKuB,GAAKvB,EAAKuB,GAAKvB,EAAKwkB,SACnCxkB,EAAKjB,KAAOiB,EAAKmjB,GAAK,SAAW,UAC1BD,EAAQljB,IA0MnBykB,eAAgB,SAAUzkB,GAEtB,OADAA,EAAKjB,KAAO,eACLmkB,EAAQljB,IAiNnB0kB,eAAgB,SAAU1kB,GAEtB,OADAA,EAAKjB,KAAOiB,EAAKmjB,GAAK,cAAgB,eAC/BD,EAAQljB,KAMvBsE,IAAK,CAwCDqgB,SAAU,SAAU3kB,GAChB,IAAMwE,EAASxE,EAAKwE,OAEdK,EAAW7E,EAAK6E,SAOtB,OAAO+b,EAAapc,EANJ,CACZxE,KAAM,CAAC,CACH4kB,WAAY5kB,EAAKoC,MACjByiB,aAAc7kB,EAAKyR,WAGU5M,EARf,UAU1BigB,mBAAoB,SAAU9kB,GAU1B,OAt7FZ,SAAsBwE,EAAQK,EAAUkgB,EAAiBtgB,GASrD,OAAO6b,EARM,CACT5Y,SAAU,SACV3I,KAAM,QACNyF,OAAQA,EACRK,SAAUA,EACVkgB,gBAAiBA,EACjBtgB,QAASA,IA+6FEugB,CATQhlB,EAAKwE,OACHxE,EAAK6E,SACE7E,EAAK+kB,gBACb,CACZE,MAAO,CACHC,SAAUvE,KAAKhd,KACfod,SAAUJ,KAAKlP,YAsG3BlN,aAAc,SAAUvE,GACpB,IAAMwE,EAASxE,EAAKwE,OACdC,EAAUzE,EAAKyE,QAErB,OADAA,EAAQ0gB,QAAUnlB,EAAK0f,QAChBkB,EAAapc,EAAQC,IA8EhC2gB,aAAc,SAAUplB,GACpB,IAAMwE,EAASxE,EAAKwE,OACdC,EAAUzE,EAAKyE,QAMrB,OALAA,EAAQ0gB,QAAUnlB,EAAK0f,QACvBjb,EAAQ2O,OAAS,SACbpT,EAAKqlB,wBAA0BrlB,EAAKqlB,kCAAkCnK,QACtEzW,EAAQ4gB,uBAAyBrlB,EAAKqlB,uBAAuB5W,KAAK,MAE/DmS,EAAapc,EAAQC,IAiFhCG,UAAW,SAAU5E,GAGjB,OAlxGZ,SAAoBwE,EAAQwM,EAAUsU,GASlC,OAAOhF,EARM,CACT5Y,SAAU,OACVjD,QAAS,CACLD,OAAQA,EACRK,SAAUmM,EACVuU,YAAaD,KA4wGN1gB,CAFQ5E,EAAKwE,OACHxE,EAAK6E,WAyE1Bqc,aAAc,SAAUlhB,GAMpB,OAAOkhB,EALS,CACZ1c,OAAQxE,EAAKwE,OACbK,SAAU7E,EAAK6E,SACfuO,OAAQ,0BAuFhBoS,gBAAiB,SAAUxlB,GAOvB,OAAOkhB,EANS,CACZ1c,OAAQxE,EAAKwE,OACbK,SAAU7E,EAAK6E,SACf4gB,cAAezlB,EAAKylB,cACpBrS,OAAQ,6BAmDhBsS,WAAY,SAAU1lB,GAClB,OA/9GZ,SAAqByE,GACpB,GAAIA,EAAQ6c,KAAM,CACjB,IAAMC,EAAaf,EAAiB/b,EAAQ6c,KAAKb,MACjDhc,EAAQ6c,KAAKb,KAAOc,EAOlB,OAAOjB,EALM,CACTS,SAAUtc,EACViD,SAAU,QACV3I,KAAM,gBAu9GK2mB,CAAW1lB,IAgBtB2lB,QAAS,SAAU3lB,GACf,OAp+GMyE,EAo+GSzE,GAn+Gf0H,SAAW,QACnBjD,EAAQ1F,KAAO,gBACRuhB,EAAkB7b,GAH7B,IAAkBA,GA0nHVmhB,cAAe,SAAU5lB,GACrB,OA7mHDsgB,EAJM,CACT5Y,SAAU,OACVjD,QA+mHyBzE,KAkDzB6lB,aAAc,SAAU7lB,GACpB,IAAMwE,EAASxE,EAAKwE,OACdC,EAAUzE,EAAKyE,QAErB,OADAA,EAAQ0gB,QAAUnlB,EAAK0f,QA/pHnC,SAAuBlb,EAAQC,GAO3B,OAAO6b,EANM,CACT5Y,SAAU,SACV3I,KAAM,SACNyF,OAAQA,EACRC,QAASA,IA2pHEohB,CAAarhB,EAAQC,IA8BhCW,aAAc,SAAUpF,GAGpB,OAtpHZ,SAAuBwE,EAAQK,GAO3B,OAAOyb,EANM,CACT5Y,SAAU,SACV3I,KAAM,SACNyF,OAAQA,EACRK,SAAUA,IAipHCO,CAFQpF,EAAKwE,OACHxE,EAAK6E,WAyC1BsM,aAAc,SAAUnR,GAOpB,OA/qHZ,SAAuBwE,EAAQ6M,EAAMC,EAAO0R,EAAMC,EAAU6C,GAUxD,OAAOxF,EATM,CACT5Y,SAAU,SACVlD,OAAQA,EACR6M,KAAMA,EACNC,MAAOA,EACP0R,KAAMA,EACNC,SAAUA,EACV6C,MAAOA,IAuqHI3U,CANQnR,EAAKwE,OACPxE,EAAKqR,KACJrR,EAAKsR,MACNtR,EAAKgjB,KACDhjB,EAAKijB,SACRjjB,EAAK8lB,QAiFvB3E,cAAe,SAAUnhB,GAErB,OADAA,EAAKoT,OAAS,kBACP+N,EAAcnhB,IA0EzB+lB,mBAAoB,SAAU/lB,GAC1B,IAAMgmB,EAAU,GAOhB,OANIhmB,EACAA,EAAKoT,OAAS,wBAEd4S,EAAQ5S,OAAS,uBACjBpT,EAAOgmB,GAEJ7E,EAAcnhB,IAuEzBimB,gBAAiB,SAAUjmB,GAEvB,OADAA,EAAKoT,OAAS,mBACP+N,EAAcnhB,IAiDzBkmB,oBAAqB,WACjB,IAAMlmB,EAAO,CACbA,OAAc,yBACd,OAAOmhB,EAAcnhB,IA0CzBmmB,cAAe,SAAUnmB,GAErB,OADAA,EAAKoT,OAAS,kBACP+N,EAAcnhB,IAgDzBomB,YAAa,SAAUpmB,GAInB,OAAO4D,EAAK,CAAEyN,KAHDrR,EAAKqR,KAGQ2R,KAFbhjB,EAAKgjB,KAEoBC,SADrBjjB,EAAKijB,YA2G1BoD,QAAS,SAAUrmB,GAEf,OAAO4D,EAAK,CAAEmf,GADH/iB,EAAK+iB,MA0FpBuD,kBAAmB,SAAUtmB,GACzB,OAxyIDsgB,EAJM,CACT5Y,SAAU,OACVjD,QA0yI4BzE,KAmC5BumB,qBAAsB,SAAUvmB,GAM5B,OA90IZ,SAA8BwE,EAAQK,EAAU0gB,EAAaR,EAAiBtgB,GAU1E,OAAO6b,EATM,CACT5Y,SAAU,SACV3I,KAAM,iBACNyF,OAAQA,EACRK,SAAUA,EACV0gB,YAAaA,EACbR,gBAAiBA,EACjBtgB,QAASA,IAs0IE+hB,CALQxmB,EAAKwE,OACHxE,EAAK6E,SACF7E,EAAKulB,YACDvlB,EAAK+kB,gBACb/kB,EAAKyE,UAgCzBgiB,oBAAqB,SAAUzmB,GAK3B,OA/0IZ,SAA8BwE,EAAQK,EAAU0gB,EAAaR,GASzD,OAAOzE,EARM,CACT5Y,SAAU,SACV3I,KAAM,iBACNyF,OAAQA,EACRK,SAAUA,EACV0gB,YAAaA,EACbR,gBAAiBA,IAw0IN2B,CAJQ1mB,EAAKwE,OACHxE,EAAK6E,SACF7E,EAAKulB,YACDvlB,EAAK+kB,kBA2CjC4B,WAAY,SAAU3mB,GAClB,IAAMwE,EAASxE,EAAKwE,OACdK,EAAW7E,EAAK6E,SAChB8b,EAAO3gB,EAAK2gB,KAKlB,OAAOC,EAAapc,EAJhBxE,EAAO,CACPklB,SAAUvE,EAAKhd,KACfod,SAAUJ,EAAKlP,SAEe5M,EAAU,eAuDhD+hB,eAAgB,SAAU5mB,GAGtB,OA75IDsgB,EAJM,CACT5Y,SA85IqB,WA75IrB3I,KA85IiB,sBAiFjB8nB,WAAY,SAAU7mB,GAIlB,OA9+IZ,SAAqB8mB,EAAUzV,EAAM0R,GAMjC,OAAOzC,EALM,CACT5Y,SAAUof,EACV/nB,KAAMsS,EACN0R,GAAIA,IA0+IO8D,CAHU,WACJ,cACF7mB,EAAK+iB,KA6CpBgE,cAAe,SAAU/mB,GAKrB,OAthJZ,SAAwB8mB,EAAUzV,EAAM0R,EAAIte,GAOxC,OAAO6b,EANM,CACT5Y,SAAUof,EACV/nB,KAAMsS,EACN0R,GAAIA,EACJte,QAASA,IAihJEsiB,CAJU,SACJ,UACF/mB,EAAK+iB,GACA/iB,EAAKyE,UAkDzB8M,eAAgB,SAAUmR,GACtB,OAAO3J,EAAO,WAAY2J,KAMlCsE,GAAI,CAqBAC,OAAQ,SAAUjnB,GAQd,OAAO2iB,EAPH3iB,EAAO,CACPoT,OAAQ,SACRpT,KAAM,CACFknB,MAAOlnB,EAAKknB,MACZC,OAAQnnB,EAAKmnB,WAQzBC,OAAQ,CAOJC,SAAU,WAMN,OAAO1E,EALM,CACTvP,OAAQ,CACJkU,UAAW,eAWvBC,SAAU,WAMN,OAAO5E,EALM,CACTvP,OAAQ,CACJkU,UAAW,eAWvBE,OAAQ,WAMJ,OAAO7E,EALM,CACTvP,OAAQ,CACJkU,UAAW,cAS3BG,OAAQ,CAeJ3J,KAAM,SAAU9d,GAcZ,OAAO2iB,EAVH3iB,EAAO,CACPoT,OAAQ,CACJsU,OAAQ,QAEZ1nB,KAAM,CACFwE,OAAQxE,EAAKwE,OACbK,SAAU7E,EAAK6E,SACfoD,OAAQjI,EAAK2nB,WAmBzBC,KAAM,SAAU5nB,GAcZ,OAAO2iB,EAVH3iB,EAAO,CACPoT,OAAQ,CACJsU,OAAQ,QAEZ1nB,KAAM,CACFwE,OAAQxE,EAAKwE,OACbK,SAAU7E,EAAK6E,SACfoD,OAAQjI,EAAK2nB,WAkBzBE,OAAQ,SAAU7nB,GAcd,OAAO2iB,EAVH3iB,EAAO,CACPoT,OAAQ,CACJsU,OAAQ,UAEZ1nB,KAAM,CACFwE,OAAQxE,EAAKwE,OACbK,SAAU7E,EAAK6E,SACfoD,OAAQjI,EAAK2nB,WAiBzBG,SAAU,SAAUC,GAUhB,OAAOpF,EANM,CACTvP,OAAQ,CACJsU,OAAQ,YAEZ1nB,KAAM+nB,MAQlBC,MAAO,CAYHC,MAAO,WASH,OAAOtF,EALM,CACTvP,OAAQ,CACJ8U,MAAO,YAgBnBC,YAAa,WAST,OAAOxF,EALM,CACTvP,OAAQ,CACJ8U,MAAO,oBASvBE,OAAQ,CAsBJtK,KAAM,SAAU9d,GAUZ,OAAO2iB,EANH3iB,EAAO,CACPoT,OAAQ,CACPiV,OAAQ,QAETroB,KAAMA,OAUtBsoB,KAAM,CA2EFC,IAAK,SAAUvoB,GACX,OAAOohB,EAAWgC,EAAiBpjB,IA2CvCN,KAAM,SAAUM,GACZ,OAAOohB,EAAWgC,EAAkBpjB,IAwDxCwoB,IAAK,SAAUxoB,GACX,OAAOohB,EAAWgC,EAAiBpjB,IAgDvCyoB,MAAO,SAAUzoB,GACb,OAAOohB,EAAWgC,EAAmBpjB,IAuCzC0oB,OAAQ,SAAU1oB,GACd,OAAOohB,EAAWgC,EAAoBpjB,KAM9C2oB,UAAW,CA0FPC,UAAW,SAAUlG,EAAW1iB,GAC5B,OAAOohB,EAAWsB,EAAW1iB,EAAM,kBAavC6oB,UAAW,SAAUnG,GACjB,OAAOtB,EAAWsB,EAAW,GAAI,yBA0BzCoG,WAAY,CAwCRC,OAAQ,SAAUC,EAAWrF,GACzB,IAAMC,EAAU,GACVqF,EAAS,GAYf,OAXAA,EAAOxH,IAAMkC,EAASlC,IACtBwH,EAAOrgB,OAAS+a,EAAS/a,OACzBqgB,EAAOC,WAAavF,EAASuF,WAC7BD,EAAOpb,WAAa5E,KAAKC,UAAUya,EAAS9V,YAC5Cob,EAAO9oB,QAAU8I,KAAKC,UAAUya,EAASxjB,SACzCyjB,EAAQ5jB,KAAOipB,EAMR3I,EALM,CACT5Y,SAAU,iBACVyhB,eAAgBH,EAChBhpB,KAAM4jB,OA79KpB,IA5BO,qJC7mBrBtP,EAAAC,QAAA,CAAkB5J,eAAA","file":"static/js/main.1f29eb68.chunk.js","sourcesContent":["/* own message in */\r\nexport const OWN_MESSAGE_OUT = \"OWN_MESSAGE_OUT\";\r\n/* receipt message from client */\r\nexport const ERROR_IN = \"ERROR_IN\";\r\n/* CRM prev messages */\r\nexport const ALL_MSG = \"ALL_MSG\"\r\nexport const DELETE_ALL_MSG = \"DELETE_ALL_MSG\"\r\n/* TEMPLATE MESSAGE */\r\nexport const TEMPLATE_MESSAGE = \"TEMPLATE_MESSAGE\"\r\n\r\n\r\n","import { ERROR_IN } from '../constants/index';\r\n\r\nexport function errorsIn(payload) {\r\n    \r\n    return dispatch => {\r\n        dispatch({ type: ERROR_IN, payload: payload });\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport function badUrl() {\r\n    return {type: \"BAD_URL\"};\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch } from 'react-redux'\r\nimport { errorsIn } from '../../js/actions/errors'\r\n\r\n\r\nconst Login = (props) => {\r\n  const dispatch = useDispatch()\r\n  const [myKey, setMyKey] = useState('E@Js#07Do=U$');\r\n\r\n  axios.post('/textmessage/login', {password: myKey})\r\n    .then(res=> {\r\n      //quitar el token del localStorage\r\n      localStorage.setItem('jwtToken', res.data.token)\r\n      axios.defaults.headers.common['Authorization'] =  'Bearer'+res.data.token\r\n    })\r\n    .catch(err=>{\r\n      localStorage.removeItem('jwtToken')\r\n      if (err.response.status === 401) {\r\n        let message = \"Error validating your credentials\"\r\n        dispatch(errorsIn(message));\r\n      }\r\n      else {\r\n        dispatch(errorsIn(err.response.statusText));\r\n      }\r\n\r\n  })\r\n  \r\n}\r\n\r\nexport default Login","import Login from \"./Login\";\r\nexport default Login;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './DealForm.module.css';\n\nconst DealForm = (props) => {\n  const lead_source = 'Zeus4 WhatsApp';\n \n  return (\n    <div>\n    {props.visible ? \n      <div className={`${styles.DealForm} animate__animated animate__bounceInLeft\"`}>\n        Quick Deal Creation\n        <div class=\"form-row\">\n          <input \n            type=\"hidden\" \n            class=\"form-control\"\n            name=\"account\"\n            value={props.data.Account_Name.id} \n          />\n          <input \n            type=\"hidden\" \n            class=\"form-control\"\n            name=\"contact\"\n            value={props.data.id} \n          />\n          \n          <div class=\"form-group col-md-12\">\n            <label for=\"title\">Deal Name</label>\n              <input \n                type=\"text\" \n                class=\"form-control\"\n                name=\"deal_name\"\n\n              />\n          </div>\n          <div class=\"form-group col-md-12\">\n            <label for=\"title\">Lead Source</label>\n              <input \n                type=\"text\" \n                class=\"form-control\"\n                name=\"lead_source\"\n                value={lead_source} \n                disabled\n                />\n          </div>\n          <div class=\"form-group col-md-12\">\n            <label for=\"title\">Closing Date</label>\n              <input \n                type=\"date\" \n                class=\"form-control\"\n                name=\"closing_date\"\n                />\n          </div>\n          <div class=\"form-group col-md-12\">\n            <label for=\"title\">Description</label>\n              <textarea \n                class=\"form-control\"\n                name=\"description\"\n              ></textarea>\n          </div>\n\n          <button type=\"button\" class=\"btn btn-primary\">Set Deal</button>    \n        </div>\n      </div>\n    :\n    ''}\n    </div>\n  )\n}\n\nDealForm.propTypes = {};\n\nDealForm.defaultProps = {};\n\nexport default DealForm;\n","import { isEmpty } from 'lodash';\r\nimport React, {useState} from 'react';\r\nimport DealForm from '../DealForm/DealForm';\r\nimport './Menuheader.css';\r\n\r\nconst Menuheader = (props) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showDealForm = () => {\r\n    setVisible(true)\r\n  } \r\n\r\n  return (\r\n    <div id=\"left-column\">\r\n      <DealForm visible={visible} data={props.usrAll}/>\r\n      <div class=\"sidebar-notifications\">\r\n        <img src=\"images/notifications.svg\" alt=\"Default img\"/>\r\n          <div class=\"sidebar-notifications-message\">\r\n            <span>Zeus4 WABA</span>\r\n          </div>\r\n      </div>\r\n        \r\n      <div id=\"inner-nav\"></div>\r\n        <div id=\"container\">\r\n          <div id=\"profile\">\r\n            <div id=\"image\">\r\n              <img id=\"profile-photo\" src=\"./images/no-user.jpg\" alt=\"attach\"/>\r\n                <a href=\"daya\"><i class=\"fas fa-pen stroke-transparent\"></i></a>\r\n            </div>\r\n            <p id=\"name\">{props.usrAll.Full_Name}<br />\r\n              <span id=\"email\">{props.usrAll.Email}</span>\r\n            </p>\r\n            <p id=\"designation\">{props.usrAll.Title}<br />\r\n              <span id=\"college\">{props.usrAll.Description}</span>\r\n            </p>\r\n            <p id=\"designation\">LeadSource : {props.usrAll.Lead_Source}</p>\r\n\r\n            <p id=\"designation\">Created Time : {props.usrAll.Created_Time}</p>\r\n            <p id=\"designation\">Last Activity Time : {props.usrAll.Last_Activity_Time}</p>\r\n          \r\n            <p>Type <code>/tpltext </code>to add a WABA Text Template </p>\r\n            <p>Type <code>/tplmedia </code>to add a WABA Media Template </p>\r\n            <p>Type <code>/tplshow </code>to view all templates </p>\r\n            <p>Type <code>/template </code>before template name if you want to send a template </p>\r\n          </div>\r\n\r\n          <div id=\"info-cards\">\r\n            <div class=\"card\">\r\n              <p><i class=\"fas fa-briefcase stroke-transparent\"></i>&nbsp;&nbsp;&nbsp;Account Name</p>\r\n              <a href=\"#\">{!isEmpty(props.usrAll.Account_Name) ? props.usrAll.Account_Name.name : 'No account associated'}</a>\r\n            </div>\r\n            <div class=\"card\">\r\n              <p><i class=\"fas fa-briefcase stroke-transparent\"></i>&nbsp;&nbsp;&nbsp;Contact Data</p>\r\n              <a href=\"#\"><img src='./images/mobile-2.jpg' alt='mobile' /> {props.usrAll.Mobile}</a><br />\r\n              <a href=\"#\"><img src='./images/phone-2.png' alt='mobile' />{props.usrAll.Phone}</a>\r\n            </div>\r\n            <div class=\"card\">\r\n              <p><i class=\"fas fa-briefcase stroke-transparent\"></i>&nbsp;&nbsp;&nbsp;Address Data</p>\r\n              <a href=\"#\"><img src='./images/state-2.png' alt='mobile' />{props.usrAll.State}</a><br />\r\n              <a href=\"#\"><img src='./images/location-2.png' alt='mobile' />{props.usrAll.City}, {props.usrAll.Street}</a>\r\n            </div>\r\n            <div class=\"card\" onClick={showDealForm}>\r\n              <p><i class=\"fas fa-briefcase stroke-transparent\"></i>&nbsp;&nbsp;&nbsp;Set a Deal</p>\r\n            </div>\r\n            \r\n          </div>\r\n      </div>\r\n    </div>\r\n    )\r\n   \r\n  }\r\n\r\nMenuheader.propTypes = {};\r\n\r\nMenuheader.defaultProps = {};\r\n\r\nexport default Menuheader;","import { isObject } from 'lodash';\r\nimport { isEmpty } from 'lodash';\r\nimport { ERROR_IN, \r\n        OWN_MESSAGE_OUT, \r\n        ALL_MSG,\r\n        DELETE_ALL_MSG\r\n    } from '../constants';\r\n\r\n/**\r\n * \r\n * @param {to, message, from, context} payloadSend \r\n * @to string (numeric)\r\n * @message string\r\n * @from string (numeric)\r\n * @context object {message_id: number}\r\n */\r\nexport function addOwnMessage(payloadSend) {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('jwtToken')\r\n        const options = {\r\n            method: `POST`,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer: ${token}`\r\n            },\r\n            body: JSON.stringify(payloadSend)\r\n            \r\n        };\r\n        console.log(\"Sending\", payloadSend)\r\n        return fetch(\"/textmessage\", options)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let response = {...json}\r\n\r\n                if (isObject(response.data)) {\r\n                    //all ok, get whatsapp id\r\n                    const message_id = response.data.messages[0].id;\r\n                    payloadSend.messageID = message_id\r\n                    payloadSend.status = 'success'\r\n                    payloadSend.replyTo = !isEmpty(payloadSend.context) ? payloadSend.context.message_id : ''\r\n\r\n                    dispatch({ type: OWN_MESSAGE_OUT, payload: payloadSend });\r\n                }\r\n                else if (isObject(response.error) && !isEmpty(response.error)){\r\n                    dispatch({type: ERROR_IN, payload: response.error.message});\r\n                    payloadSend.error = response.error.message;\r\n                    dispatch({ type: OWN_MESSAGE_OUT, payload: payloadSend });\r\n                } else if (isObject(response.errors)){\r\n                    dispatch({type: ERROR_IN, payload: response.errors.message});                    \r\n                } else {\r\n                    //aqui debo devolver el objeto de respuesta de whatsapp\r\n                    //buscando capturar el ID de mensaje que envia Whatsapp\r\n                    //que seria el response\r\n                    dispatch({ type: OWN_MESSAGE_OUT, payload: payloadSend });\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                dispatch({type: ERROR_IN, payload: 'Unknown error'});\r\n                console.log('Error action', err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function sendTemplate(payload) {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('jwtToken')\r\n        const options = {\r\n            method: `POST`,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer: ${token}`\r\n            },\r\n            body: JSON.stringify(payload)\r\n            \r\n        };\r\n        return fetch(\"/sendtemplate\", options)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let response = {...json}\r\n                if (isObject(response.data)) {\r\n                    //all ok, get whatsapp id\r\n                    const message_id = response.data.messages[0].id;\r\n                    payload.messageID = message_id\r\n                    payload.message = `Template message: ${payload.template_name}`\r\n                    payload.status = 'success'\r\n                    payload.replyTo = !isEmpty(payload.context) ? payload.context.message_id : ''\r\n                    dispatch({ type: OWN_MESSAGE_OUT, payload: payload });\r\n                }\r\n                else if (isObject(response.error) && !isEmpty(response.error)){\r\n                    dispatch({type: ERROR_IN, payload: response.error.message});\r\n                } else if (isObject(response.errors)){\r\n                    dispatch({type: ERROR_IN, payload: response.errors.message});                    \r\n                } else {\r\n                   console.log(\"SUMATORI\", response)\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                dispatch({type: ERROR_IN, payload: 'Unknown error'});\r\n                console.log('Error action', err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Create a Text Template\r\n * @param {template_name, language, category, template_text, from} payload \r\n * @template_name string (numeric)\r\n * @language string\r\n * @category string (OPT, MARKETING)\r\n * @template_text string\r\n * @from string (numeric)\r\n */\r\nexport function createTemplate(payload) {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('jwtToken')\r\n        const options = {\r\n            method: `POST`,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer: ${token}`\r\n            },\r\n            body: JSON.stringify(payload)\r\n            \r\n        };\r\n        return fetch(\"/createtemplate\", options)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let response = {...json}\r\n                if (isObject(response.data)) {\r\n                    //all ok, get whatsapp id\r\n                    const message_id = response.data.id;\r\n                    dispatch({ type: ERROR_IN, payload: `Template ${message_id} waiting for approving` });\r\n                } else if (isObject(response.error) && !isEmpty(response.error)){\r\n                    dispatch({type: ERROR_IN, payload: response.error.message});\r\n                } else if (isObject(response.errors)){\r\n                    dispatch({type: ERROR_IN, payload: response.errors.message});                    \r\n                } else {\r\n                    //dispatch({ type: OWN_MESSAGE_OUT, payload: payloadSend });\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                dispatch({type: ERROR_IN, payload: 'Unknown error'});\r\n                console.log('Error action', err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {object} payload {from: waba-id-number}\r\n * @returns \r\n *\r\nexport function getTemplates(payload) {\r\n    //return dispatch => {\r\n        const token = localStorage.getItem('jwtToken')\r\n        const options = {\r\n            method: `POST`,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer: ${token}`\r\n            },\r\n            body: JSON.stringify(payload)\r\n            \r\n        };\r\n\r\n        return fetch(\"/gettemplates\", options)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let response = {...json}\r\n                console.log(response)\r\n                if (!isEmpty(response.error)){\r\n                    //dispatch({type: ERROR_IN, payload: response.error.message});\r\n                    //payload.error = response.error.message;\r\n                    //dispatch({ type: OWN_MESSAGE_OUT, payload: payloadSend });\r\n                } else if (isObject(response.errors)){\r\n                    //dispatch({type: ERROR_IN, payload: response.errors.message});                    \r\n                } else {\r\n                    //dispatch({ type: OWN_MESSAGE_OUT, payload: payloadSend });\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                //dispatch({type: ERROR_IN, payload: 'An unknown error occurred when trying to retrieve WhatsApp Templates'});\r\n            })\r\n    //}\r\n}*/\r\n\r\n\r\nexport function addAllMessages(payload) {\r\n    return dispatch => {\r\n        dispatch({ type: ALL_MSG, payload: payload });\r\n    }\r\n}\r\n\r\nexport function deleteAllMessages(payload) {\r\n    return dispatch => {\r\n        dispatch({ type: DELETE_ALL_MSG, payload})\r\n    }\r\n}\r\n\r\nexport function writeError(payload) {\r\n    return dispatch => {\r\n        dispatch({type: ERROR_IN, payload})\r\n    }\r\n}","import React from 'react';\r\nimport { ZOHO } from '../../../vendor/ZSDK';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addAllMessages } from '../../../js/actions/index'\r\nimport { last, isEmpty } from 'lodash';\r\n\r\n\r\nfunction WriteToZohoFromMsg(props) {\r\n    const messages = useSelector(store => store.messages_out)\r\n    const dispatch = useDispatch()\r\n    const last_in_message = last(messages)\r\n\r\n\r\n    const context = !isEmpty(last_in_message.context) ? last_in_message.context.message_id : ''\r\n    \r\n    //set data to insert\r\n    if (last_in_message.message !== '' && last_in_message.message !== null) {\r\n      const data = {'Name': props.user, 'zeus4waba__Whatsapp_From': props.user, \r\n                'zeus4waba__w': `${last_in_message.message}`, \r\n                'zeus4waba__Whatsapp_Status': `${last_in_message.status}`,\r\n                'zeus4waba__Whatsapp_MessageID': `${last_in_message.messageID}`,\r\n                'zeus4waba__ReplyTo': `${last_in_message.replyTo}`  \r\n              }\r\n\r\n\r\n      ZOHO.CRM.API.insertRecord({Entity: 'zeus4waba__Whatsapps', APIData: data})\r\n        .then((dataMessage => {\r\n          const id = dataMessage.data[0].details.id\r\n          //get the record\r\n          ZOHO.CRM.API.getRecord({Entity: 'zeus4waba__Whatsapps', RecordID: id})\r\n            .then((response => {\r\n              dispatch(addAllMessages(response.data));\r\n            }))\r\n        }))\r\n        .catch((e) => console.log(e))\r\n    }\r\n \r\n  return (\r\n    <div>\r\n    </div>\r\n    );\r\n  }\r\n\r\nexport default WriteToZohoFromMsg;\r\n","import React from 'react';\r\nimport { ZOHO } from '../../../vendor/ZSDK';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { writeError } from '../../../js/actions/index'\r\nimport { last, isEmpty } from 'lodash';\r\n\r\n\r\nconst DeleteToZohoMsg = () => {\r\n  const messages = useSelector(store => store.messages_id)\r\n  const dispatch = useDispatch();\r\n\r\n  if (!isEmpty (messages)) {\r\n    const last_id_message = last(messages)\r\n\r\n    if (last_id_message && last_id_message !== '' && last_id_message !== null) {\r\n        ZOHO.CRM.API.deleteRecord({Entity: 'zeus4waba__Whatsapps', RecordID: `${last_id_message}`})\r\n          .then((response => {\r\n            const status = response.data[0].status\r\n            if (status !== 'success') {\r\n              dispatch(writeError(response.data[0].message))\r\n            }\r\n          }))\r\n     \r\n    }\r\n  }\r\n};\r\n\r\nexport default DeleteToZohoMsg;\r\n","import { useDispatch } from 'react-redux';\r\nimport { addAllMessages } from '../../../js/actions/index'\r\nimport { orderBy } from 'lodash';\r\n\r\n\r\nconst LoadAllMsgs = (props) => {\r\n  const dispatch = useDispatch()\r\n\r\n  let data = orderBy(props.messages, ['Created_Time'], ['asc']);\r\n  dispatch(addAllMessages(data));\r\n}\r\n\r\nexport default LoadAllMsgs;\r\n\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { find, isEmpty } from 'lodash';\r\nimport { deleteAllMessages } from '../../../js/actions/index'\r\nimport styles from './WriteAllMsgs.module.css'\r\n\r\n\r\nconst WriteAllMsgs = (props) => {\r\n  const all_messages = useSelector(store => store.all_msgs)\r\n  const dispatch = useDispatch();\r\n\r\n  const setParams = (idMsg, message) => {\r\n    props.handlerReply(idMsg, message)\r\n  }\r\n\r\n  const selectMessage = (idMsg) => {\r\n    if (idMsg !== null) {\r\n      const message_reply = all_messages.filter(function (el) {\r\n        //esta es la linea correcta, cuando recupere el ID del msg desde Whatsapp \r\n        //y lo agregue aqui\r\n        return el.zeus4waba__Whatsapp_MessageID === idMsg;\r\n        //return el.id === idMsg;\r\n      })[0]\r\n      if (!isEmpty(message_reply))\r\n        return (`${message_reply.Created_Time.substr(0, 17)}:  ${message_reply.zeus4waba__w.substr(0,50)}`)\r\n    }\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {all_messages.map(msg => (\r\n        \r\n        (msg.zeus4waba__w !== null && msg.zeus4waba__w !== '') \r\n        ?\r\n          <div class={msg.zeus4waba__Whatsapp_To !== null ? 'receiver' : 'sender'}>\r\n            {msg.zeus4waba__ReplyTo !== null ? <div className={styles.receiverMessageReply}>{selectMessage(msg.zeus4waba__ReplyTo)}...</div> : '' }           <span class=\"receiver-message\">{msg.zeus4waba__w} </span>\r\n            <span className={styles.alignRight} onClick={() => dispatch(deleteAllMessages(msg.id))}><img src=\"./images/delete_message-2.jpg\" alt=\"attach\" /></span>\r\n            <span className={styles.alignRight} onClick={() => setParams(msg.zeus4waba__Whatsapp_MessageID, msg.zeus4waba__w)} ><img src=\"./images/reply.png\" alt=\"attach\" /></span>\r\n                { msg.zeus4waba__Whatsapp_Status === 'success' ? \r\n                (\r\n                  <span class=\"message-status\"><img src=\"./images/double-check-seen.svg\" alt=\"attach\" /></span>\r\n                ) \r\n                : \r\n                (\r\n                  <span class=\"align-right\"><img src=\"./images/error.png\" alt=\"attach\" /></span>\r\n                )}  \r\n                <span class=\"message-time align-right\">{msg.Created_Time}</span>\r\n\r\n          </div>\r\n            \r\n        :\r\n          ''\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WriteAllMsgs;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'animate.css';\r\nimport './Error.css'\r\n\r\nconst mapStateToProps = state => {\r\n  return { errors_in: state.errors_in }\r\n}\r\n\r\nexport class ErrorComponent extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        {this.props.errors_in.map(post => (\r\n          <div class='padre animate__animated animate__bounceOutRight animate__delay-4s'>\r\n        \r\n         \r\n            <div >{post}</div>\r\n          \r\n       \r\n      </div>\r\n      ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst connected = connect(mapStateToProps)(ErrorComponent);\r\nexport default connected;\r\n","import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {createTemplate} from '../../../js/actions/index';\r\nimport './WTemplate.css';\r\n\r\nconst WTemplate = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState({\r\n                            visible: props.visible,\r\n                            title: '',\r\n                            language: 'en_US',\r\n                            category: 'MARKETING',\r\n                            message_text: ''\r\n                          })\r\n\r\n  const handleInputChange = (event) => {\r\n    setData({\r\n      ...data,\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    const object = {\r\n      template_name: data.title,\r\n      language: data.language,\r\n      category: data.category,\r\n      template_text: data.message_text,\r\n      waba_id: props.wabaId\r\n\r\n    }\r\n    dispatch(createTemplate({ ...object}))\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.visible ? \r\n        <div class=\"superior-text animate__animated animate__bounceInRight\">\r\n            <h3>Text Template</h3>\r\n            <div class=\"form-row\">\r\n              <div class=\"form-group col-md-6\">\r\n                <label for=\"title\">Title</label>\r\n                <input \r\n                    type=\"text\" \r\n                    class=\"form-control\"\r\n                    name=\"title\"\r\n                    placeholder=\"Template Title\"\r\n                    onChange={handleInputChange} />\r\n              </div>  \r\n              <div class=\"form-group col-md-6\">\r\n                <label for=\"language\">Language</label>\r\n                <select name=\"language\" class=\"form-control\" onChange={handleInputChange}>\r\n                  <option selected>Choose...</option>\r\n                  <option value='en_US'>US</option>\r\n                  <option value='es_ES'>ES</option>\r\n                </select>    \r\n              </div>\r\n              <div class=\"form-group col-md-6\">\r\n                <label for=\"category\">Category</label>\r\n                <select name=\"category\" class=\"form-control\" onChange={handleInputChange}>\r\n                  <option selected>Choose...</option>\r\n                  <option value='TRANSACTIONAL'>Transactional</option>\r\n                  <option value='MARKETING'>Marketing</option>\r\n                  <option value='OTP'>OTP</option>\r\n                </select>    \r\n              </div>\r\n\r\n              <div class=\"form-group col-md-6\">\r\n                <label for=\"TemplateText\">Template Text</label>\r\n                <textarea \r\n                      class=\"form-control\"\r\n                      placeholder=\"Template plain text\"\r\n                      name=\"message_text\"\r\n                      onChange={handleInputChange}      \r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <button type=\"submit\" class=\"btn btn-primary\" onClick={handleSubmit}>Send Template</button>\r\n      </div>\r\n\r\n      :\r\n\r\n      <div></div>\r\n      }\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nexport default WTemplate;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './WMediaTemplate.css';\r\n\r\n\r\nclass WMediaTemplate extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { \r\n      visible: this.props.visible\r\n    }\r\n  }\r\n\r\n  /*setParams = () => {\r\n    this.props.handler(false)\r\n  }*/\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n      {this.props.visible ? \r\n        <div class=\"superior-text animate__animated animate__bounceInRight\">\r\n            <h3>Media Template</h3>\r\n            <p>Working on it....</p>\r\n        </div>\r\n\r\n      :\r\n\r\n      <div></div>\r\n      }\r\n      </div>\r\n\r\n\r\n      \r\n  \r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nWMediaTemplate.propTypes = {};\r\n\r\nWMediaTemplate.defaultProps = {};\r\n\r\nexport default WMediaTemplate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './WriteWTemplates.module.css';\r\nimport { isEmpty } from 'lodash';\r\n\r\nconst WriteWTemplates = (props) => {\r\n  //pass data-template to parent\r\n  const setParams = (e) => {\r\n    const temp = e.target.dataset.template;\r\n    const language = e.target.dataset.language;\r\n    const message = e.target.dataset.message;\r\n    props.handler(temp, language, message)\r\n  }\r\n\r\n  const disComponent = (component) => {\r\n    return (\r\n      component.map(comp => (\r\n        comp.text\r\n      ))\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div data-testid=\"WriteWTemplates\" className={styles.WriteWTemplates}>\r\n      <table className={styles.styledTable}>\r\n        <thead>\r\n          <tr><td>Name</td><td>Status</td><td>Language</td><td>Component</td></tr>\r\n        </thead>\r\n          <tbody>\r\n            {!isEmpty(props.templates) \r\n              ? \r\n                props.templates.map(post => (\r\n                  <tr>\r\n                    <td class='cursor-hand' onClick={setParams} data-template={post['name']} data-language={post['language']} data-message={disComponent(post['components'])}>{post['name']}</td>\r\n                    <td> {post['status']}</td>\r\n                    <td> {post['language']} </td>\r\n                    <td>{disComponent(post['components'])}</td>\r\n                  </tr>\r\n                ))\r\n              :\r\n              \r\n              <div></div>\r\n                \r\n            }\r\n          </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default WriteWTemplates;","import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './WTemplateBoard.module.css';\r\nimport WriteWTemplates from '../WriteWTemplates/WriteWTemplates';\r\nimport { ERROR_IN, \r\n  OWN_MESSAGE_OUT, \r\n  ALL_MSG,\r\n  DELETE_ALL_MSG\r\n} from '../../../js/constants/index.js';\r\nimport { isEmpty, isObject } from 'lodash';\r\n\r\n\r\nconst WTemplateBoard = (props) => {\r\n  const dispatch = useDispatch();\r\n  const[rr, setRr] = useState('')\r\n\r\n  const getTemplates = (payload) => {\r\n    //const rr = dispatch(getTemplates({from: props.wabaid}))\r\n    const token = localStorage.getItem('jwtToken')\r\n        const options = {\r\n            method: `POST`,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer: ${token}`\r\n            },\r\n            body: JSON.stringify({ from: props.wabaId })\r\n            \r\n        };\r\n\r\n        return fetch(\"/gettemplates\", options)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let response = {...json}\r\n                if (isObject(response.data)) {\r\n                  //all ok\r\n                  setRr(response.data.data)\r\n                } else if (!isEmpty(response.error)){\r\n                    dispatch({type: ERROR_IN, payload: response.error.message});\r\n                    //payload.error = response.error.message;\r\n                    //dispatch({ type: OWN_MESSAGE_OUT, payload: payloadSend });\r\n                } else if (isObject(response.errors)){\r\n                    dispatch({type: ERROR_IN, payload: response.errors.message});                    \r\n                } else {\r\n                    //dispatch({ type: OWN_MESSAGE_OUT, payload: payloadSend });\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch({type: ERROR_IN, payload: 'An unknown error occurred when trying to retrieve WhatsApp Templates'});\r\n            })\r\n  }\r\n\r\n  // Handler\r\n  const handler = (template, language, message) => {\r\n    props.handlerTemp(template, language, message)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.visible ? \r\n        <div class=\"superior-text animate__animated animate__bounceInRight\">\r\n            <h3>Template Board</h3>\r\n            <button onClick={getTemplates}>Get Templates</button>\r\n            <div>\r\n            <WriteWTemplates handler={handler} templates={rr}/>\r\n            </div>\r\n        </div>\r\n      :\r\n      <div></div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WTemplateBoard;\r\n","import React from 'react';\r\nimport styles from './ShowReplyMsg.module.css';\r\n\r\nconst ShowReplyMsg = (props) => {\r\n\r\n  const hideShowReply = () => {\r\n    props.handlerVisibility()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.visible ? \r\n        <div className={`${styles.messageReply} animate__animated animate__fadeInUp`}>\r\n            <div onClick={hideShowReply}>{props.message.substr(0,40)} ...</div>\r\n        </div>\r\n\r\n      :\r\n\r\n      <div></div>\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default ShowReplyMsg;","import React from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addOwnMessage, sendTemplate } from '../../js/actions/index'\r\nimport { errorsIn } from \"../../js/actions/errors\";\r\nimport \"./Board.css\";\r\nimport { isEmpty } from 'lodash';\r\nimport WriteAllMsgs from \"../Writers/WriteAllMsgs/WriteAllMsgs\";\r\nimport Error from '../Error/Error';\r\nimport WTemplate from '../WTemplates/WTemplate/WTemplate';\r\nimport WMediaTemplate from \"../WTemplates/WMediaTemplate/WMediaTemplate\";\r\nimport WTemplateBoard from \"../WTemplates/WTemplateBoard/WTemplateBoard\";\r\nimport ShowReplyMsg from \"../ShowReplyMsg/ShowReplyMsg\";\r\n\r\nconst BoardComponent = (props) => {\r\n    const messages_in = useSelector(store => store.messages_in);\r\n    const dispatch = useDispatch();\r\n\r\n    const [message, setMessage] = React.useState('');\r\n    const [messageReply, setMessageReply] = React.useState('');\r\n    const [mobileTo, setMobileTo] = React.useState('');\r\n    const [showTextTemplateForm, setTextTplForm] = React.useState(false);\r\n    const [showMediaTemplateForm, setMediaTplForm] = React.useState(false);\r\n    const [showAllTemplates, setAllTemplates] = React.useState(false);\r\n    const [context, setContext] = React.useState({});\r\n    const [showReplyMsgView, setMsgReplyView] = React.useState(false);\r\n    const [template_board, setTemplateBoard] = React.useState('');\r\n\r\n    const handleMessage = (event) => {\r\n        setMessage(event.target.value )\r\n        setTextTplForm(false)\r\n        let value = event.target.value;\r\n    \r\n        switch (value) {\r\n          case '/tpltext':\r\n            setTextTplForm(true);\r\n            break;\r\n          case '/tplmedia':\r\n            setMediaTplForm(true);\r\n            break;\r\n          case '/tplshow':\r\n            console.log(\"WabaId\", props.wabaId)\r\n            setAllTemplates(true);\r\n            break;\r\n          default:\r\n            setTextTplForm(false)\r\n            setMediaTplForm(false)\r\n            setAllTemplates(false)\r\n            break;\r\n        }\r\n    \r\n        \r\n    }\r\n    \r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (isEmpty(props.mobile)) {\r\n            dispatch(errorsIn(\"No mobile detected in this contact\"))\r\n            return\r\n        }\r\n            \r\n        if (message !== '') {\r\n          if (messageRouter()) {\r\n            const data = {\r\n              to: props.mobile, message: message, from: props.whatsappId         \r\n            }\r\n\r\n            if (!isEmpty(context))\r\n              data.context = context;\r\n            \r\n            \r\n            dispatch(addOwnMessage(data))\r\n            setMessage('');\r\n            setMsgReplyView(false);\r\n            setContext({});\r\n            setMessageReply('');\r\n\r\n          }\r\n        }\r\n    }\r\n\r\n\r\n    const messageRouter = () => {\r\n      if (message.indexOf('/template') === 0) {\r\n        //get template name from input /template template_name\r\n        const input_name = message.split(\" \")\r\n        const template_name = input_name[1];\r\n        const template_language = input_name[2];\r\n        let template_message = {\r\n          \"to\":props.mobile, \r\n          \"template_name\": `${template_name}`, \r\n          \"language\":`${template_language}`, \r\n          \"from\": props.whatsappId\r\n        }\r\n\r\n\r\n        const parameters = input_name[3]\r\n        if (parameters) {\r\n          template_message.components = [{ \"type\": \"body\"}]\r\n          template_message.components[0]['parameters'] = [];\r\n          const parameters_texts = parameters.split(\",\");\r\n          let arr = []\r\n          parameters_texts.map(function(k, v) {\r\n            template_message.components[0]['parameters'].push({\"type\": \"text\", \"text\": `${k}`})\r\n          })\r\n          //Object.assign(template_message.components.parameters, arr)\r\n          //parameters.map\r\n        }\r\n\r\n        console.log(template_message)\r\n        dispatch(sendTemplate(template_message))\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n\r\n    const handleTemplate = (tmp, language, message) => {\r\n      setTemplateBoard(tmp)\r\n      let messageText = `/template ${tmp} ${language}`;\r\n      //find parameters\r\n      const extract_parameters = checkForParameters(message, '{{')\r\n      if (extract_parameters && extract_parameters !== null) {\r\n        messageText += ` ${extract_parameters}`\r\n        //messageText += ` ${extract_parameters}`.substring(0, extract_parameters.length - 1);\r\n      }\r\n      setMessage(`${messageText}`)\r\n      setAllTemplates(false)\r\n    }\r\n\r\n\r\n    \r\n\r\n    const checkForParameters = (cadena, parameter) => {\r\n      const strArr = cadena.split(\" \");\r\n      const res = [];\r\n      for(let i = 0; i < strArr.length; i++){\r\n          console.log(strArr[i])\r\n            if(strArr[i].includes(`${parameter}`)){\r\n                res.push(`param`);\r\n            };\r\n      };\r\n      return res.join(\",\");\r\n\r\n   }\r\n  \r\n    //Ver como sustituir esto\r\n    //empty reply state when child says\r\n    const emptyShowReply = () => {\r\n      setContext({});\r\n      setMessageReply('');\r\n      setMsgReplyView(false)\r\n    }\r\n\r\n    //writeallmsg callback function\r\n    //set the id of msg to reply\r\n    const handleReplyMsg = (idMsg, message) => {\r\n      setContext({'message_id': idMsg});\r\n      setMessageReply(message);\r\n      setMsgReplyView(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div id='columna2' class=\"main\">\r\n          <div class=\"chat-window\">\r\n            <WTemplateBoard handlerTemp={handleTemplate} visible={showAllTemplates} wabaId={props.wabaId} />\r\n            <WTemplate visible={showTextTemplateForm} wabaId={props.wabaId} />\r\n            <WMediaTemplate visible={showMediaTemplateForm} />\r\n            <Error />\r\n            <WriteAllMsgs handlerReply={handleReplyMsg} /> \r\n            <ShowReplyMsg handlerVisibility={emptyShowReply} visible={showReplyMsgView} message={messageReply} />        \r\n          </div>\r\n          \r\n          <div class=\"type-message-bar\">\r\n            <div class=\"type-message-bar-center\">\r\n              <input\r\n                    type=\"text\"\r\n                    name=\"\"\r\n                    id=\"comment\"\r\n                    placeholder=\"Send a message\"\r\n                    value={message}\r\n                    onChange={handleMessage}\r\n              />\r\n            </div>\r\n            <div class=\"type-message-bar-right\">\r\n              <img src=\"images/whatsapp-send-1.png\" alt=\"Send\" onClick={handleSubmit}/>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default BoardComponent\r\n//            <WTemplateBoard handlerTemp={handleTemplate} visible={showAllTemplates} wabaId={props.wabaId} />\r\n","import React, { useEffect } from 'react';\r\nimport { ZOHO } from '../../vendor/ZSDK';\r\nimport Menuheader from '../Menuheader/Menuheader';\r\nimport WriteToZohoFromMsg from '../Zohos/WriteToZohoFromMsg/WriteToZohoFromMsg';\r\nimport DeleteToZohoMsg from '../Zohos/DeleteToZohoMsg/DeleteToZohoMsg';\r\nimport LoadAllMsgs from '../Loaders/LoadAllMsgs/LoadAllMsgs';\r\nimport Board from '../Board/Board';\r\nimport './Zoho.css';\r\n\r\nfunction App() {\r\n\r\n  const [userAll, setUsr] = React.useState('');\r\n  const [allMessages, getAllMessages] = React.useState('');\r\n  const [userId, getUserId] = React.useState('');\r\n  const [entity, getEntity] = React.useState('');\r\n  const [mobile, getMobile] = React.useState('');\r\n  const [mobileFromId, getWhatsAppID] = React.useState(0);\r\n  const [wabaId, getWabaID] = React.useState(null);\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  const [error, setError] = React.useState(null);\r\n\r\n  \r\n  useEffect(() => {\r\n    \r\n    async function init() {\r\n      await ZOHO.embeddedApp.on(\"PageLoad\",function(data) {\r\n        //Custom Bussiness logic goes here\r\n        let entity = data.Entity;\r\n        let recordID = data.EntityId;\r\n        getEntity(entity);\r\n        getUserId(recordID.toString())\r\n        // Set data we want from CRM into props\r\n        ZOHO.CRM.API.getRecord({Entity:entity,RecordID:recordID})\r\n          .then((data) => { \r\n            getMobile(data.data[0]['Mobile'])\r\n            setUsr(data.data[0]);\r\n              \r\n          })\r\n          .then(() => {\r\n            //select pre messages\r\n            ZOHO.CRM.API.searchRecord({Entity: 'zeus4waba__Whatsapps', sort_order:\"asc\", Type:\"criteria\",Query:`(Name:equals:${recordID})`})\r\n              .then((dataMessage => {\r\n                getAllMessages(dataMessage.data)\r\n                setIsLoaded(true);\r\n              }))\r\n          })\r\n          .catch((e) => console.log(e))\r\n    \r\n          ZOHO.CRM.API.getOrgVariable(\"zeus4waba__WhatsAppBFrom\")\r\n            .then(function(data){\r\n              getWhatsAppID(data.Success.Content);\r\n            });\r\n\r\n          ZOHO.CRM.API.getOrgVariable(\"zeus4waba__WabaID\")\r\n            .then(function(data){\r\n              getWabaID(data.Success.Content);\r\n            });\r\n        })\r\n       \r\n        return await ZOHO.embeddedApp.init();\r\n      }\r\n    \r\n    init();\r\n      \r\n}, [mobile])\r\n\r\nconst ContentLoader = () =>{\r\n  // handle rendering conditionally based on AJAX response\r\n  if (error) {\r\n      // API Data Error State: render the error state\r\n    return (\r\n        <div>Error</div>\r\n    )\r\n\r\n  } else if (!isLoaded) {\r\n    // API Data Not Loaded: render the loading progress spinner\r\n    return (\r\n        <div className='contenedor'>\r\n        <div className='contenido'> </div>\r\n    </div>\r\n    )\r\n  } else {\r\n    // API Data Loaded Succesfully: \r\n    // render the completed interface with data loaded, triggered by the state update of isLoaded and !error (no error)\r\n    return (\r\n        <div>\r\n          <Board mobile={mobile} entity={entity} whatsappId={mobileFromId} wabaId={wabaId} />\r\n          <Menuheader usrAll={userAll} />\r\n          <LoadAllMsgs messages={allMessages}/>\r\n          <WriteToZohoFromMsg user={userId}/>\r\n          <DeleteToZohoMsg />\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\n\r\nreturn (\r\n  <div>\r\n    {ContentLoader()} \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Login from './components/Login';\r\nimport ZohoApp from './components/Zoho/Zoho';\r\n\r\nconst App = ()=> {\r\n     \r\n  return (\r\n    <div className=\"App\">\r\n      <ZohoApp />\r\n      <Login/>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { OWN_MESSAGE_OUT, \r\n        ERROR_IN, \r\n        ALL_MSG,\r\n        DELETE_ALL_MSG\r\n      } from \"../constants/index\";\r\n\r\nconst initialState = {\r\n  articles: [],\r\n  messages_out: [{mobile: '', message: ''}],\r\n  errors_in: [],\r\n  messages_id: [],\r\n  all_msgs: []\r\n};\r\n\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch(action.type)  {\r\n    case OWN_MESSAGE_OUT: {\r\n      return Object.assign({}, state, {\r\n        messages_out: state.messages_out.concat(action.payload)\r\n      });\r\n    }\r\n\r\n    case ERROR_IN: {\r\n      return Object.assign({}, state, {\r\n        errors_in: state.errors_in.concat(action.payload)\r\n      });\r\n    }\r\n\r\n    case ALL_MSG: {\r\n      return Object.assign({}, state, {\r\n        all_msgs: state.all_msgs.concat(action.payload)\r\n      });\r\n    }\r\n\r\n    case DELETE_ALL_MSG: {\r\n      const byId = action.payload\r\n      return {\r\n        ...state,\r\n        all_msgs: state.all_msgs.filter(msg => msg.id !== byId),\r\n        messages_id: state.messages_id.concat(byId)\r\n      }\r\n    }\r\n      \r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport default rootReducer;\r\n","\r\nconst initialState = {\r\n  errors: [],\r\n};\r\n\r\n\r\nfunction errorReducer(state = initialState, action) {\r\n  switch(action.type)  {\r\n    case 'ERROR_IN': {\r\n      return Object.assign({}, state, {\r\n        errors: state.errors.concat(action.payload)\r\n      });\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport default errorReducer;\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nimport errorReducer from '../reducers/errors';\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    storeEnhancers(applyMiddleware(thunk)),\r\n    //applyMiddleware(forbiddenDataUrl)\r\n  );\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./js/store/index\";\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alignRight\":\"WriteAllMsgs_alignRight__uB5c7\",\"receiverMessageReply\":\"WriteAllMsgs_receiverMessageReply__3Impw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WriteWTemplates\":\"WriteWTemplates_WriteWTemplates__3hj_0\",\"styledTable\":\"WriteWTemplates_styledTable__3Z7wH\",\"active-row\":\"WriteWTemplates_active-row__1mZ36\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DealForm\":\"DealForm_DealForm__NdGes\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageReply\":\"ShowReplyMsg_messageReply__1xacO\"};","/* eslint-disable */\r\nimport * as $ from 'jquery'\r\n\r\nconst ZSDKUtil = (function (ZSDKUtil) {\r\n    const QueryParams = GetQueryParams()\r\n\r\n    // Global Logger instance which will be acquired and shared by other modules.\r\n    let GlobalLogger\r\n\r\n    // minimal Logging utility.\r\n    function ZLogger (mode) {}\r\n    ZLogger.prototype.Info = function () {\r\n        if (ZSDKUtil.isDevMode() || ZSDKUtil.isLogEnabled()) {\r\n            window.console.info.apply(null, arguments)\r\n        }\r\n    }\r\n    ZLogger.prototype.Error = function () {\r\n        if (ZSDKUtil.isDevMode() || ZSDKUtil.isLogEnabled()) {\r\n            window.console.error.apply(null, arguments)\r\n        }\r\n    }\r\n    function getLogger () {\r\n        if (!GlobalLogger || !(GlobalLogger instanceof ZLogger)) {\r\n            GlobalLogger = new ZLogger() // Logging instance for Core Framework\r\n        }\r\n\r\n        return GlobalLogger\r\n    }\r\n\r\n    function GetQueryParams (URL) {\r\n    // TODO: Handle hash case too.\r\n        const qParams = {}\r\n        URL = URL || window.location.href\r\n        const splittedParams = URL.substr(URL.indexOf('?') + 1).split('&')\r\n        splittedParams.forEach(function (ele, idx) {\r\n            const miniSplit = ele.split('=')\r\n            qParams[miniSplit[0]] = miniSplit[1]\r\n        })\r\n\r\n        // decoding serviceOrigin URL\r\n        if (qParams.hasOwnProperty('serviceOrigin')) {\r\n            qParams.serviceOrigin = decodeURIComponent(qParams.serviceOrigin)\r\n        }\r\n\r\n        return qParams\r\n    }\r\n    function isDevMode () {\r\n        return QueryParams && QueryParams.isDevMode\r\n    }\r\n    function isLogEnabled () {\r\n        return QueryParams && QueryParams.isLogEnabled\r\n    }\r\n\r\n    // Sleep\r\n    function Sleep (milliSeconds) {\r\n        const startTime = new Date().getTime()\r\n        while ((startTime + milliSeconds) > new Date().getTime()) {}\r\n    }\r\n    ZSDKUtil.GetQueryParams = GetQueryParams\r\n    ZSDKUtil.isDevMode = isDevMode\r\n    ZSDKUtil.isLogEnabled = isLogEnabled\r\n    ZSDKUtil.getLogger = getLogger\r\n    ZSDKUtil.Sleep = Sleep\r\n\r\n    return ZSDKUtil\r\n})(window.ZSDKUtil || {})\r\n\r\nconst ZSDKMessageManager = (function (ZSDKMessageManager) {\r\n    let SDKContext\r\n    const Logger = ZSDKUtil.getLogger()\r\n    const defaultPromiseTimeout = 10000 // Promise timeout\r\n    let promiseIDCtr = 100\r\n    const PromiseQueue = {} // Queue holding all the GetRequest promises\r\n\r\n    const AllowedOrigins = new RegExp('^https?:\\/\\/[a-zA-Z0-9-_]*.(sandbox.crm-oem.com|csez.zohocorpin.com|zoho.com|zoho.eu|zohoplatform.com|zohosandbox.com)(:[0-9]{0,4})?$')\r\n\r\n    let AuthParentWindow; let AuthParentOrigin\r\n\r\n    function Init (ctx, config) { // Config is for future use\r\n        if (!ctx || typeof ctx !== 'object') {\r\n            throw Error('Invalid Context object passed')\r\n        }\r\n        if (config && typeof config !== 'object') {\r\n            throw Error('Invalid Configuration Passed to MessageManager')\r\n        }\r\n\r\n        SDKContext = ctx\r\n\r\n        return MessageHandler.bind(ZSDKMessageManager)\r\n    }\r\n\r\n    // Authorization Check in SDK side.\r\n    function isAuthorizedMessage (MEvent) {\r\n        const incomingSource = MEvent.source\r\n        const incomingOrigin = MEvent.origin\r\n\r\n        if (SDKContext.isAppRegistered() && AuthParentWindow === incomingSource && AuthParentOrigin === incomingOrigin) {\r\n            return true\r\n        }\r\n\r\n        return new Error('Un-Authorized Message.')\r\n    }\r\n    function MessageHandler (MessageEvent) {\r\n    /* Added for backward compatibility support */\r\n        try {\r\n            var data = typeof MessageEvent.data === 'string' ? JSON.parse(MessageEvent.data) : MessageEvent.data\r\n        } catch (e) {\r\n            var data = MessageEvent.data\r\n        }\r\n        const messageType = data.type\r\n        const eventName = data.eventName\r\n\r\n        try {\r\n            if (eventName === 'SET_CONTEXT' || isAuthorizedMessage(MessageEvent)) {\r\n                switch (messageType) {\r\n                case 'FRAMEWORK.EVENT':\r\n                    HandleEvent(MessageEvent, data)\r\n                    break\r\n\r\n                default:\r\n                    SDKContext.MessageInterceptor(MessageEvent, data) // Future Use.\r\n                    break\r\n                }\r\n            }\r\n        } catch (e) {\r\n            Logger.Error('[SDK.MessageHandler] => ', e.stack)\r\n        }\r\n    }\r\n\r\n    function HandleEvent (MessageEvent, payload) {\r\n        const data = payload.data\r\n        const eventName = payload.eventName\r\n\r\n        const eventHandlers = {\r\n            SET_CONTEXT: HandleSetContext,\r\n            UPDATE_CONTEXT: HandleUpdateContext,\r\n            EVENT_RESPONSE: HandleEventResponse,\r\n            EVENT_RESPONSE_FAILURE: HandleEventFailure\r\n        }\r\n\r\n        const eventHandler = eventHandlers[eventName]\r\n        if (eventHandler && typeof eventHandler === 'function') {\r\n            eventHandler(MessageEvent, payload)\r\n        } else {\r\n            HandleCustomEvent(MessageEvent, payload)\r\n        }\r\n    }\r\n    function HandleSetContext (MessageEvent, payload) {\r\n        const parentOrigin = MessageEvent.origin\r\n        AuthParentWindow = window.parent // MessageEvent.source;\r\n        AuthParentOrigin = SDKContext.QueryParams.serviceOrigin // parentOrigin;\r\n\r\n        SDKContext.SetContext(payload.data)\r\n        SDKContext.ExecuteLoadHandler()\r\n    }\r\n    function HandleUpdateContext (MessageEvent, payload) {\r\n    // SDKContext.UpdateContext(payload.data);\r\n    // SDKContext.ExecuteLoadHandler();\r\n    }\r\n    function HandleCustomEvent (MessageEvent, payload) {\r\n        ZSDKEventManager.NotifyEventListeners(SDKContext.AppContext, payload.eventName, payload.data)\r\n    }\r\n\r\n    function HandleEventResponse (MessageEvent, payload) {\r\n        const promiseID = payload.promiseid\r\n        const response = payload.data\r\n        HandlePromiseCallback(promiseID, true, response)\r\n    }\r\n    function HandleEventFailure (MessageEvent, payload) {\r\n        const promiseID = payload.promiseid\r\n        const response = payload.data\r\n        HandlePromiseCallback(promiseID, false, response)\r\n    }\r\n    function HandlePromiseCallback (promiseID, isSuccess, response) {\r\n        if (PromiseQueue.hasOwnProperty(promiseID)) {\r\n            if (isSuccess) {\r\n                PromiseQueue[promiseID].resolve(response)\r\n            } else {\r\n                PromiseQueue[promiseID].reject(response)\r\n            }\r\n\r\n            PromiseQueue[promiseID] = undefined\r\n            delete PromiseQueue[promiseID]\r\n        } else {\r\n            // TODO: Handle if there is no promiseID present\r\n        }\r\n    }\r\n    function SendRequest (options) {\r\n        if (!options || typeof options !== 'object') {\r\n            throw new Error('Invalid Options passed')\r\n        }\r\n\r\n        return SendEvent('HTTP_REQUEST', options, true)\r\n    }\r\n    function TriggerEvent (eventName, payload, isPromiseEvent) {\r\n        if (!eventName) {\r\n            throw new Error('Invalid Eventname : ', eventName)\r\n        }\r\n\r\n        const PromiseID = isPromiseEvent ? getNextPromiseID() : undefined\r\n        const eventObject = {\r\n            /* Default Event Props */\r\n            type: 'SDK.EVENT',\r\n            eventName: eventName,\r\n            uniqueID: SDKContext.getUniqueID(),\r\n            time: new Date().getTime(),\r\n            promiseid: PromiseID,\r\n\r\n            /* User data */\r\n            data: payload\r\n        }\r\n\r\n        PostMessage(eventObject)\r\n\r\n        if (isPromiseEvent) {\r\n            return AddToPromiseQueue(PromiseID)\r\n        }\r\n    }\r\n\r\n    // Sends the event to the Framework.\r\n    function SendEvent (eventName, payload, isPromiseEvent) {\r\n        if (!eventName) {\r\n            throw new Error('Invalid Eventname : ', eventName)\r\n        }\r\n\r\n        const PromiseID = isPromiseEvent ? getNextPromiseID() : undefined\r\n        const eventObject = {\r\n            /* Default Event Props */\r\n            type: 'SDK.EVENT',\r\n            eventName: eventName,\r\n            uniqueID: SDKContext.getUniqueID(),\r\n            time: new Date().getTime(),\r\n            promiseid: PromiseID,\r\n\r\n            /* User data */\r\n            data: payload\r\n        }\r\n\r\n        PostMessage(eventObject)\r\n\r\n        if (isPromiseEvent) {\r\n            return AddToPromiseQueue(PromiseID)\r\n        }\r\n    }\r\n    function getNextPromiseID () {\r\n        return 'Promise' + promiseIDCtr++\r\n    }\r\n    function AddToPromiseQueue (promiseID) {\r\n        const promise = new Promise(function (resolve, reject) {\r\n            // Adding the promise to queue.\r\n            PromiseQueue[promiseID] = {\r\n                resolve: resolve,\r\n                reject: reject,\r\n                time: new Date().getTime()\r\n            }\r\n        })\r\n\r\n        /*\r\n     * Currently the Timeout case is disabled. Need to revisit.\r\n    setTimeout(function () {\r\n      if (PromiseQueue.hasOwnProperty(PromiseId)) {\r\n\r\n        PromiseQueue[PromiseId].reject('timeout'); // TODO: Better timeout message.\r\n        delete PromiseQueue[PromiseId];\r\n\r\n      }\r\n    }, defaultPromiseTimeout); // Have to define as common config props\r\n    */\r\n\r\n        return promise\r\n    }\r\n\r\n    function RegisterApp () {\r\n        const registerSDKClient = {\r\n            type: 'SDK.EVENT',\r\n            eventName: 'REGISTER',\r\n            appOrigin: encodeURIComponent(getCurrentURLPath())\r\n        }\r\n\r\n        // Initiating the Client Handshake\r\n        window.parent.postMessage(registerSDKClient, SDKContext.QueryParams.serviceOrigin)\r\n    }\r\n    function DERegisterApp () {\r\n        const deRegisterSDKClient = {\r\n            type: 'SDK.EVENT',\r\n            eventName: 'DEREGISTER',\r\n            uniqueID: SDKContext.getUniqueID()\r\n        }\r\n\r\n        PostMessage(deRegisterSDKClient)\r\n    }\r\n\r\n    // Helpers\r\n    function PostMessage (data) {\r\n        if (typeof data === 'object') {\r\n            data.appOrigin = encodeURIComponent(getCurrentURLPath())\r\n        }\r\n\r\n        if (!AuthParentWindow) {\r\n            throw new Error('Parentwindow reference not found.')\r\n        }\r\n        AuthParentWindow.postMessage(data, SDKContext.QueryParams.serviceOrigin)\r\n    }\r\n    function getCurrentURLPath () {\r\n        return window.location.protocol + '//' + window.location.host + window.location.pathname\r\n    }\r\n    ZSDKMessageManager.Init = Init\r\n    ZSDKMessageManager.RegisterApp = RegisterApp\r\n    ZSDKMessageManager.DERegisterApp = DERegisterApp\r\n\r\n    ZSDKMessageManager.SendRequest = SendRequest\r\n    ZSDKMessageManager.TriggerEvent = TriggerEvent\r\n\r\n    return ZSDKMessageManager\r\n})(window.ZSDKMessageManager || {})\r\n\r\nvar ZSDKEventManager = (function (ZSDKEventManager) {\r\n    const Logger = ZSDKUtil.getLogger()\r\n    // Private var's\r\n    const EventListeners = {} // Map storing all the eventnames and their Listeners\r\n\r\n    // Public API's\r\n    function AttachEventListener (eventName, fn) {\r\n        if (typeof fn !== 'function') {\r\n            // TODO: Using Logger log an error message as invalid params passed. fn is expected.\r\n            return\r\n        }\r\n\r\n        if (!Array.isArray(EventListeners[eventName])) {\r\n            EventListeners[eventName] = []\r\n        }\r\n        EventListeners[eventName].push(fn)\r\n    }\r\n\r\n    function NotifyEventListeners (AppContext, eventName, eventData) {\r\n        const internalEventCheck = eventName.match(/^\\__[A-Za-z_]+\\__$/gi)\r\n        const isInternalEvent = Array.isArray(internalEventCheck) && internalEventCheck.length > 0\r\n\r\n        const bindedListeners = EventListeners[eventName]\r\n        if (bindedListeners && Array.isArray(bindedListeners)) {\r\n            for (let i = 0; i < bindedListeners.length; i++) {\r\n                const fn = bindedListeners[i]\r\n                fn.call(AppContext, eventData)\r\n            }\r\n        } else {\r\n            Logger.Info('Cannot find EventListeners for Event : ', eventName)\r\n        }\r\n    }\r\n\r\n    function NotifyInternalEventHandler (SDKContext, payload) {\r\n        const eventName = payload.eventName\r\n\r\n        if (eventName === '__APP_INIT__') {\r\n            SDKContext.SetContext(payload.data)\r\n            SDKContext.ExecuteLoadHandler()\r\n        } else if (eventName === '__APP_CONTEXT_UPDATE__') {\r\n            SDKContext.UpdateContext(payload.data)\r\n            SDKContext.ExecuteContextUpdateHandler()\r\n        }\r\n    }\r\n\r\n    ZSDKEventManager.AttachEventListener = AttachEventListener\r\n    ZSDKEventManager.NotifyEventListeners = NotifyEventListeners\r\n    ZSDKEventManager.NotifyInternalEventHandler = NotifyInternalEventHandler\r\n\r\n    return ZSDKEventManager\r\n})(window.ZSDKEventManager || {})\r\n\r\nfunction ZSDK () { // TODO: Replace console with Logger\r\n    /* Private variables */\r\n    const that = this\r\n    let AppCode // Fn which gets executed on OnLoad\r\n    let ContextUpdateHandler // Fn which executed on OnContextUpdate\r\n    let connectors\r\n    let QueryParams\r\n    let uniqueID\r\n    const paramsObj = {} // TODO: Pass params from Framework to patchString in API Request call\r\n    let localeResource = {}\r\n\r\n    const version = '0.7.0' // Version\r\n\r\n    const Logger = ZSDKUtil.getLogger()\r\n\r\n    let _isAppRegistered = false\r\n    let isOnLoadTriggered = false\r\n\r\n    /* Instance variables */\r\n    this.isContextReady = false\r\n    this.HelperContext = {} // Helper context for helper js files\r\n    this.isDevMode = false\r\n    this.getContext = function () {\r\n        return AppContext\r\n    }\r\n\r\n    var AppContext = {} // App context having all the\r\n\r\n    AppContext.Model = {} // Modeldata store\r\n\r\n    AppContext.Event = {} // Event API's\r\n    AppContext.Event.Listen = AttachEventListener\r\n    AppContext.Event.Trigger = TriggerEvent // TODO: Need to check with API name and handler mechanism.\r\n\r\n    AppContext.GetRequest = GetRequest\r\n    AppContext.QueryParams = QueryParams\r\n    AppContext.Translate = Translate\r\n\r\n    this.OnLoad = function (AppLoadHandler) {\r\n        // TODO: Have to check whether AppCode has been executed. Throw Error when trying to Again bind fn to Init.\r\n        if (typeof AppLoadHandler !== 'function') {\r\n            throw new Error('Invalid Function value is passed')\r\n        }\r\n        AppCode = AppLoadHandler\r\n        if (_isAppRegistered) { ExecuteLoadHandler() }\r\n    }\r\n    this.OnUnLoad = function (AppUnLoadHandler) {\r\n    // TODO: Yet to impl\r\n    }\r\n    this.OnContextUpdate = function (AppCtxUpdateHandler) {\r\n    // TODO: Yet to impl\r\n        ContextUpdateHandler = AppCtxUpdateHandler\r\n    }\r\n\r\n    function ExecuteLoadHandler () {\r\n        if (typeof AppCode !== 'function') { Logger.Error('No OnLoad Handler provided to execute.'); return }\r\n        if (isOnLoadTriggered) { Logger.Error('OnLoad event already triggered.'); return }\r\n\r\n        AppCode.call(AppContext, AppContext)\r\n        isOnLoadTriggered = true\r\n    }\r\n    function ExecuteContextUpdateHandler () {\r\n        ContextUpdateHandler.call(AppContext, AppContext)\r\n    }\r\n    function isAppRegistered () {\r\n        return _isAppRegistered\r\n    }\r\n\r\n    // TODO: Add support for Setting custom headers and other error handling cases.\r\n    function GetRequest (options) {\r\n        return ZSDKMessageManager.SendRequest(options)\r\n    }\r\n\r\n    // TODO: Need to revisit\r\n    function TriggerEvent (eventName, payload, isPromise) {\r\n        return ZSDKMessageManager.TriggerEvent(eventName, payload, isPromise)\r\n    }\r\n    function RegisterClient () {\r\n        ZSDKMessageManager.RegisterApp()\r\n    }\r\n\r\n    // LoadContext object\r\n    function SetContext (contextData) {\r\n        Logger.Info('Setting AppContext data')\r\n\r\n        const modelData = (contextData && contextData.model) || {}\r\n        const local = contextData && contextData.locale\r\n        const localResource = contextData && contextData.localeResource\r\n\r\n        if (window.isDevMode) {\r\n            if (contextData.locale && contextData.localeResource &&\r\n          Object.keys(contextData.localeResource).length === 0 &&\r\n          contextData.localeResource.constructor === Object) {\r\n                if (contextData.locale) {\r\n                    LoadLocaleResource(contextData.locale)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (typeof ZSDKModelManager !== 'undefined') { // No I18n\r\n            for (const key in modelData) {\r\n                window.ZSDKModelManager.AddModel(key, modelData[key])\r\n            }\r\n            AppContext.Model = window.ZSDKModelManager.GetModelStore()\r\n        }\r\n\r\n        // Setting the uniqueID\r\n        uniqueID = contextData.uniqueID\r\n\r\n        // TODO: Need to check wheather needed or move to respective place.\r\n        connectors = contextData.connectors\r\n        Logger.Info('App Connectors ', connectors)\r\n\r\n        _isAppRegistered = true\r\n    }\r\n    function getUniqueID () {\r\n        return uniqueID\r\n    }\r\n    function UpdateContext (contextData) {\r\n    // Logger.Info('Context Update Event Data ', contextData);\r\n    }\r\n    function AttachEventListener (eventName, eventHandlerFn) {\r\n        ZSDKEventManager.AttachEventListener(eventName, eventHandlerFn)\r\n    }\r\n\r\n    function GetConnectors () {\r\n        return connectors\r\n    }\r\n\r\n    function LoadLocaleResource (locale) {\r\n        _loadJSON('/app-translations/' + locale + '.json', function (response) {\r\n            // Parse JSON string into object\r\n            localeResource = JSON.parse(response)\r\n            InitI18n()\r\n        })\r\n    }\r\n\r\n    function _loadJSON (filepath, callback) {\r\n        const xobj = new XMLHttpRequest()\r\n        // xobj.overrideMimeType(\"application/json\");\r\n        xobj.open('GET', filepath, false) // make 3rd param true for asynchronous mode\r\n        xobj.onreadystatechange = function () {\r\n            if (xobj.readyState == 4 && xobj.status == '200') {\r\n                // Required use of an anonymous callback as .open will NOT return a value but simply returns undefined in asynchronous mode\r\n                callback(xobj.responseText)\r\n            }\r\n        }\r\n\r\n        xobj.send(null)\r\n    }\r\n\r\n    function Translate (key, options) {\r\n        let valStr = ''\r\n        if (key) {\r\n            valStr = _getKeyByString(localeResource, key)\r\n        }\r\n\r\n        if (!valStr) {\r\n            return false\r\n        }\r\n\r\n        if (options) {\r\n            var key\r\n            const translateOptions = JSON.parse(JSON.stringify(eval(options)))\r\n            const keysArr = Object.keys(translateOptions)\r\n            for (key in keysArr) {\r\n                valStr = _replaceString(valStr, '${' + keysArr[key] + '}', translateOptions[keysArr[key]])\r\n            }\r\n        }\r\n\r\n        return valStr\r\n    }\r\n\r\n    function _replaceString (str, find, replace) {\r\n        let $r = ''\r\n        while ($r != str) {\r\n            $r = str\r\n            str = str.replace(find, replace)\r\n        }\r\n        return str\r\n    }\r\n\r\n    function _getKeyByString (o, s) {\r\n        s = s.replace(/\\[(\\w+)\\]/g, '.$1') // convert indexes to properties\r\n        s = s.replace(/^\\./, '') // strip a leading dot\r\n        const a = s.split('.')\r\n        for (let i = 0, n = a.length; i < n; ++i) {\r\n            const k = a[i]\r\n            if (k in o) {\r\n                o = o[k]\r\n            } else {\r\n                return\r\n            }\r\n        }\r\n        return o\r\n    }\r\n\r\n    function InitI18n () {\r\n        const all = document.querySelectorAll('[data-i18n]')\r\n        for (const i in all) {\r\n            if (all.hasOwnProperty(i)) {\r\n                let valStr = _getKeyByString(localeResource, all[i].getAttribute('data-i18n'))\r\n                if (!valStr) {\r\n                    return false\r\n                }\r\n\r\n                if (all[i].hasAttribute('data-options')) {\r\n                    const options = JSON.parse(JSON.stringify(eval('(' + all[i].getAttribute('data-options') + ')')))\r\n                    const keysArr = Object.keys(options)\r\n                    var key\r\n                    for (key in keysArr) {\r\n                        valStr = _replaceString(valStr, '${' + keysArr[key] + '}', options[keysArr[key]])\r\n                    }\r\n                }\r\n                all[i].innerHTML = valStr\r\n            }\r\n        }\r\n    }\r\n\r\n    function Bootstrap () {\r\n        QueryParams = ZSDKUtil.GetQueryParams()\r\n\r\n        // Intialize variables\r\n        window.isDevMode = !!QueryParams.isDevMode\r\n\r\n        const SDKContext = {}\r\n        SDKContext.isDevMode = window.isDevMode\r\n        SDKContext.ExecuteLoadHandler = ExecuteLoadHandler\r\n        SDKContext.SetContext = SetContext\r\n        SDKContext.UpdateContext = UpdateContext\r\n        SDKContext.QueryParams = QueryParams\r\n        SDKContext.GetConnectors = GetConnectors\r\n        SDKContext.TriggerEvent = TriggerEvent\r\n        SDKContext.ExecuteContextUpdateHandler = ExecuteContextUpdateHandler\r\n        SDKContext.getUniqueID = getUniqueID\r\n        SDKContext.isAppRegistered = isAppRegistered\r\n\r\n        // Initiating Message Manager\r\n        const MessageHandler = ZSDKMessageManager.Init(SDKContext)\r\n        window.addEventListener('message', MessageHandler)\r\n        window.addEventListener('unload', function () {\r\n            ZSDKMessageManager.DERegisterApp()\r\n        })\r\n\r\n        if (typeof ZSDKModelManager !== 'undefined') {\r\n            window.ZSDKModelManager.Init(SDKContext)\r\n        }\r\n\r\n        RegisterClient()\r\n    }\r\n\r\n    Bootstrap() // Bootstrap for SDK\r\n}\r\n\r\nexport const ZOHO = (function () {\r\n    let appSDK\r\n    const eventListenerMap = {}\r\n    let isInitTriggered = false\r\n    let initPromise\r\n    return {\r\n        embeddedApp: {\r\n            on: function (event, fn) {\r\n                eventListenerMap[event] = fn\r\n            },\r\n            init: function () {\r\n            \tif (!isInitTriggered) {\r\n            \t\tisInitTriggered = true\r\n                    appSDK = new ZSDK()\r\n                    let promiseResolve\r\n                    initPromise = new Promise(function (resolve, reject) {\r\n                        promiseResolve = resolve\r\n                    })\r\n                    appSDK.OnLoad(function () {\r\n                        promiseResolve()\r\n                    })\r\n                    for (const key in eventListenerMap) {\r\n                        appSDK.getContext().Event.Listen(key, eventListenerMap[key])\r\n                    }\r\n            \t}\r\n                return initPromise\r\n            }\r\n        },\r\n        CRM: (function () {\r\n            function newRequestPromise (data) {\r\n                /*\r\n                 * Sdk Version Maintainance\r\n                 */\r\n                data.sdkVersion = '1'\r\n                return appSDK.getContext().Event.Trigger('CRM_EVENT', data, true)\r\n            }\r\n            // file upload issue fie\r\n            function createNewFileObj (file) {\r\n                const oldfile = file\r\n                const newfile = new File([oldfile], oldfile.name, { type: oldfile.type })\r\n\t         \treturn newfile\r\n            }\r\n            function createRecord (Entity, APIdata, RecordID, RelatedEntity) {\r\n            \tif (APIdata.FileData) {\r\n            \t  const newfileObj = createNewFileObj(APIdata.FileData)\r\n                    APIdata.FileData = newfileObj\r\n                }\r\n                const data = {\r\n                    category: 'CREATE', // no i18n\r\n                    Entity: Entity,\r\n                    RelatedID: RecordID,\r\n                    APIData: APIdata\r\n                }\r\n                data.type = RelatedEntity || 'RECORD'\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function getRecord (Entity, recordID, relatedListSysRef) {\r\n                const data = {\r\n                    category: 'READ', // no i18n\r\n                    APIData: {\r\n                        Entity: Entity,\r\n                        RecordID: recordID,\r\n                        RelatedList: relatedListSysRef\r\n                    }\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n            function getBluePrint (APIData) {\r\n                APIData.category = 'BLUEPRINT' // no i18n\r\n                return newRequestPromise(APIData)\r\n            }\r\n            function uploadFile (APIData) {\r\n            \tif (APIData.FILE) {\r\n            \t\tconst newfileobj = createNewFileObj(APIData.FILE.file)\r\n            \t\tAPIData.FILE.file = newfileobj\r\n        \t\t}\r\n                const data = {\r\n                    FileData: APIData,\r\n                    category: 'FILES', // no i18n\r\n                    type: 'UPLOAD_FILE'\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n            function getFile (APIData) {\r\n                APIData.category = 'FILES'\r\n                APIData.type = 'DOWNLOAD_FILE'\r\n                return newRequestPromise(APIData)\r\n            }\r\n            function getAllActions (APIData) {\r\n                APIData.category = 'APPROVALS'\r\n                return newRequestPromise(APIData)\r\n            }\r\n            function getAllRecords (APIData) {\r\n                const data = {\r\n                    category: 'READ',\r\n                    APIData: APIData\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function updateRecord (Entity, APIData) {\r\n                const data = {\r\n                    category: 'UPDATE', // no i18n\r\n                    type: 'RECORD', // no i18n\r\n                    Entity: Entity,\r\n                    APIData: APIData\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function getRelatedRecord (APIData) {\r\n                const data = {\r\n                    category: 'READ', // no i18n\r\n                    APIData: APIData // no i18n\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function updateRelatedRecord (Entity, RecordID, RelatedList, RelatedRecordID, APIData) {\r\n                const data = {\r\n                    category: 'UPDATE', // no i18n\r\n                    type: 'RELATED_RECORD', // no i18n\r\n                    Entity: Entity,\r\n                    RecordID: RecordID,\r\n                    RelatedList: RelatedList,\r\n                    RelatedRecordID: RelatedRecordID,\r\n                    APIData: APIData\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function updateNotes (Entity, RecordID, RelatedRecordID, APIData) {\r\n                const data = {\r\n                    category: 'UPDATE', // no i18n\r\n                    type: 'NOTES', // no i18n\r\n                    Entity: Entity,\r\n                    RecordID: RecordID,\r\n                    RelatedRecordID: RelatedRecordID,\r\n                    APIData: APIData\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function deleteRecord (Entity, RecordID) {\r\n                const data = {\r\n                    category: 'DELETE', // no i18n\r\n                    type: 'RECORD', // no i18n\r\n                    Entity: Entity,\r\n                    RecordID: RecordID\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function deleteRelatedRecord (Entity, RecordID, RelatedList, RelatedRecordID) {\r\n                const data = {\r\n                    category: 'DELETE', // no i18n\r\n                    type: 'RELATED_RECORD', // no i18n\r\n                    Entity: Entity,\r\n                    RecordID: RecordID,\r\n                    RelatedList: RelatedList,\r\n                    RelatedRecordID: RelatedRecordID\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function searchRecord (Entity, Type, Query, page, per_page, delay) {\r\n                const data = {\r\n                    category: 'SEARCH', // no i18n\r\n                    Entity: Entity,\r\n                    Type: Type,\r\n                    Query: Query,\r\n                    page: page,\r\n                    per_page: per_page,\r\n                    delay: delay\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function getAllProfiles (Category, Type) {\r\n                const data = {\r\n                    category: Category,\r\n                    type: Type\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function getProfile (Category, Type, ID) {\r\n                const data = {\r\n                    category: Category,\r\n                    type: Type,\r\n                    ID: ID\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function updateProfile (Category, Type, ID, APIData) {\r\n                const data = {\r\n                    category: Category,\r\n                    type: Type,\r\n                    ID: ID,\r\n                    APIData: APIData\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function constructQueryString (source) {\r\n                const array = []\r\n\r\n                for (const key in source) {\r\n                    array.push(encodeURIComponent(key) + '=' + encodeURIComponent(source[key]))\r\n                }\r\n                return array.join('&')\r\n            }\r\n\r\n            function remoteCall (method, requestData, type) {\r\n            \tif (requestData.FILE) {\r\n            \t\tconst newfileobj = createNewFileObj(requestData.FILE.file)\r\n            \t\trequestData.FILE.file = newfileobj\r\n        \t\t}\r\n                let reqData\r\n                if (!type) {\r\n                    let url = requestData.url\r\n                    const params = requestData.params\r\n                    const headers = requestData.headers\r\n                    const body = requestData.body\r\n                    const Parts = requestData.PARTS\r\n                    const partBoundary = requestData.PART_BOUNDARY\r\n                    const ContentType = requestData.CONTENT_TYPE\r\n                    const responseType = requestData.RESPONSE_TYPE\r\n                    const file = requestData.FILE\r\n                    if (!url) {\r\n                        throw { Message: 'Url missing' }\r\n                    }\r\n                    if (params) {\r\n                        const queryString = constructQueryString(params)\r\n                        url += (url.indexOf('?') > -1 ? '&' : '?') + queryString\r\n                    }\r\n                    reqData = {\r\n                        url: url,\r\n                        Header: headers,\r\n                        Body: body,\r\n                        CONTENT_TYPE: ContentType,\r\n                        RESPONSE_TYPE: responseType,\r\n                        PARTS: Parts,\r\n                        PARTS_BOUNDARY: partBoundary,\r\n                        FILE: file\r\n                    }\r\n                } else {\r\n                    reqData = requestData\r\n                }\r\n\r\n                const data = {\r\n                    category: 'CONNECTOR', // no i18n\r\n                    nameSpace: method,\r\n                    data: reqData,\r\n                    type: type\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function manipulateUI (data) {\r\n                const config = {\r\n                    category: 'UI'\r\n                }\r\n                $.extend(data, config)\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function config (type, nameSpace, requestData) {\r\n                const data = {\r\n                    category: 'CONFIG',\r\n                    type: type,\r\n                    nameSpace: nameSpace,\r\n                    APIData: requestData\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function action (type, obj) {\r\n                const data = {\r\n                    category: 'ACTION',\r\n                    type: type,\r\n                    object: obj\r\n                }\r\n                return newRequestPromise(data)\r\n            }\r\n\r\n            function user (data) {\r\n                const promiseData = {\r\n                    category: 'USER'\r\n                }\r\n                if (data.ID) {\r\n                    promiseData.ID = data.ID\r\n                } else if (data.Type) {\r\n                    promiseData.Type = data.Type\r\n                    if (data.page) {\r\n                        promiseData.page = data.page\r\n                    }\r\n                    if (data.per_page) {\r\n                        promiseData.per_page = data.per_page\r\n                    }\r\n                }\r\n                return newRequestPromise(promiseData)\r\n            }\r\n\r\n            function getMeta (data) {\r\n                const reqJson = {\r\n                    category: 'META',\r\n                    type: data.type,\r\n                    Entity: data.Entity,\r\n                    Id: data.Id\r\n                }\r\n                return newRequestPromise(reqJson)\r\n            }\r\n            const HTTPRequest = {\r\n                POST: 'wget.post',\r\n                GET: 'wget.get',\r\n                PUT: 'wget.put',\r\n                PATCH: 'wget.patch',\r\n                DELETE: 'wget.delete'\r\n            }\r\n            return {\r\n                ACTION: {\r\n                    setConfig: function (obj) {\r\n                        return action('CUSTOM_ACTION_SAVE_CONFIG', obj)\r\n                    },\r\n                    enableAccountAccess: function (obj) {\r\n                        return action('ENABLE_ACCOUNT_ACCESS', obj)\r\n                    }\r\n                },\r\n                /**\r\n                 * @namespace ZOHO.CRM.FUNCTIONS\r\n                 */\r\n                FUNCTIONS: {\r\n                    /**\r\n                     * @function execute\r\n                     * @description Invoke a Function\r\n                     * @returns {Promise} resolved with response of the function executed\r\n                     * @memberof ZOHO.CRM.FUNCTIONS\r\n                     * @param {String} func_name - Function Name\r\n                     * @param {Object} req_data - Request Data\r\n                     * @example\r\n                     * var func_name = \"custom_function4\";\r\n                     * var req_data ={\r\n                     *   \"arguments\": JSON.stringify({\r\n                     *       \"mailid\" : \"siprxx.xxx@xxxx.com\"\r\n                     *   })\r\n                     * };\r\n                     * ZOHO.CRM.FUNCTIONS.execute(func_name, req_data)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     * {\r\n                     *   \"code\": \"success\",\r\n                     *   \"details\": {\r\n                     *     \"type\":\"VOID\",\r\n                     *       \"output\": null,\r\n                     *       \"id\": \"944000000003001\"\r\n                     *   },\r\n                     *   \"message\": \"function executed successfully\"\r\n                     * }\r\n                     */\r\n                    execute: function (func_name, req_data) {\r\n                        const request = {}\r\n                        req_data.auth_type = 'oauth'\r\n                        request.data = req_data\r\n                        const data = {\r\n                            category: 'FUNCTIONS_EXECUTE', // no i18n\r\n                            customFunctionName: func_name,\r\n                            data: request\r\n                        }\r\n                        return newRequestPromise(data)\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @namespace ZOHO.CRM.CONFIG\r\n                 */\r\n                CONFIG: {\r\n                    /**\r\n                     * @function getOrgInfo\r\n                     * @memberof ZOHO.CRM.CONFIG\r\n                     * @description get plugins configuration data\r\n                     * @returns {Promise} Resolved with Plugin Configuration\r\n                     * @example\r\n                     * ZOHO.CRM.CONFIG.getOrgInfo().then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"Success\": {\r\n                     *   \"Content\": \"12345\"\r\n                     *  }\r\n                     *}\r\n                     *\r\n                     */\r\n                    getOrgInfo: function (nameSpace) {\r\n                        return config('ORG')\r\n                    },\r\n                    /**\r\n                     * @function getCurrentUser\r\n                     * @memberof ZOHO.CRM.CONFIG\r\n                     * @description get Current User info\r\n                     * @returns {Promise} Resolved with User info\r\n                     * @example\r\n                     * ZOHO.CRM.CONFIG.getCurrentUser().then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     * {\r\n                     *   \"confirm\": true,\r\n                     *   \"full_name\": \"asd devvv\",\r\n                     *   \"role\": {\r\n                     *     \"name\": \"CEO\",\r\n                     *     \"id\": \"1000000028936\"\r\n                     *   },\r\n                     *   \"profile\": {\r\n                     *     \"name\": \"Administrator\",\r\n                     *     \"id\": \"1000000028942\"\r\n                     *   },\r\n                     *   \"last_name\": \"asd devvv\",\r\n                     *   \"alias\": null,\r\n                     *   \"id\": \"1000000030132\",\r\n                     *   \"first_name\": null,\r\n                     *   \"email\": \"naresh.babu+dev1@zylker.com\",\r\n                     *   \"zuid\": \"4253443\",\r\n                     *   \"status\": \"active\"\r\n                     * }\r\n                     *\r\n                     */\r\n                    getCurrentUser: function () {\r\n                        return config('CURRENT_USER')\r\n                    },\r\n                    /*\r\n                     * @function GetCurrentEnvironment\r\n                     * @memberof ZOHO.CRM.CONFIG\r\n                     * @description get Current org info\r\n                     * @returns {Promise} Resolved with User info\r\n                     * @example\r\n                     * ZOHO.CRM.CONFIG.GetCurrentEnvironment().then(function(data){\r\n                     *  console.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     *\r\n                     *\r\n                     *{\r\n                     *  \"deployment\": \"US\",\r\n                     *  \"ZGID\": 1001244313,\r\n                     *  \"ZUID\": \"1001244314\",\r\n                     *  \"appDetails\": {\r\n                     *    \"appUrl\": \"https://vettti.ucrm.com\"\r\n                     *  }\r\n                     *}\r\n                     *\r\n                     */\r\n                    GetCurrentEnvironment: function () {\r\n                        return config('ORG_LEVEL_INFO')\r\n                    }\r\n                    /*\r\n                    * @function createUser\r\n                    * @memberof ZOHO.CRM.CONFIG\r\n                    * @description create user\r\n                    * @param {Object} config - Configuration Object.\r\n                    * @returns {Promise} Resolved with user details\r\n                    * @example\r\n                    *\r\n                    *var config = {\r\n                    *  \"users\": [\r\n                    *    {\r\n                    *      \"last_name\": \"TestUser2\",\r\n                    *      \"email\": \"test_account20@zohocorp.com\",\r\n                    *      \"role\": \"111126000000030021\",\r\n                    *      \"profile\": \"111126000000030027\"\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    *\r\n                    *\r\n                    * ZOHO.CRM.CONFIG.createUser(config).then(function(data){\r\n                    *    console.log(data)\r\n                    * });\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *{\r\n                    *  \"users\": [\r\n                    *    {\r\n                    *      \"code\": \"SUCCESS\",\r\n                    *      \"details\": {\r\n                    *        \"id\": \"111155000000032661\"\r\n                    *      },\r\n                    *      \"message\": \"User added\",\r\n                    *      \"status\": \"success\"\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    createUser: function(data)\r\n                    {\r\n                        return config(\"CREATEUSER\",\"\",data);\r\n                    },\r\n                    * @function editUser\r\n                    * @memberof ZOHO.CRM.CONFIG\r\n                    * @description edit user details\r\n                    * @param {Object} config - Configuration Object.\r\n                    * @param {String} config.id - user id\r\n                    * @param {String} config.userobject - json object to update the user details\r\n                    * @returns {Promise} Resolved with user details\r\n                    * @example\r\n                    *\r\n                    *var userdetails =\r\n                    *{\r\n                    *  \"users\": [\r\n                    *    {\r\n                    *      \"website\": \"https://www.zoho.com/docs\",\r\n                    *      \"fax\": \"test\",\r\n                    *      \"Mobile\": 1234567890,\r\n                    *      \"Phone\": 1234567890\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    * var config =\r\n                    *{\r\n                    *   id:\"6000000031085\",\r\n                    *   userobject:userdetails\r\n                    *}\r\n                    *\r\n                    *ZOHO.CRM.CONFIG.editUser(config).then(function(data){\r\n                    *  console.log(data);\r\n                    *});\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *{\r\n                    *  \"users\": [\r\n                    *    {\r\n                    *      \"code\": \"SUCCESS\",\r\n                    *      \"details\": {\r\n                    *        \"id\": \"111155000000032680\"\r\n                    *      },\r\n                    *      \"message\": \"User updated\",\r\n                    *      \"status\": \"success\"\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    editUser: function(data)\r\n                    {\r\n                        return config(\"EDITUSER\",\"\",data);\r\n                    },\r\n                    * @function deleteUser\r\n                    * @memberof ZOHO.CRM.CONFIG\r\n                    * @description delete user from crm\r\n                    * @params {object} config - details of the delete user\r\n                    * @params {String} config.id - user id\r\n                    * @returns {Promise} Resolved with user details\r\n                    * @example\r\n                    *\r\n                    * var config =\r\n                    *{\r\n                    *    id:\"6000000032001\"\r\n                    *}\r\n                    *\r\n                    *\r\n                    * ZOHO.CRM.CONFIG.deleteUser(config).then(function(data){\r\n                    *    console.log(data);\r\n                    * });\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *{\r\n                    *  \"users\": [\r\n                    *    {\r\n                    *      \"code\": \"SUCCESS\",\r\n                    *      \"details\": {},\r\n                    *      \"message\": \"User deleted\",\r\n                    *      \"status\": \"success\"\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    deleteUser: function(data)\r\n                    {\r\n                        return config(\"DELETEUSER\",\"\",data);\r\n                    } */\r\n                },\r\n                /**\r\n                 * @namespace ZOHO.CRM.META\r\n                 */\r\n                META: {\r\n                    /**\r\n                     * @function getFields\r\n                     * @memberof ZOHO.CRM.META\r\n                     * @description get field lables and api names\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @returns {Promise} Resolved with data of record matching with Entity and type\r\n                     * @example\r\n                     * ZOHO.CRM.META.getFields({\"Entity\":\"Contacts\"}).then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     *\r\n                     *\r\n                     * //prints\r\n                     *\r\n                     *\r\n                     *{\r\n                     *fields:[\r\n                     *  {\r\n                     *    \"custom_field\": false,\r\n                     *    \"lookup\": {\r\n                     *\r\n                     *    },\r\n                     *    \"visible\": true,\r\n                     *    \"json_type\": \"jsonobject\",\r\n                     *    \"field_label\": \"Contact Owner\",\r\n                     *    \"length\": 120,\r\n                     *    \"column_name\": \"SMOWNERID\",\r\n                     *    \"view_type\": {\r\n                     *      \"view\": true,\r\n                     *      \"edit\": true,\r\n                     *      \"quick_create\": false,\r\n                     *      \"create\": true\r\n                     *    },\r\n                     *    \"created_source\": \"default\",\r\n                     *    \"show_type\": 7,\r\n                     *    \"ui_type\": 8,\r\n                     *    \"read_only\": false,\r\n                     *    \"api_name\": \"Owner\",\r\n                     *    \"unique\": {\r\n                     *\r\n                     *    },\r\n                     *    \"businesscard_supported\": true,\r\n                     *    \"data_type\": \"ownerlookup\",\r\n                     *    \"formula\": {\r\n                     *\r\n                     *    },\r\n                     *    \"currency\": {\r\n                     *\r\n                     *    },\r\n                     *    \"id\": \"14000000000649\",\r\n                     *    \"decimal_place\": null,\r\n                     *    \"pick_list_values\": [\r\n                     *\r\n                     *    ],\r\n                     *    \"auto_number\": {\r\n                     *\r\n                     *    }\r\n                     *  },\r\n                     *  {\r\n                     *    \"custom_field\": false,\r\n                     *    \"lookup\": {\r\n                     *\r\n                     *    },\r\n                     *    \"visible\": true,\r\n                     *    \"json_type\": \"string\",\r\n                     *    \"field_label\": \"Lead Source\",\r\n                     *    \"length\": 120,\r\n                     *    \"column_name\": \"LEADSOURCE\",\r\n                     *    \"view_type\": {\r\n                     *      \"view\": true,\r\n                     *      \"edit\": true,\r\n                     *      \"quick_create\": false,\r\n                     *      \"create\": true\r\n                     *    },\r\n                     *    \"created_source\": \"default\",\r\n                     *    \"show_type\": 7,\r\n                     *    \"ui_type\": 2,\r\n                     *    \"read_only\": false,\r\n                     *    \"api_name\": \"Lead_Source\",\r\n                     *    \"unique\": {\r\n                     *\r\n                     *    },\r\n                     *    \"businesscard_supported\": true,\r\n                     *    \"data_type\": \"picklist\",\r\n                     *    \"formula\": {\r\n                     *\r\n                     *    },\r\n                     *    \"currency\": {\r\n                     *\r\n                     *    },\r\n                     *    \"id\": \"14000000000651\",\r\n                     *    \"decimal_place\": null,\r\n                     *    \"pick_list_values\": [\r\n                     *      {\r\n                     *        \"display_value\": \"None\",\r\n                     *        \"actual_value\": \"-None-\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Advertisement\",\r\n                     *        \"actual_value\": \"Advertisement\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Cold Call\",\r\n                     *        \"actual_value\": \"Cold Call\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Employee Referral\",\r\n                     *        \"actual_value\": \"Employee Referral\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"External Referral\",\r\n                     *        \"actual_value\": \"External Referral\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Partner\",\r\n                     *        \"actual_value\": \"Partner\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Public Relations\",\r\n                     *        \"actual_value\": \"Public Relations\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Trade Show\",\r\n                     *        \"actual_value\": \"Trade Show\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Web Form\",\r\n                     *        \"actual_value\": \"Web Form\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Search Engine\",\r\n                     *        \"actual_value\": \"Search Engine\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Facebook\",\r\n                     *        \"actual_value\": \"Facebook\"\r\n                     *      },\r\n                     *      {\r\n                     *        \"display_value\": \"Twitter\",\r\n                     *        \"actual_value\": \"Twitter\"\r\n                     *      }\r\n                     *    ],\r\n                     *    \"auto_number\": {\r\n                     *\r\n                     *    }\r\n                     *  },\r\n                     *  {\r\n                     *    \"custom_field\": false,\r\n                     *    \"lookup\": {\r\n                     *\r\n                     *    },\r\n                     *    \"visible\": true,\r\n                     *    \"json_type\": \"string\",\r\n                     *    \"field_label\": \"First Name\",\r\n                     *    \"length\": 40,\r\n                     *    \"column_name\": \"FIRSTNAME\",\r\n                     *    \"view_type\": {\r\n                     *      \"view\": false,\r\n                     *      \"edit\": true,\r\n                     *      \"quick_create\": true,\r\n                     *      \"create\": true\r\n                     *    },\r\n                     *    \"created_source\": \"default\",\r\n                     *    \"show_type\": 7,\r\n                     *    \"ui_type\": 27,\r\n                     *    \"read_only\": false,\r\n                     *    \"api_name\": \"First_Name\",\r\n                     *    \"unique\": {\r\n                     *\r\n                     *    },\r\n                     *    \"businesscard_supported\": false,\r\n                     *    \"data_type\": \"text\",\r\n                     *    \"formula\": {\r\n                     *\r\n                     *    },\r\n                     *    \"currency\": {\r\n                     *\r\n                     *    },\r\n                     *    \"id\": \"14000000000653\",\r\n                     *    \"decimal_place\": null,\r\n                     *    \"pick_list_values\": [\r\n                     *\r\n                     *    ],\r\n                     *    \"auto_number\": {\r\n                     *\r\n                     *    }\r\n                     *  },\r\n                     *  {\r\n                     *    \"custom_field\": false,\r\n                     *    \"lookup\": {\r\n                     *\r\n                     *    },\r\n                     *    \"visible\": true,\r\n                     *    \"json_type\": \"string\",\r\n                     *    \"field_label\": \"Last Name\",\r\n                     *    \"length\": 80,\r\n                     *    \"column_name\": \"LASTNAME\",\r\n                     *    \"view_type\": {\r\n                     *      \"view\": true,\r\n                     *      \"edit\": true,\r\n                     *      \"quick_create\": true,\r\n                     *      \"create\": true\r\n                     *    },\r\n                     *    \"created_source\": \"default\",\r\n                     *    \"show_type\": 7,\r\n                     *    \"ui_type\": 127,\r\n                     *    \"read_only\": false,\r\n                     *    \"api_name\": \"Last_Name\",\r\n                     *    \"unique\": {\r\n                     *\r\n                     *    },\r\n                     *    \"businesscard_supported\": false,\r\n                     *    \"data_type\": \"text\",\r\n                     *    \"formula\": {\r\n                     *\r\n                     *    },\r\n                     *    \"currency\": {\r\n                     *\r\n                     *    },\r\n                     *    \"id\": \"14000000000655\",\r\n                     *    \"decimal_place\": null,\r\n                     *    \"pick_list_values\": [\r\n                     *\r\n                     *    ],\r\n                     *    \"auto_number\": {\r\n                     *\r\n                     *    }\r\n                     *  },\r\n                     *  {\r\n                     *    \"custom_field\": false,\r\n                     *    \"lookup\": {\r\n                     *\r\n                     *    },\r\n                     *    \"visible\": true,\r\n                     *    \"json_type\": \"string\",\r\n                     *    \"field_label\": \"Full Name\",\r\n                     *    \"length\": 80,\r\n                     *    \"column_name\": \"FULLNAME\",\r\n                     *    \"view_type\": {\r\n                     *      \"view\": true,\r\n                     *      \"edit\": false,\r\n                     *      \"quick_create\": false,\r\n                     *      \"create\": false\r\n                     *    },\r\n                     *    \"created_source\": \"default\",\r\n                     *    \"show_type\": 0,\r\n                     *    \"ui_type\": 1,\r\n                     *    \"read_only\": false,\r\n                     *    \"api_name\": \"Full_Name\",\r\n                     *    \"unique\": {\r\n                     *\r\n                     *    },\r\n                     *    \"businesscard_supported\": false,\r\n                     *    \"data_type\": \"text\",\r\n                     *    \"formula\": {\r\n                     *\r\n                     *    },\r\n                     *    \"currency\": {\r\n                     *\r\n                     *    },\r\n                     *    \"id\": \"14000000000657\",\r\n                     *    \"decimal_place\": null,\r\n                     *    \"pick_list_values\": [\r\n                     *\r\n                     *    ],\r\n                     *    \"auto_number\": {\r\n                     *\r\n                     *    }\r\n                     *  }\r\n                     *]\r\n                     *}\r\n                     */\r\n                    getFields: function (data) {\r\n                        data.type = 'FIELD_LIST'\r\n                        return getMeta(data)\r\n                    },\r\n                    /**\r\n                     * @function getModules\r\n                     * @memberof ZOHO.CRM.META\r\n                     * @description get Modules list\r\n                     * @returns {Promise} Resolved with data of all modules\r\n                     * @example\r\n                     * ZOHO.CRM.META.getModules().then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     *\r\n                     *\r\n                     * //prints\r\n                     *\r\n                     *\r\n                     *{\r\n\t\t\t\t\t *  \"modules\": [{\r\n\t\t\t\t\t *      \"global_search_supported\": false,\r\n\t\t\t\t\t *      \"deletable\": false,\r\n\t\t\t\t\t *      \"creatable\": false,\r\n\t\t\t\t\t *      \"modified_time\": null,\r\n\t\t\t\t\t *      \"plural_label\": \"Home\",\r\n\t\t\t\t\t *      \"presence_sub_menu\": false,\r\n\t\t\t\t\t *      \"id\": \"457154000000000123\",\r\n\t\t\t\t\t *      \"visible\": true,\r\n\t\t\t\t \t *      \"visibility\": 1,\r\n\t\t\t\t\t *      \"convertable\": false,\r\n\t\t\t\t\t *      \"editable\": false,\r\n\t\t\t\t\t *      \"profiles\": [{\r\n\t\t\t\t\t *          \"name\": \"Administrator\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015972\"\r\n\t\t\t\t\t *        },\r\n\t\t\t\t\t *        {\r\n\t\t\t\t\t *          \"name\": \"Standard\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015975\"\r\n\t\t\t\t\t *        }\r\n\t\t\t\t\t *      ],\r\n\t\t\t\t\t *      \"filter_supported\": false,\r\n\t\t\t\t\t *      \"web_link\": null,\r\n\t\t\t\t\t *      \"sequence_number\": 1,\r\n\t\t\t\t\t *      \"singular_label\": \"Home\",\r\n\t\t\t\t\t *      \"viewable\": true,\r\n\t\t\t\t\t *      \"api_supported\": false,\r\n\t\t\t\t\t *      \"api_name\": \"Home\",\r\n\t\t\t\t\t *      \"quick_create\": false,\r\n\t\t\t\t\t *      \"modified_by\": null,\r\n\t\t\t\t\t *      \"generated_type\": \"default\",\r\n\t\t\t\t\t *      \"feeds_required\": false,\r\n\t\t\t\t\t *      \"scoring_supported\": false,\r\n\t\t\t\t\t *      \"arguments\": [],\r\n\t\t\t\t\t *      \"module_name\": \"Home\",\r\n\t\t\t\t\t *      \"business_card_field_limit\": 0,\r\n\t\t\t\t\t *      \"parent_module\": {}\r\n\t\t\t\t\t *    },\r\n\t\t\t\t\t *    {\r\n\t\t\t\t\t *      \"global_search_supported\": false,\r\n\t\t\t\t\t *      \"deletable\": false,\r\n\t\t\t\t\t *      \"creatable\": false,\r\n\t\t\t\t\t *      \"modified_time\": null,\r\n\t\t\t\t\t *      \"plural_label\": \"SalesInbox\",\r\n\t\t\t\t\t *      \"presence_sub_menu\": false,\r\n\t\t\t\t\t *      \"id\": \"457154000000129001\",\r\n\t\t\t\t\t *      \"visible\": true,\r\n\t\t\t\t\t *      \"visibility\": 1,\r\n\t\t\t\t\t *      \"convertable\": false,\r\n\t\t\t\t\t *      \"editable\": false,\r\n\t\t\t\t\t *      \"profiles\": [{\r\n\t\t\t\t\t *          \"name\": \"Administrator\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015972\"\r\n\t\t\t\t \t *        },\r\n\t\t\t\t\t *        {\r\n\t\t\t \t\t *          \"name\": \"Standard\",\r\n\t\t\t\t \t *          \"id\": \"457154000000015975\"\r\n\t\t\t\t\t *        }\r\n\t\t\t\t\t *      ],\r\n\t\t\t\t\t *      \"filter_supported\": false,\r\n\t\t\t\t\t *      \"web_link\": null,\r\n\t\t\t\t \t *      \"sequence_number\": 2,\r\n\t\t\t\t\t *      \"singular_label\": \"SalesInbox\",\r\n\t\t\t\t\t *      \"viewable\": true,\r\n\t\t\t\t\t *      \"api_supported\": false,\r\n\t\t\t\t\t *      \"api_name\": \"SalesInbox\",\r\n\t\t\t\t\t *      \"quick_create\": false,\r\n\t\t\t\t\t *      \"modified_by\": null,\r\n\t\t\t\t\t *      \"generated_type\": \"default\",\r\n\t\t\t\t\t *      \"feeds_required\": false,\r\n\t\t\t\t\t *      \"scoring_supported\": false,\r\n\t\t\t\t\t *      \"arguments\": [],\r\n\t\t\t\t\t *      \"module_name\": \"SalesInbox\",\r\n\t\t\t\t\t *      \"business_card_field_limit\": 0,\r\n\t\t\t\t \t *      \"parent_module\": {}\r\n\t\t\t\t\t *    },\r\n\t\t\t\t\t *    {\r\n\t\t\t\t\t *      \"global_search_supported\": false,\r\n\t\t\t\t\t *      \"deletable\": false,\r\n\t\t\t\t\t *      \"creatable\": false,\r\n\t\t\t\t\t *      \"modified_time\": null,\r\n\t\t\t\t\t *      \"plural_label\": \"Feeds\",\r\n\t\t\t\t\t *      \"presence_sub_menu\": false,\r\n\t\t\t\t\t *      \"id\": \"457154000000059001\",\r\n\t\t\t\t\t *      \"visible\": true,\r\n\t\t\t\t\t *      \"visibility\": 1,\r\n\t\t\t\t\t *      \"convertable\": false,\r\n\t\t\t\t\t *      \"editable\": false,\r\n\t\t\t\t \t *      \"profiles\": [],\r\n\t\t\t \t\t *      \"filter_supported\": false,\r\n\t\t\t\t\t *      \"web_link\": null,\r\n\t\t\t\t\t *      \"sequence_number\": 3,\r\n\t\t\t\t\t *      \"singular_label\": \"Feeds\",\r\n\t\t\t\t \t *      \"viewable\": true,\r\n\t\t\t \t\t *      \"api_supported\": false,\r\n\t\t\t\t\t *      \"api_name\": \"Feeds\",\r\n\t\t\t\t\t *      \"quick_create\": false,\r\n\t\t\t\t\t *      \"modified_by\": null,\r\n\t\t\t\t\t *      \"generated_type\": \"default\",\r\n\t\t\t\t\t *      \"feeds_required\": false,\r\n\t\t\t\t\t *      \"scoring_supported\": false,\r\n\t\t\t\t\t *      \"arguments\": [],\r\n\t\t\t\t\t *      \"module_name\": \"Feeds\",\r\n\t\t\t\t\t *      \"business_card_field_limit\": 0,\r\n\t\t\t\t\t *      \"parent_module\": {}\r\n\t\t\t\t\t *    },\r\n\t\t\t\t\t *    {\r\n\t\t\t\t\t *      \"global_search_supported\": true,\r\n\t\t\t\t\t *      \"deletable\": true,\r\n\t\t\t\t\t *      \"creatable\": true,\r\n\t\t\t\t\t *      \"modified_time\": \"2018-10-23T11:39:36+05:30\",\r\n\t\t\t\t\t *      \"plural_label\": \"Leads\",\r\n\t\t\t\t\t *      \"presence_sub_menu\": true,\r\n\t\t\t\t\t *      \"id\": \"457154000000000125\",\r\n\t\t\t\t\t *      \"visible\": true,\r\n\t\t\t\t\t *      \"visibility\": 1,\r\n\t\t\t\t\t *      \"convertable\": true,\r\n\t\t\t\t\t *      \"editable\": true,\r\n\t\t\t\t\t *      \"profiles\": [{\r\n\t\t\t\t\t *          \"name\": \"Administrator\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015972\"\r\n\t\t\t\t\t *        },\r\n\t\t\t\t\t *        {\r\n\t\t\t\t\t *          \"name\": \"Standard\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015975\"\r\n\t\t\t\t\t *        }\r\n\t\t\t\t\t *      ],\r\n\t\t\t\t\t *      \"filter_supported\": true,\r\n\t\t\t\t\t *      \"web_link\": null,\r\n\t\t\t\t\t *      \"sequence_number\": 4,\r\n\t\t\t\t\t *      \"singular_label\": \"Lead\",\r\n\t\t\t\t\t *      \"viewable\": true,\r\n\t\t\t\t\t *      \"api_supported\": true,\r\n\t\t\t\t\t *      \"api_name\": \"Leads\",\r\n\t\t\t\t\t *      \"quick_create\": true,\r\n\t\t\t\t\t *      \"modified_by\": {\r\n\t\t\t\t\t *        \"name\": \"NareshAutomation\",\r\n\t\t\t\t\t *        \"id\": \"457154000000148011\"\r\n\t\t\t\t\t *      },\r\n\t\t\t\t\t *      \"generated_type\": \"default\",\r\n\t\t\t\t\t *      \"feeds_required\": false,\r\n\t\t\t\t\t *      \"scoring_supported\": true,\r\n\t\t\t\t\t *      \"arguments\": [],\r\n\t\t\t\t\t *      \"module_name\": \"Leads\",\r\n\t\t\t\t\t *      \"business_card_field_limit\": 5,\r\n\t\t\t\t\t *      \"parent_module\": {}\r\n\t\t\t\t\t *    },\r\n\t\t\t\t\t *    {\r\n\t\t\t\t\t *      \"global_search_supported\": true,\r\n\t\t\t\t\t *      \"deletable\": true,\r\n\t\t\t\t\t *      \"creatable\": true,\r\n\t\t\t\t\t *      \"modified_time\": null,\r\n\t\t\t\t\t *      \"plural_label\": \"Accounts\",\r\n\t\t\t\t\t *      \"presence_sub_menu\": true,\r\n\t\t\t\t\t *      \"id\": \"457154000000000127\",\r\n\t\t\t\t\t *      \"visible\": true,\r\n\t\t\t\t\t *      \"visibility\": 1,\r\n\t\t\t\t\t *      \"convertable\": false,\r\n\t\t\t\t\t *      \"editable\": true,\r\n\t\t\t\t\t *      \"profiles\": [{\r\n\t\t\t\t\t *          \"name\": \"Administrator\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015972\"\r\n\t\t\t\t\t *        },\r\n\t\t\t\t\t *        {\r\n\t\t\t\t\t *          \"name\": \"Standard\",\r\n\t\t\t\t\t *          \"id\": \"457154000000015975\"\r\n\t\t\t\t\t *        }\r\n\t\t\t\t\t *      ],\r\n\t\t\t\t\t *      \"filter_supported\": true,\r\n\t\t\t\t\t *      \"web_link\": null,\r\n\t\t\t\t\t *      \"sequence_number\": 5,\r\n\t\t\t\t\t *      \"singular_label\": \"Account\",\r\n\t\t\t\t\t *      \"viewable\": true,\r\n\t\t\t\t\t *      \"api_supported\": true,\r\n\t\t\t\t\t *      \"api_name\": \"Accounts\",\r\n\t\t\t\t\t *      \"quick_create\": true,\r\n\t\t\t\t\t *      \"modified_by\": null,\r\n\t\t\t\t\t *      \"generated_type\": \"default\",\r\n\t\t\t\t\t *      \"feeds_required\": false,\r\n\t\t\t\t\t *      \"scoring_supported\": true,\r\n\t\t\t\t\t *      \"arguments\": [],\r\n\t\t\t\t\t *      \"module_name\": \"Accounts\",\r\n\t\t\t\t\t *      \"business_card_field_limit\": 5,\r\n\t\t\t\t\t *      \"parent_module\": {}\r\n\t\t\t\t\t *    }\r\n\t\t\t\t\t *  ]\r\n\t\t\t\t\t *}\r\n\t\t\t\t\t *\r\n                     */\r\n                    getModules: function () {\r\n                        const data = {\r\n                            type: 'MODULE_LIST'\r\n                        }\r\n                        return getMeta(data)\r\n                    },\r\n                    /**\r\n                     * @function getAssignmentRules\r\n                     * @memberof ZOHO.CRM.META\r\n                     * @description get Assignment rules details\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @returns {Promise} Resolved with data of Assignment rules matching with Entity\r\n                     * @example\r\n                     * ZOHO.CRM.META.getAssignmentRules({\"Entity\":\"Contacts\"}).then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     *\r\n                     *\r\n                     * //prints\r\n                     *\r\n                     *\r\n                     *{\r\n                     *  \"assignment_rules\": [\r\n                     *    {\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Leads\",\r\n                     *        \"id\": \"13000000000039\"\r\n                     *      },\r\n                     *      \"name\": \"Lead rule\",\r\n                     *      \"id\": \"13000000036019\",\r\n                     *      \"created_date\": \"2017-05-12\",\r\n                     *      \"created_by\": {\r\n                     *        \"name\": \" uk\",\r\n                     *        \"id\": \"13000000030480\"\r\n                     *      }\r\n                     *    },\r\n                     *    {\r\n                     *      \"module\": {\r\n                     *       \"api_name\": \"Leads\",\r\n                     *        \"id\": \"13000000000039\"\r\n                     *     },\r\n                     *      \"name\": \"Lead second entry\",\r\n                     *     \"id\": \"13000000036045\",\r\n                     *      \"created_date\": \"2017-05-12\",\r\n                     *      \"created_by\": {\r\n                     *        \"name\": \" uk\",\r\n                     *        \"id\": \"13000000030480\"\r\n                     *      }\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    getAssignmentRules: function (data) {\r\n                        data.type = 'ASSIGNMENT_RULES'\r\n                        return getMeta(data)\r\n                    },\r\n\r\n                    /**\r\n                     * @function getLayouts\r\n                     * @memberof ZOHO.CRM.META\r\n                     * @description get Layout details of a module\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {String} [config.Id] - layout ID.\r\n                     * @returns {Promise} Resolved with data of Assignment rules matching with Entity\r\n                     * @example\r\n                     * ZOHO.CRM.META.getLayouts({\"Entity\":\"Contacts\"}).then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     * @example\r\n                     * ZOHO.CRM.META.getLayouts({\"Entity\":\"Contacts\",\"LayoutId\":\"5000000000169\"}).then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     * @example\r\n                     * //prints\r\n                     *{\r\n                     *  \"layouts\": [\r\n                     *    {\r\n                     *      \"created_time\": null,\r\n                     *      \"modified_time\": null,\r\n                     *      \"visible\": true,\r\n                     *      \"name\": \"Standard\",\r\n                     *      \"modified_by\": null,\r\n                     *      \"profiles\": [\r\n                     *        {\r\n                     *          \"default\": true,\r\n                     *          \"name\": \"Administrator\",\r\n                     *          \"id\": \"3000000029725\"\r\n                     *        },\r\n                     *        {\r\n                     *          \"default\": true,\r\n                     *          \"name\": \"Standard\",\r\n                     *          \"id\": \"3000000029728\"\r\n                     *        }\r\n                     *      ],\r\n                     *      \"id\": \"3000000000169\",\r\n                     *      \"created_by\": null,\r\n                     *      \"sections\": [\r\n                     *        {\r\n                     *          \"display_label\": \"Contact Information\",\r\n                     *          \"sequence_number\": 1,\r\n                     *          \"column_count\": 2,\r\n                     *          \"name\": \"Contact Information\",\r\n                     *          \"fields\": [\r\n                     *            {\r\n                     *              \"json_type\": \"jsonobject\",\r\n                     *              \"field_label\": \"Contact Owner\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 8,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000673\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"SMOWNERID\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 1,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Owner\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"ownerlookup\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Lead Source\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 2,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000675\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"LEADSOURCE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 2,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Lead_Source\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"picklist\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [\r\n                     *                {\r\n                     *                  \"display_value\": \"-None-\",\r\n                     *                  \"sequence_number\": 1,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"-None-\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Advertisement\",\r\n                     *                  \"sequence_number\": 2,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Advertisement\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Cold Call\",\r\n                     *                  \"sequence_number\": 3,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Cold Call\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Employee Referral\",\r\n                     *                  \"sequence_number\": 4,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Employee Referral\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"External Referral\",\r\n                     *                  \"sequence_number\": 5,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"External Referral\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Partner\",\r\n                     *                  \"sequence_number\": 6,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Partner\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Public Relations\",\r\n                     *                  \"sequence_number\": 7,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Public Relations\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Trade Show\",\r\n                     *                  \"sequence_number\": 8,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Trade Show\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Web Form\",\r\n                     *                  \"sequence_number\": 9,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Web Form\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Search Engine\",\r\n                     *                  \"sequence_number\": 10,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Search Engine\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Facebook\",\r\n                     *                  \"sequence_number\": 11,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Facebook\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Twitter\",\r\n                     *                  \"sequence_number\": 12,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Twitter\"\r\n                     *                }\r\n                     *              ],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"First Name\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 27,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000677\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 40,\r\n                     *              \"column_name\": \"FIRSTNAME\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": false,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": true,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 3,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"First_Name\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Last Name\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": true,\r\n                     *              \"ui_type\": 127,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000679\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 80,\r\n                     *              \"column_name\": \"LASTNAME\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": true,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 4,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Last_Name\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Full Name\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000681\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 80,\r\n                     *              \"column_name\": \"FULLNAME\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": false,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": false\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 5,\r\n                     *              \"show_type\": 0,\r\n                     *              \"api_name\": \"Full_Name\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"jsonobject\",\r\n                     *              \"field_label\": \"Account Name\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 4,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000683\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {\r\n                     *                \"display_label\": \"Contacts\",\r\n                     *                \"api_name\": \"Contacts\",\r\n                     *                \"module\": {\r\n                     *                  \"api_name\": \"Accounts\",\r\n                     *                  \"id\": \"3000000000043\"\r\n                     *                },\r\n                     *                \"id\": \"3000000003935\"\r\n                     *              },\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"ACCOUNTID\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": true,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 6,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Account_Name\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"lookup\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"jsonobject\",\r\n                     *              \"field_label\": \"Vendor Name\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 9,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000685\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {\r\n                     *                \"display_label\": \"Contacts\",\r\n                     *                \"api_name\": \"Contacts\",\r\n                     *                \"module\": {\r\n                     *                  \"api_name\": \"Vendors\",\r\n                     *                  \"id\": \"3000000000099\"\r\n                     *                },\r\n                     *                \"id\": \"3000000012263\"\r\n                     *              },\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"VENDORID\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 7,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Vendor_Name\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"lookup\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Email\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 25,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000687\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 100,\r\n                     *              \"column_name\": \"EMAIL\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": true,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 8,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Email\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"email\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Title\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000691\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 100,\r\n                     *              \"column_name\": \"TITLE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 10,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Title\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Department\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000693\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 50,\r\n                     *              \"column_name\": \"DEPARTMENT\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 11,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Department\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Phone\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 33,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000695\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 50,\r\n                     *              \"column_name\": \"PHONE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": true,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 12,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Phone\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"phone\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Home Phone\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 33,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000697\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"HOMEPHONE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 13,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Home_Phone\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"phone\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Other Phone\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 33,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000699\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"OTHERPHONE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 14,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Other_Phone\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"phone\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Fax\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 35,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000701\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"FAX\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 15,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Fax\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Mobile\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 33,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000703\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"MOBILE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 16,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Mobile\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"phone\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Date of Birth\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 24,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000705\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 20,\r\n                     *              \"column_name\": \"BIRTHDAY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 17,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Date_of_Birth\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"date\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Assistant\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000707\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 50,\r\n                     *              \"column_name\": \"ASSISTANT\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 18,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Assistant\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Asst Phone\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 33,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000709\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"ASSISTANTPHONE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 19,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Asst_Phone\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"phone\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Reports To\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000711\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 50,\r\n                     *              \"column_name\": \"REPORTSTO\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 20,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Reports_To\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"boolean\",\r\n                     *              \"field_label\": \"Email Opt Out\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 301,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000713\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 5,\r\n                     *              \"column_name\": \"EMAILOPTOUT\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": false,\r\n                     *              \"sequence_number\": 21,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Email_Opt_Out\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"boolean\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Skype ID\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 37,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000715\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 50,\r\n                     *              \"column_name\": \"SKYPEIDENTITY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 22,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Skype_ID\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"jsonobject\",\r\n                     *              \"field_label\": \"Created By\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 20,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000717\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"SMCREATORID\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": false,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": false\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 23,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Created_By\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"ownerlookup\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"jsonobject\",\r\n                     *              \"field_label\": \"Modified By\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 20,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000719\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"MODIFIEDBY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": false,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": false\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 24,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Modified_By\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"ownerlookup\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Created Time\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 200,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000721\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"CREATEDTIME\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": false,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": false\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 25,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Created_Time\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"datetime\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Modified Time\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 200,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000723\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"MODIFIEDTIME\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": false,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": false\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 26,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Modified_Time\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"datetime\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Salutation\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 2,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000727\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"SALUTATION\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": false,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 28,\r\n                     *              \"show_type\": 8,\r\n                     *              \"api_name\": \"Salutation\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"picklist\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [\r\n                     *                {\r\n                     *                  \"display_value\": \"-None-\",\r\n                     *                  \"sequence_number\": 1,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"-None-\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Mr.\",\r\n                     *                  \"sequence_number\": 2,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Mr.\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Mrs.\",\r\n                     *                  \"sequence_number\": 3,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Mrs.\"\r\n                     *                },\r\n                     *                {\r\n                     *                  \"display_value\": \"Ms.\",\r\n                     *                  \"sequence_number\": 4,\r\n                     *                  \"maps\": [],\r\n                     *                  \"actual_value\": \"Ms.\"\r\n                     *                }\r\n                     *              ],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"boolean\",\r\n                     *              \"field_label\": \"Add to QuickBooks\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 301,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000729\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 5,\r\n                     *              \"column_name\": \"ADDTOQUICKBOOKS\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": false,\r\n                     *              \"sequence_number\": 29,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Add_to_QuickBooks\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"boolean\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Secondary Email\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 25,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000731\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 100,\r\n                     *              \"column_name\": \"ADDN_EMAIL\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 30,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Secondary_Email\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"email\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Last Activity Time\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 786,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000737\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 120,\r\n                     *              \"column_name\": \"LASTACTIVITYTIME\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": false,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": false\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 33,\r\n                     *              \"show_type\": 8,\r\n                     *              \"api_name\": \"Last_Activity_Time\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"datetime\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Twitter\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 22,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000739\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 50,\r\n                     *              \"column_name\": \"TWITTER\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 34,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Twitter\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            }\r\n                     *          ]\r\n                     *        },\r\n                     *        {\r\n                     *          \"display_label\": \"Address Information\",\r\n                     *          \"sequence_number\": 2,\r\n                     *          \"column_count\": 2,\r\n                     *          \"name\": \"Address Information\",\r\n                     *          \"fields\": [\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Mailing Street\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000747\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 250,\r\n                     *              \"column_name\": \"MAILINGSTREET\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 1,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Mailing_Street\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Other Street\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000749\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 250,\r\n                     *              \"column_name\": \"OTHERSTREET\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 2,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Other_Street\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Mailing City\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000751\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"MAILINGCITY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 3,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Mailing_City\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Other City\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000753\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"OTHERCITY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 4,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Other_City\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Mailing State\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000755\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"MAILINGSTATE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 5,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Mailing_State\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Other State\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000757\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"OTHERSTATE\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 6,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Other_State\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Mailing Zip\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000759\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"MAILINGZIP\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 7,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Mailing_Zip\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Other Zip\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000761\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"OTHERZIP\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 8,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Other_Zip\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Mailing Country\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000763\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"MAILINGCOUNTRY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 9,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Mailing_Country\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            },\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Other Country\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 1,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000765\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 30,\r\n                     *              \"column_name\": \"OTHERCOUNTRY\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 10,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Other_Country\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"text\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            }\r\n                     *          ]\r\n                     *        },\r\n                     *        {\r\n                     *          \"display_label\": \"Description Information\",\r\n                     *          \"sequence_number\": 3,\r\n                     *          \"column_count\": 1,\r\n                     *          \"name\": \"Description Information\",\r\n                     *          \"fields\": [\r\n                     *            {\r\n                     *              \"json_type\": \"string\",\r\n                     *              \"field_label\": \"Description\",\r\n                     *              \"tooltip\": null,\r\n                     *              \"created_source\": \"default\",\r\n                     *              \"required\": false,\r\n                     *              \"ui_type\": 3,\r\n                     *              \"read_only\": false,\r\n                     *              \"currency\": {},\r\n                     *              \"id\": \"3000000000767\",\r\n                     *              \"custom_field\": false,\r\n                     *              \"lookup\": {},\r\n                     *              \"visible\": true,\r\n                     *              \"length\": 1000,\r\n                     *              \"column_name\": \"DESCRIPTION\",\r\n                     *              \"view_type\": {\r\n                     *                \"view\": true,\r\n                     *                \"edit\": true,\r\n                     *                \"quick_create\": false,\r\n                     *                \"create\": true\r\n                     *              },\r\n                     *              \"default_value\": null,\r\n                     *              \"sequence_number\": 1,\r\n                     *              \"show_type\": 7,\r\n                     *              \"api_name\": \"Description\",\r\n                     *              \"unique\": {},\r\n                     *              \"data_type\": \"textarea\",\r\n                     *              \"formula\": {},\r\n                     *              \"decimal_place\": null,\r\n                     *              \"pick_list_values\": [],\r\n                     *              \"auto_number\": {}\r\n                     *            }\r\n                     *          ]\r\n                     *        },\r\n                     *        {\r\n                     *          \"display_label\": \"Score Summary\",\r\n                     *          \"sequence_number\": 4,\r\n                     *          \"column_count\": 2,\r\n                     *          \"name\": \"Score Summary\",\r\n                     *          \"fields\": []\r\n                     *        }\r\n                     *      ],\r\n                     *      \"status\": 0\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    getLayouts: function (data) {\r\n                        data.id = data.id ? data.id : data.LayoutId\r\n                        data.type = data.Id ? 'LAYOUT' : 'LAYOUTS'\r\n                        return getMeta(data)\r\n                    },\r\n\r\n                    /**\r\n                     * @function getRelatedList\r\n                     * @memberof ZOHO.CRM.META\r\n                     * @description get RelatedList meta info of a module\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @returns {Promise} Resolved with data of Assignment rules matching with Entity\r\n                     * @example\r\n                     * ZOHO.CRM.META.getRelatedList({\"Entity\":\"Contacts\"}).then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     *  //prints\r\n                     *{\r\n                     *  \"related_lists\": [\r\n                     *    {\r\n                     *      \"display_label\": \"Attachments\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Attachments\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Attachments\",\r\n                     *        \"id\": \"3000000000111\"\r\n                     *      },\r\n                     *      \"name\": \"Attachments\",\r\n                     *      \"id\": \"3000000003968\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Attachments\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Deals\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Deals\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Deals\",\r\n                     *        \"id\": \"3000000000047\"\r\n                     *      },\r\n                     *      \"name\": \"Deals\",\r\n                     *      \"id\": \"3000000003974\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Deals\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Notes\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Notes\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Notes\",\r\n                     *        \"id\": \"3000000000069\"\r\n                     *      },\r\n                     *      \"name\": \"Notes\",\r\n                     *      \"id\": \"3000000003971\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Notes\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Open Activities\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Activities\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Activities\",\r\n                     *        \"id\": \"3000000000049\"\r\n                     *      },\r\n                     *      \"name\": \"Activities\",\r\n                     *      \"id\": \"3000000003965\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Activities\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Closed Activities\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Activities_History\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Activities\",\r\n                     *        \"id\": \"3000000000049\"\r\n                     *      },\r\n                     *      \"name\": \"Activities History\",\r\n                     *      \"id\": \"3000000003962\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Activities_History\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Products\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Products\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Products\",\r\n                     *        \"id\": \"3000000000097\"\r\n                     *      },\r\n                     *      \"name\": \"Products\",\r\n                     *      \"id\": \"3000000003977\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Products\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Invited Events\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Invited_Events\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Events\",\r\n                     *        \"id\": \"3000000000065\"\r\n                     *      },\r\n                     *      \"name\": \"Invited Events\",\r\n                     *      \"id\": \"3000000004001\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Invited_Events\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Cases\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Cases\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Cases\",\r\n                     *        \"id\": \"3000000000093\"\r\n                     *      },\r\n                     *      \"name\": \"Cases\",\r\n                     *      \"id\": \"3000000003980\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Cases\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Quotes\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Quotes\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Quotes\",\r\n                     *        \"id\": \"3000000000103\"\r\n                     *      },\r\n                     *      \"name\": \"Quotes\",\r\n                     *      \"id\": \"3000000003983\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Quotes\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Sales Orders\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"SalesOrders\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Sales_Orders\",\r\n                     *        \"id\": \"3000000000105\"\r\n                     *      },\r\n                     *      \"name\": \"SalesOrders\",\r\n                     *      \"id\": \"3000000003986\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/SalesOrders\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Purchase Orders\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"PurchaseOrders\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Purchase_Orders\",\r\n                     *        \"id\": \"3000000000107\"\r\n                     *      },\r\n                     *      \"name\": \"PurchaseOrders\",\r\n                     *      \"id\": \"3000000003989\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/PurchaseOrders\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Invoices\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Invoices\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Invoices\",\r\n                     *        \"id\": \"3000000000109\"\r\n                     *      },\r\n                     *      \"name\": \"Invoices\",\r\n                     *      \"id\": \"3000000003995\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Invoices\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Campaigns\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Campaigns\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Campaigns\",\r\n                     *        \"id\": \"3000000000055\"\r\n                     *      },\r\n                     *      \"name\": \"Campaigns\",\r\n                     *      \"id\": \"3000000003998\",\r\n                     *      \"href\": \"Contacts/{ENTITYID}/Campaigns\",\r\n                     *      \"type\": \"default\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"display_label\": \"Social\",\r\n                     *      \"visible\": true,\r\n                     *      \"api_name\": \"Social\",\r\n                     *      \"module\": {\r\n                     *        \"api_name\": \"Social\",\r\n                     *        \"id\": \"3000000000087\"\r\n                     *      },\r\n                     *      \"name\": \"Social\",\r\n                     *      \"id\": \"3000000004067\",\r\n                     *      \"href\": null,\r\n                     *      \"type\": \"default\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    getRelatedList: function (data) {\r\n                        data.type = 'RELATED_LIST'\r\n                        return getMeta(data)\r\n                    },\r\n\r\n                    /**\r\n                     * @function getCustomViews\r\n                     * @memberof ZOHO.CRM.META\r\n                     * @description get Custom Views of a module\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {String} [config.Id] - layout ID.\r\n                     * @returns {Promise} Resolved with data of Assignment rules matching with Entity\r\n                     * @example\r\n                     * ZOHO.CRM.META.getCustomViews({\"Entity\":\"Contacts\"}).then(function(data){\r\n                     * console.log(data);\r\n                     * });\r\n                     * //prints\r\n                     *{\r\n                     * \"categories\": [\r\n                     *   {\r\n                     *     \"display_value\": \"Created By Me\",\r\n                     *     \"actual_value\": \"created_by_me\"\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"Shared With Me\",\r\n                     *     \"actual_value\": \"shared_with_me\"\r\n                     *   }\r\n                     * ],\r\n                     * \"custom_views\": [\r\n                     *   {\r\n                     *     \"display_value\": \"All Contacts\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": true,\r\n                     *     \"system_name\": \"ALLVIEWS\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"All Contacts\",\r\n                     *     \"id\": \"3000000028135\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"Mailing Labels\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"ALLVIEWS\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"Mailing Labels\",\r\n                     *     \"id\": \"3000000028144\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"My Contacts\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"MYVIEWS\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"My Contacts\",\r\n                     *     \"id\": \"3000000028333\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"New Last Week\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"lastweek\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"New Last Week\",\r\n                     *     \"id\": \"3000000028183\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"New This Week\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"thisweek\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"New This Week\",\r\n                     *     \"id\": \"3000000028171\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"Recently Created Contacts\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"RECENTLYCREATED\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"Recently Created Contacts\",\r\n                     *     \"id\": \"3000000028195\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"Recently Modified Contacts\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"RECENTLYMODIFIED\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"Recently Modified Contacts\",\r\n                     *     \"id\": \"3000000028207\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"Unread Contacts\",\r\n                     *     \"offline\": true,\r\n                     *     \"default\": false,\r\n                     *     \"system_name\": \"UNREADVIEWS\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"name\": \"Unread Contacts\",\r\n                     *     \"id\": \"3000000028156\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"favorite\": null\r\n                     *   }\r\n                     * ],\r\n                     * \"info\": {\r\n                     *   \"per_page\": 8,\r\n                     *   \"default\": \"3000000028135\",\r\n                     *   \"count\": 8,\r\n                     *   \"page\": 1,\r\n                     *   \"more_records\": false\r\n                     * }\r\n                     *}\r\n                     *@example\r\n                     *ZOHO.CRM.META.getCustomViews({\"Entity\":\"Contacts\",\"Id\":\"3000000028135\"}).then(function(data){\r\n                     *\tconsole.log(data);\r\n                     *});\r\n                     * //prints\r\n                     *{\r\n                     * \"categories\": [\r\n                     *   {\r\n                     *     \"display_value\": \"Created By Me\",\r\n                     *     \"actual_value\": \"created_by_me\"\r\n                     *   },\r\n                     *   {\r\n                     *     \"display_value\": \"Shared With Me\",\r\n                     *     \"actual_value\": \"shared_with_me\"\r\n                     *   }\r\n                     * ],\r\n                     * \"custom_views\": [\r\n                     *   {\r\n                     *     \"display_value\": \"All Contacts\",\r\n                     *     \"criteria\": null,\r\n                     *     \"system_name\": \"ALLVIEWS\",\r\n                     *     \"module\": {\r\n                     *       \"api_name\": \"Contacts\",\r\n                     *       \"id\": \"3000000000045\"\r\n                     *     },\r\n                     *     \"sort_by\": null,\r\n                     *     \"offline\": true,\r\n                     *     \"default\": true,\r\n                     *     \"name\": \"All Contacts\",\r\n                     *     \"id\": \"3000000028135\",\r\n                     *     \"category\": \"shared_with_me\",\r\n                     *     \"fields\": [\r\n                     *       {\r\n                     *         \"api_name\": \"Full_Name\",\r\n                     *         \"id\": \"3000000000681\"\r\n                     *       },\r\n                     *       {\r\n                     *         \"api_name\": \"Account_Name\",\r\n                     *         \"id\": \"3000000000683\"\r\n                     *       },\r\n                     *       {\r\n                     *         \"api_name\": \"Email\",\r\n                     *         \"id\": \"3000000000687\"\r\n                     *       },\r\n                     *       {\r\n                     *         \"api_name\": \"Phone\",\r\n                     *         \"id\": \"3000000000695\"\r\n                     *       },\r\n                     *       {\r\n                     *         \"api_name\": \"Owner\",\r\n                     *         \"id\": \"3000000000673\"\r\n                     *       }\r\n                     *     ],\r\n                     *     \"favorite\": null,\r\n                     *     \"sort_order\": null\r\n                     *   }\r\n                     * ]\r\n                     *}\r\n                     *\r\n                     */\r\n                    getCustomViews: function (data) {\r\n                        data.type = data.Id ? 'CUSTOM_VIEW' : 'CUSTOM_VIEWS'\r\n                        return getMeta(data)\r\n                    }\r\n                },\r\n                /**\r\n                 * @namespace ZOHO.CRM.API\r\n                 */\r\n                API: {\r\n                    /**\r\n                     * @function addNotes\r\n                     * @description Add Notes to a record\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {Long} config.RecordID - RecordID to associate the notes.\r\n                     * @param {String} config.Title - Notes Title.\r\n                     * @param {String} config.Content - Notes Content.\r\n                     * @returns {Promise} Resolved with notes creation status\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.addNotes({Entity:\"Leads\",RecordID:\"1475615000000292033\",Title:\"Notes Title\",Content:\"TitleContent\"}).then(function(data){\r\n                     *  console.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"Modified_Time\": \"2017-12-20T14:08:56+05:30\",\r\n                     *        \"Modified_By\": {\r\n                     *          \"name\": \"NareshTesting\",\r\n                     *          \"id\": \"1000000031157\"\r\n                     *        },\r\n                     *        \"Created_Time\": \"2017-12-20T14:08:56+05:30\",\r\n                     *        \"id\": \"1000000044101\",\r\n                     *        \"Created_By\": {\r\n                     *          \"name\": \"NareshTesting\",\r\n                     *          \"id\": \"1000000031157\"\r\n                     *        }\r\n                     *      },\r\n                     *      \"message\": \"record added\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    addNotes: function (data) {\r\n                        const Entity = data.Entity\r\n                        const RelatedEntity = 'NOTES'\r\n                        const RecordID = data.RecordID\r\n                        const content = {\r\n                            data: [{\r\n                                Note_Title: data.Title,\r\n                                Note_Content: data.Content\r\n                            }]\r\n                        }\r\n                        return createRecord(Entity, content, RecordID, RelatedEntity)\r\n                    },\r\n                    addNotesAttachment: function (data) {\r\n                        const Entity = data.Entity\r\n                        const RecordID = data.RecordID\r\n                        const RelatedRecordID = data.RelatedRecordID\r\n                        const APIData = {\r\n                            Files: {\r\n                                FileName: File.Name,\r\n                                FileData: File.Content\r\n                            }\r\n                        }\r\n                        return updateNotes(Entity, RecordID, RelatedRecordID, APIData)\r\n                    },\r\n                    /**\r\n                     * @function insertRecord\r\n                     * @description Insert record to a modue\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {list} config.Trigger - The trigger input can be \"workflow\", \"approval\" or \"blueprint\". If the trigger is not mentioned, the workflows, approvals and blueprints related to the API will get executed. Enter the trigger value as [] to not execute the workflows\r\n                     * @param {Object} config.APIData - RecordID to associate the notes.\r\n                     * @return {Promise} Resolved with response data\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * var recordData = {\r\n                     *         \"Company\": \"Zylker\",\r\n                     *         \"Last_Name\": \"Peterson\"\r\n                     *   }\r\n                     * ZOHO.CRM.API.insertRecord({Entity:\"Leads\",APIData:recordData,Trigger:[\"workflow\"]}).then(function(data){\r\n                     *\tconsole.log(data);\r\n                     *\t});\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"Modified_Time\": \"2017-12-22T03:24:39+05:30\",\r\n                     *        \"Modified_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        },\r\n                     *        \"Created_Time\": \"2017-12-22T03:24:39+05:30\",\r\n                     *        \"id\": \"3000000040011\",\r\n                     *        \"Created_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        }\r\n                     *      },\r\n                     *      \"message\": \"record added\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     * @example\r\n                     * var data = [\r\n                     * {\r\n                     *         \"Company\": \"ZohoCorp\",\r\n                     *         \"Last_Name\": \"Babu\"\r\n                     * },\r\n                     * {\r\n                     * \t\"Company\": \"ZohoCorp\",\r\n                     *     \t\"Last_Name\": \"Naresh\"\r\n                     * }\r\n                     * ];\r\n                     * ZOHO.CRM.API.insertRecord({Entity:\"Leads\",APIData:data,Trigger:[\"workflow\"]}).then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"Modified_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *        \"Modified_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        },\r\n                     *        \"Created_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *        \"id\": \"3000000040015\",\r\n                     *        \"Created_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        }\r\n                     *      },\r\n                     *      \"message\": \"record added\",\r\n                     *      \"status\": \"success\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"Modified_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *        \"Modified_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        },\r\n                     *        \"Created_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *        \"id\": \"3000000040016\",\r\n                     *        \"Created_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        }\r\n                     *      },\r\n                     *      \"message\": \"record added\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    insertRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const APIData = data.APIData\r\n                        APIData.trigger = data.Trigger\r\n                        return createRecord(Entity, APIData)\r\n                    },\r\n                    /**\r\n                     * @function upsertRecord\r\n                     * @description Insert record or update matching existing record\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {list} config.Trigger - The trigger input can be \"workflow\", \"approval\" or \"blueprint\". If the trigger is not mentioned, the workflows, approvals and blueprints related to the API will get executed. Enter the trigger value as [] to not execute the workflows\r\n                     * @param {Object} config.APIData - insert json details\r\n                     * @param {Object} config.duplicate_check_fields  - this param will update existing record,add multiple fields with comma separated\r\n                     * @return {Promise} Resolved with response data\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     *var data = [\r\n                     *{\r\n                     *        \"Company\": \"zoho\",\r\n                     *        \"Last_Name\": \"zylker\",\r\n                     *    \"Email\":\"zylker@gmail.com\",\r\n                     *    \"Mobile\":\"1234567890\",\r\n                     *    \"Website\":\"https://www.zoho.com\"\r\n                     *\r\n                     *},\r\n                     *{\r\n                     *  \"Company\": \"zoho\",\r\n                     *      \"Last_Name\": \"zylker\",\r\n                     *  \"Email\":\"zylkder@gmail.com\",\r\n                     *  \"Website\":\"http://www.google.com\",\r\n                     *  \"Mobile\":\"8393749473934739\"\r\n                     *},\r\n                     *];\r\n                     *ZOHO.CRM.API.upsertRecord({Entity:\"Leads\",APIData:data,duplicate_check_fields:[\"Website\",\"Mobile\"],Trigger : [\"workflow\"]}).then(function(data){\r\n                     *  console.log(data);\r\n                     *});\r\n                     *\r\n                     * //prints\r\n                     *[\r\n                     *  {\r\n                     *    \"code\": \"SUCCESS\",\r\n                     *    \"duplicate_field\": \"Mobile\",\r\n                     *    \"action\": \"update\",\r\n                     *    \"details\": {\r\n                     *      \"Modified_Time\": \"2018-10-11T12:06:47+05:30\",\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"test \",\r\n                     *        \"id\": \"111134000000033383\"\r\n                     *      },\r\n                     *      \"Created_Time\": \"2018-10-11T11:55:10+05:30\",\r\n                     *      \"id\": \"111134000000036225\",\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"test \",\r\n                     *        \"id\": \"111134000000033383\"\r\n                     *      }\r\n                     *    },\r\n                     *    \"message\": \"record updated\",\r\n                     *    \"status\": \"success\"\r\n                     *  },\r\n                     *  {\r\n                     *    \"code\": \"SUCCESS\",\r\n                     *    \"duplicate_field\": \"Website\",\r\n                     *    \"action\": \"update\",\r\n                     *    \"details\": {\r\n                     *      \"Modified_Time\": \"2018-10-11T12:06:47+05:30\",\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"test \",\r\n                     *        \"id\": \"111134000000033383\"\r\n                     *      },\r\n                     *      \"Created_Time\": \"2018-10-11T11:55:10+05:30\",\r\n                     *      \"id\": \"111134000000036226\",\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"test \",\r\n                     *        \"id\": \"111134000000033383\"\r\n                     *      }\r\n                     *    },\r\n                     *    \"message\": \"record updated\",\r\n                     *    \"status\": \"success\"\r\n                     *  }\r\n                     *]\r\n                     */\r\n                    upsertRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const APIData = data.APIData\r\n                        APIData.trigger = data.Trigger\r\n                        APIData.action = 'UPSERT'\r\n                        if (data.duplicate_check_fields && data.duplicate_check_fields instanceof Array) {\r\n                            APIData.duplicate_check_fields = data.duplicate_check_fields.join(',')\r\n                        }\r\n                        return createRecord(Entity, APIData)\r\n                    },\r\n                    /**\r\n                     * @function getRecord\r\n                     * @description get all Details of a record\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {String} config.RecordID - RecordID to associate the notes.\r\n                     * @return {Promise} Resolved with data of record matching with RecordID\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.getRecord({Entity:\"Leads\",RecordID:\"1000000030132\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"Owner\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Company\": \"ZohoCorp\",\r\n                     *      \"Email\": null,\r\n                     *      \"Description\": null,\r\n                     *      \"$currency_symbol\": \"$\",\r\n                     *      \"$photo_id\": null,\r\n                     *      \"Website\": null,\r\n                     *      \"Twitter\": null,\r\n                     *      \"$upcoming_activity\": null,\r\n                     *      \"Salutation\": null,\r\n                     *      \"Last_Activity_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *      \"First_Name\": null,\r\n                     *      \"Full_Name\": \"Naresh\",\r\n                     *      \"Lead_Status\": null,\r\n                     *      \"Industry\": null,\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Skype_ID\": null,\r\n                     *      \"$converted\": false,\r\n                     *      \"$process_flow\": false,\r\n                     *      \"Phone\": null,\r\n                     *      \"Street\": null,\r\n                     *      \"Zip_Code\": null,\r\n                     *      \"id\": \"3000000040016\",\r\n                     *      \"Email_Opt_Out\": false,\r\n                     *      \"$approved\": true,\r\n                     *      \"Designation\": null,\r\n                     *      \"$approval\": {\r\n                     *        \"delegate\": false,\r\n                     *        \"approve\": false,\r\n                     *        \"reject\": false\r\n                     *      },\r\n                     *      \"Modified_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *      \"Created_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *      \"$converted_detail\": {},\r\n                     *      \"$followed\": false,\r\n                     *      \"$editable\": true,\r\n                     *      \"City\": null,\r\n                     *      \"No_of_Employees\": 0,\r\n                     *      \"Mobile\": null,\r\n                     *      \"Last_Name\": \"Naresh\",\r\n                     *      \"State\": null,\r\n                     *      \"$status\": \"cv_1\",\r\n                     *      \"Lead_Source\": null,\r\n                     *      \"Country\": null,\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Fax\": null,\r\n                     *      \"Annual_Revenue\": 0,\r\n                     *      \"Secondary_Email\": null\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    getRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const RecordID = data.RecordID\r\n                        return getRecord(Entity, RecordID)\r\n                    },\r\n                    /**\r\n                    * @function getBluePrint\r\n                    * @description Get blueprint details\r\n                    * @param {object} config - configuration object\r\n                    * @param {String} config.Entity - SysRefName of the module.\r\n                    * @param {String} config.RecordID - RecordID to associate the notes.\r\n                    * @return {Promise} Resolved with data of record matching with RecordID\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    * var config =\r\n                    *{\r\n                    *  \"Entity\": \"Leads\",\r\n                    *  \"RecordID\": \"111126000000036019\"\r\n                    *}\r\n                    *\r\n                    *\r\n                    *ZOHO.CRM.API.getBluePrint(config).then(function(data){\r\n                    *  console.log(data)\r\n                    *})\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"blueprint\": {\r\n                    *    \"process_info\": {\r\n                    *      \"field_id\": \"111126000000000885\",\r\n                    *      \"is_continuous\": false,\r\n                    *      \"api_name\": \"Lead_Status\",\r\n                    *      \"continuous\": false,\r\n                    *      \"field_label\": \"Lead Status\",\r\n                    *      \"name\": \"Lprint\",\r\n                    *      \"column_name\": \"STATUS\",\r\n                    *      \"field_value\": \"Pre Qualified\",\r\n                    *      \"id\": \"111126000000035049\",\r\n                    *      \"field_name\": \"Lead Status\"\r\n                    *    },\r\n                    *    \"transitions\": [\r\n                    *      {\r\n                    *        \"next_transitions\": [\r\n                    *          {\r\n                    *            \"name\": \"lost lead\",\r\n                    *            \"id\": \"111126000000035025\"\r\n                    *          }\r\n                    *        ],\r\n                    *        \"data\": {},\r\n                    *        \"next_field_value\": \"Not Qualified\",\r\n                    *        \"name\": \"not qualify\",\r\n                    *        \"criteria_matched\": true,\r\n                    *        \"id\": \"111126000000035019\",\r\n                    *        \"fields\": [],\r\n                    *        \"criteria_message\": null,\r\n                    *        \"percent_partial_save\": 0\r\n                    *      },\r\n                    *      {\r\n                    *        \"next_transitions\": [],\r\n                    *        \"data\": {},\r\n                    *        \"next_field_value\": \"Contacted\",\r\n                    *        \"name\": \"contact\",\r\n                    *        \"criteria_matched\": true,\r\n                    *        \"id\": \"111126000000035007\",\r\n                    *        \"fields\": [],\r\n                    *        \"criteria_message\": null,\r\n                    *        \"percent_partial_save\": 0\r\n                    *      }\r\n                    *    ]\r\n                    *  }\r\n                    *}\r\n                    */\r\n                    getBluePrint: function (data) {\r\n                        const APIData = {\r\n                            Entity: data.Entity,\r\n                            RecordID: data.RecordID,\r\n                            action: 'GET_BLUEPRINT_STATUS'\r\n                        }\r\n                        return getBluePrint(APIData)\r\n                    },\r\n                    /**\r\n                    * @function updateBluePrint\r\n                    * @description update blueprint details for particular record.\r\n                    * @param {Object} config - Configuration Object.\r\n                    * @param {String} config.Entity - SysRefName of the module.\r\n                    * @param {String} config.RecordID - RecordID to associate the notes.\r\n                    * @param {object} config.BlueprintData - blueprint data to update\r\n                    * @return {Promise} Resolved with data of record matching with RecordID\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    * var BlueprintData =\r\n                    *{\r\n                    *  \"blueprint\": [\r\n                    *    {\r\n                    *      \"transition_id\": \"111126000000035019\",\r\n                    *      \"data\": {\r\n                    *        \"Phone\": \"8940372937\",\r\n                    *        \"Notes\": \"Updated via blueprint\"\r\n                    *      }\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    *\r\n                    * update attachment with blueprint\r\n                    *\r\n                    *\r\n                    * var BlueprintData =\r\n                    *{\r\n                    *  \"blueprint\": [\r\n                    *    {\r\n                    *      \"transition_id\": \"1000000031897\",\r\n                    *      \"data\": {\r\n                    *        \"Attachments\": {\r\n                    *          \"$file_id\": [\r\n                    *            \"59cf260313b6907ffc56957f4241bd94ba3e0b6aad53b50f8b38583a859d623a\",\r\n                    *            \"59cf260313b6907ffc56957f4241bd94ba3e0b6aad53b50f8b38583a859d624d\"\r\n                    *          ]\r\n                    *        }\r\n                    *      }\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    * update link with blueprint\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"blueprint\": [\r\n                    *    {\r\n                    *      \"transition_id\": \"2000000031536\",\r\n                    *      \"data\": {\r\n                    *        \"Attachments\": {\r\n                    *          \"$link_url\": \"facebook.com\"\r\n                    *        },\r\n                    *        \"Notes\": \"Dileep checking Notes outside\"\r\n                    *      }\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    *\r\n                    *var config=\r\n                    *{\r\n                    *  Entity:\"Leads\",\r\n                    *  RecordID:\"111126000000036019\",\r\n                    *  BlueprintData:BlueprintData\r\n                    *}\r\n                    *\r\n                    *\r\n                    *ZOHO.CRM.API.updateBluePrint(config).then(function(data){\r\n                    *   console.log(data);\r\n                    *});\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    * {\r\n                    *    \"code\": \"SUCCESS\",\r\n                    *    \"details\": {},\r\n                    *    \"message\": \"transition updated successfully\",\r\n                    *    \"status\": \"success\"\r\n                    * }\r\n                    */\r\n                    updateBluePrint: function (data) {\r\n                        const APIData = {\r\n                            Entity: data.Entity,\r\n                            RecordID: data.RecordID,\r\n                            BlueprintData: data.BlueprintData,\r\n                            action: 'UPDATE_BLUEPRINT_STATUS'\r\n                        }\r\n                        return getBluePrint(APIData)\r\n                    },\r\n                    /**\r\n                    *@function uploadFile\r\n                    *@description upload the files in to zoho server and return appname and id\r\n                    *@memberof ZOHO.CRM.API\r\n                    *@params {object} config - upload file details\r\n                    *@return {Promise} Resolved with data of file\r\n                    *@example\r\n                    *var file = $(\"#attachmentinput\")\r\n                    *var file = document.getElementById(\"attachmentinput\").files[0];\r\n                    *var fileType = file.type;\r\n                    *var config = {\r\n                    *    \"CONTENT_TYPE\": \"multipart\",\r\n                    *    \"PARTS\": [{\r\n                    *        \"headers\": {\r\n                    *            \"Content-Disposition\": \"file;\"\r\n                    *        },\r\n                    *        \"content\": \"__FILE__\"\r\n                    *    }],\r\n                    *    \"FILE\": {\r\n                    *        \"fileParam\": \"content\",\r\n                    *        \"file\": file\r\n                    *    }\r\n\r\n                    *}\r\n                    *\r\n                    *\r\n                    *ZOHO.CRM.API.uploadFile(config).then(function(data) {\r\n                    *    console.log(data);\r\n                    *})\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *{\r\n                    *  \"data\": [\r\n                    *    {\r\n                    *      \"code\": \"SUCCESS\",\r\n                    *      \"details\": {\r\n                    *        \"name\": \"desk.png\",\r\n                    *        \"id\": \"b12bb1b005f171ac797b3773040438ba7da026eb056f272271d511e95581689b\"\r\n                    *      },\r\n                    *      \"message\": \"desk.png uploaded Succeessfully\",\r\n                    *      \"status\": \"success\"\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    */\r\n                    uploadFile: function (data) {\r\n                        return uploadFile(data)\r\n                    },\r\n                    /**\r\n                    *@function getFile\r\n                    *@memberof ZOHO.CRM.API\r\n                    *@description get file from file id\r\n                    *@params {object} config - file id\r\n                    *@return {Promise} Resolved with data of file binary string\r\n                    *@example\r\n                    *var config = {\r\n                    *    id:\"b12bb1b005f171ac797b3773040438ba7da026eb056f272271d511e95581689b\"\r\n                    *}\r\n                    *\r\n                    *\r\n                    *ZOHO.CRM.API.getFile(config);\r\n                    */\r\n                    getFile: function (data) {\r\n                        return getFile(data)\r\n                    },\r\n                    /**\r\n                     * @function getAllRecords\r\n                     * @description get list of all records in a module\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {String} [config.sort_order] - To sort records. allowed values {asc|desc}\r\n                     * @param {String} [config.converted] - To get the list of converted records\r\n                     * @param {String} [config.approved] - To get the list of approved records\r\n                     * @param {String} [config.page] - To get the list of records from the respective pages\r\n                     * @param {String} [config.per_page] - To get the list of records available per page\r\n                     * @return {Promise} Resolved with data of record matching with RecordID\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.getAllRecords({Entity:\"Leads\",sort_order:\"asc\",per_page:2,page:1})\r\n                     *.then(function(data){\r\n                     *    console.log(data)\r\n                     *})\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"Owner\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Company\": \"Testrec1\",\r\n                     *      \"Email\": null,\r\n                     *      \"Description\": null,\r\n                     *      \"$currency_symbol\": \"$\",\r\n                     *      \"$photo_id\": null,\r\n                     *      \"Website\": null,\r\n                     *      \"Twitter\": null,\r\n                     *      \"$upcoming_activity\": null,\r\n                     *      \"Salutation\": null,\r\n                     *      \"Last_Activity_Time\": \"2017-12-16T09:54:37+05:30\",\r\n                     *      \"First_Name\": null,\r\n                     *      \"Full_Name\": \"Testrec1\",\r\n                     *      \"Lead_Status\": null,\r\n                     *      \"Industry\": null,\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Skype_ID\": null,\r\n                     *      \"$converted\": false,\r\n                     *      \"$process_flow\": false,\r\n                     *      \"Phone\": null,\r\n                     *      \"Street\": null,\r\n                     *      \"Zip_Code\": null,\r\n                     *      \"id\": \"3000000032009\",\r\n                     *      \"Email_Opt_Out\": false,\r\n                     *      \"$approved\": true,\r\n                     *      \"Designation\": null,\r\n                     *      \"$approval\": {\r\n                     *        \"delegate\": false,\r\n                     *        \"approve\": false,\r\n                     *        \"reject\": false\r\n                     *      },\r\n                     *      \"Modified_Time\": \"2017-12-16T09:54:37+05:30\",\r\n                     *      \"Created_Time\": \"2017-12-16T09:54:37+05:30\",\r\n                     *      \"$converted_detail\": {},\r\n                     *      \"$followed\": false,\r\n                     *      \"$editable\": true,\r\n                     *      \"City\": null,\r\n                     *      \"No_of_Employees\": null,\r\n                     *      \"Mobile\": null,\r\n                     *      \"Last_Name\": \"Testrec1\",\r\n                     *      \"State\": null,\r\n                     *      \"$status\": \"cv_1\",\r\n                     *      \"Lead_Source\": null,\r\n                     *      \"Country\": null,\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Fax\": null,\r\n                     *      \"Annual_Revenue\": null,\r\n                     *      \"Secondary_Email\": null\r\n                     *    },\r\n                     *    {\r\n                     *      \"Owner\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Company\": \"Testrec2\",\r\n                     *      \"Email\": null,\r\n                     *      \"Description\": null,\r\n                     *      \"$currency_symbol\": \"$\",\r\n                     *      \"$photo_id\": null,\r\n                     *      \"Website\": null,\r\n                     *      \"Twitter\": null,\r\n                     *      \"$upcoming_activity\": null,\r\n                     *      \"Salutation\": null,\r\n                     *      \"Last_Activity_Time\": \"2017-12-16T09:54:58+05:30\",\r\n                     *      \"First_Name\": null,\r\n                     *      \"Full_Name\": \"Testrec2\",\r\n                     *      \"Lead_Status\": null,\r\n                     *      \"Industry\": null,\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Skype_ID\": null,\r\n                     *      \"$converted\": false,\r\n                     *      \"$process_flow\": false,\r\n                     *      \"Phone\": null,\r\n                     *      \"Street\": null,\r\n                     *      \"Zip_Code\": null,\r\n                     *      \"id\": \"3000000032091\",\r\n                     *      \"Email_Opt_Out\": false,\r\n                     *      \"$approved\": true,\r\n                     *      \"Designation\": null,\r\n                     *      \"$approval\": {\r\n                     *        \"delegate\": false,\r\n                     *        \"approve\": false,\r\n                     *        \"reject\": false\r\n                     *      },\r\n                     *      \"Modified_Time\": \"2017-12-16T09:54:58+05:30\",\r\n                     *      \"Created_Time\": \"2017-12-16T09:54:58+05:30\",\r\n                     *      \"$converted_detail\": {},\r\n                     *      \"$followed\": false,\r\n                     *      \"$editable\": true,\r\n                     *      \"City\": null,\r\n                     *      \"No_of_Employees\": null,\r\n                     *      \"Mobile\": null,\r\n                     *      \"Last_Name\": \"Testrec2\",\r\n                     *      \"State\": null,\r\n                     *      \"$status\": \"c_1\",\r\n                     *      \"Lead_Source\": null,\r\n                     *      \"Country\": null,\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Fax\": null,\r\n                     *      \"Annual_Revenue\": null,\r\n                     *      \"Secondary_Email\": null\r\n                     *    }\r\n                     *  ],\r\n                     *  \"info\": {\r\n                     *    \"per_page\": 2,\r\n                     *    \"count\": 2,\r\n                     *    \"page\": 1,\r\n                     *    \"more_records\": true\r\n                     *  }\r\n                     *}\r\n                     */\r\n                    getAllRecords: function (data) {\r\n                        return getAllRecords(data)\r\n                    },\r\n                    /**\r\n                     * @function updateRecord\r\n                     * @description To update a record in a module\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {list} config.Trigger - The trigger input can be \"workflow\", \"approval\" or \"blueprint\". If the trigger is not mentioned, the workflows, approvals and blueprints related to the API will get executed. Enter the trigger value as [] to not execute the workflows\r\n                     * @param {String} config.APIData - Update Record Data.\r\n                     * @return {Promise} Resolved with data of update Record Response\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * var config={\r\n                     *   Entity:\"Leads\",\r\n                     *   APIData:{\r\n                     *         \"id\": \"1000000049031\",\r\n                     *         \"Company\": \"Zylker\",\r\n                     *         \"Last_Name\": \"Peterson\"\r\n                     *   },\r\n                     *   Trigger:[\"workflow\"]\r\n                     * }\r\n                     * ZOHO.CRM.API.updateRecord(config)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"Modified_Time\": \"2017-12-22T03:29:57+05:30\",\r\n                     *        \"Modified_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        },\r\n                     *        \"Created_Time\": \"2017-12-22T03:27:23+05:30\",\r\n                     *        \"id\": \"3000000040016\",\r\n                     *        \"Created_By\": {\r\n                     *          \"name\": \"NareshTesting \",\r\n                     *          \"id\": \"3000000031045\"\r\n                     *        }\r\n                     *      },\r\n                     *      \"message\": \"record updated\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    updateRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const APIData = data.APIData\r\n                        APIData.trigger = data.Trigger\r\n                        return updateRecord(Entity, APIData)\r\n                    },\r\n                    /**\r\n                     * @function deleteRecord\r\n                     * @description To delete a record from a module\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.Entity - SysRefName of the module.\r\n                     * @param {String} config.RecordID - RecordID to associate the notes.\r\n                     * @return {Promise} Resolved with Response to update record\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.deleteRecord({Entity:\"Leads\",RecordID: \"1000000049031\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"id\": \"3000000040015\"\r\n                     *      },\r\n                     *      \"message\": \"record deleted\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    deleteRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const recordID = data.RecordID\r\n                        return deleteRecord(Entity, recordID)\r\n                    },\r\n                    /**\r\n                     * @function searchRecord\r\n                     * @description To retrieve the records that matches your search criteria\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.Entity - SysRefName of module\r\n                     * @param {String} config.Type - Allowed values \"email|phone|word|criteria\"\r\n                     * @param {String} config.Query - query String\r\n                     * @param {boolean} config.delay - query String\r\n                     * @param {String} page - Pagination - Page number\r\n                     * @param {String} per_page - Pagination - per page limit\r\n                     * @return {Promise} Resolved with search result\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.searchRecord({Entity:\"Leads\",Type:\"phone\",Query:\"123456789\",delay:false})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * @example\r\n                     * ZOHO.CRM.API.searchRecord({Entity:\"Leads\",Type:\"email\",Query:\"test@zoho.com\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * @example\r\n                     * ZOHO.CRM.API.searchRecord({Entity:\"Leads\",Type:\"word\",Query:\"ZohoCrop\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * @example\r\n                     * ZOHO.CRM.API.searchRecord({Entity:\"Leads\",Type:\"criteria\",Query:\"(Company:equals:Zoho)\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * @example\r\n                     * ZOHO.CRM.API.searchRecord({Entity:\"Leads\",Type:\"criteria\",Query:\"((Company:equals:Zoho)or(Company:equals:zylker))\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     */\r\n                    searchRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const Type = data.Type\r\n                        const Query = data.Query\r\n                        const page = data.page\r\n                        const per_page = data.per_page\r\n                        const delay = data.delay\r\n                        return searchRecord(Entity, Type, Query, page, per_page, delay)\r\n                    },\r\n                    /**\r\n                    * @function getAllActions\r\n                    * @description We can view all the available actions that can be performed on a particular record.\r\n                    * @param {object} config - Configuration Object\r\n                    * @param {String} config.Entity - SysRefname of module\r\n                    * @param {String} config.RecordID - id of the particular record.\r\n                    * @return {Promise} Resolved List of actions be the specified module record.\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    * var config = {\r\n                    * \tEntity: \"Leads\",\r\n                    * \tRecordID : \"518440000000222778\"\r\n                    * }\r\n                    * ZOHO.CRM.API.getAllActions(config)\r\n                    * .then(function(data){\r\n                    *     console.log(data)\r\n                    * })\r\n                    * //prints\r\n                    *\r\n                    *{\r\n                    *  \"actions\": [\r\n                    *    {\r\n                    *      \"http_method\": \"GET\",\r\n                    *      \"name\": \"custom_links\",\r\n                    *      \"href\": \"/v2/Leads/111155000000036014/actions/custom_links\"\r\n                    *    },\r\n                    *    {\r\n                    *      \"http_method\": \"POST\",\r\n                    *      \"name\": \"change_owner\",\r\n                    *      \"href\": \"/v2/Leads/111155000000036014/actions/change_owner\"\r\n                    *    },\r\n                    *    {\r\n                    *      \"http_method\": \"POST\",\r\n                    *      \"name\": \"approvals\",\r\n                    *      \"href\": \"/v2/Leads/111155000000036014/actions/approvals\",\r\n                    *      \"params\": [\r\n                    *        {\r\n                    *          \"name\": \"action\",\r\n                    *          \"type\": \"text\",\r\n                    *          \"value\": [\r\n                    *            \"approve\",\r\n                    *            \"delegate\",\r\n                    *            \"reject\",\r\n                    *            \"resubmit\"\r\n                    *          ]\r\n                    *        },\r\n                    *        {\r\n                    *          \"name\": \"comments\",\r\n                    *          \"type\": \"text\"\r\n                    *        }\r\n                    *      ]\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    *\r\n                    *\r\n                    *The above response is obtained if the record is waiting for the approval and if the caller has administrator access.\r\n                    *If the record has no valid approval pending or the record id is invalid, the following is the response obtained.\r\n                    *\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"actions\": [\r\n                    *    {\r\n                    *      \"http_method\": \"GET\",\r\n                    *      \"name\": \"custom_links\",\r\n                    *      \"href\": \"/v2/Leads/111155000000036014/actions/custom_links\"\r\n                    *    },\r\n                    *    {\r\n                    *      \"http_method\": \"POST\",\r\n                    *      \"name\": \"change_owner\",\r\n                    *      \"href\": \"/v2/Leads/111155000000036014/actions/change_owner\"\r\n                    *    }\r\n                    *  ]\r\n                    *}\r\n                    *\r\n                    */\r\n                    getAllActions: function (data) {\r\n                        data.action = 'GET_ALL_ACTIONS'\r\n                        return getAllActions(data)\r\n                    },\r\n                    /**\r\n                    * @function getApprovalRecords\r\n                    * @description This method is called by the one who has to approve.If it is called by others, they will get 204 response.\r\n                    * <br><br><b>\"others_awaiting\"</b> gives the list of all approvals pending regardless of who has to approve it. Usually, Super Admin and administrator will be able to use this API whereas standard user will still get a 204 empty response.<br><br>\r\n                    * @param {object} config - configuration object\r\n                    * @param {string} config.type - Allowed values \"awaiting | others_awaiting\"\r\n                    * @return {Promise} Resolved List of records for waiting the approval.\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    *\r\n                    *Example 1\r\n                    *\r\n                    * ZOHO.CRM.API.getApprovalRecords()\r\n                    * .then(function(data){\r\n                    *     console.log(data)\r\n                    * })\r\n                    *\r\n                    *It returns the pending approval records of the current user\r\n                    *\r\n                    *\r\n                    *Example 2\r\n                    * var config = {type:\"others_awaiting\"}\r\n                    *\r\n                    *\r\n                    * ZOHO.CRM.API.getApprovalRecords(config)\r\n                    * .then(function(data){\r\n                    *     console.log(data)\r\n                    * })\r\n                    *\r\n                    *It returns the pending approval records which should be approve by other user.\r\n                    * //prints\r\n                    *\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"data\": [\r\n                    *    {\r\n                    *      \"owner\": {\r\n                    *        \"phone\": null,\r\n                    *        \"name\": \"milestone2 \",\r\n                    *        \"mobile\": null,\r\n                    *        \"id\": \"111155000000032023\",\r\n                    *        \"email\": \"uk@zylker.com\"\r\n                    *      },\r\n                    *      \"initiated_time\": \"2018-07-16T10:16:54+05:30\",\r\n                    *      \"module\": \"Leads\",\r\n                    *      \"rule\": {\r\n                    *        \"name\": \"Name\",\r\n                    *        \"id\": \"111155000000036006\"\r\n                    *      },\r\n                    *      \"id\": \"111155000000036021\",\r\n                    *      \"type\": \"approval\",\r\n                    *      \"entity\": {\r\n                    *        \"name\": \"uk\",\r\n                    *        \"id\": \"111155000000036014\"\r\n                    *      },\r\n                    *      \"default_layout\": true,\r\n                    *      \"waiting_for\": {\r\n                    *        \"name\": \"uk \",\r\n                    *        \"id\": \"111155000000035012\"\r\n                    *      }\r\n                    *    }\r\n                    *  ],\r\n                    *  \"info\": {\r\n                    *    \"per_page\": 200,\r\n                    *    \"count\": 1,\r\n                    *    \"page\": 1,\r\n                    *    \"more_records\": false\r\n                    *  }\r\n                    *}\r\n                    *\r\n                    */\r\n                    getApprovalRecords: function (data) {\r\n                        const newdata = {}\r\n                        if (data) {\r\n                            data.action = 'GET_APPROVAL_RECORDS'\r\n                        } else {\r\n                            newdata.action = 'GET_APPROVAL_RECORDS'\r\n                            data = newdata\r\n                        }\r\n                        return getAllActions(data)\r\n                    },\r\n                    /**\r\n                    * @function getApprovalById\r\n                    * @description To get details of the particular approval.\r\n                    * @param {object} config - configuration object\r\n                    * @param {string} config.id - id of the approval\r\n                    * @return {Promise} Resolved details of the approval.\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    *var config = {\r\n                    *       id:\"518440000000222786\"\r\n                    *}\r\n                    *\r\n                    *\r\n                    *ZOHO.CRM.API.getApprovalById(config).then(function(d){\r\n                    *   console.log(d);\r\n                    *})\r\n                    *\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"data\": [\r\n                    *    {\r\n                    *      \"owner\": {\r\n                    *        \"phone\": null,\r\n                    *        \"name\": \"milestone2 \",\r\n                    *        \"mobile\": null,\r\n                    *        \"id\": \"111155000000032023\",\r\n                    *        \"history\": [],\r\n                    *        \"email\": \"uk@zylker.com\"\r\n                    *      },\r\n                    *      \"initiated_time\": \"2018-07-16T10:16:54+05:30\",\r\n                    *      \"criteria\": [\r\n                    *        {\r\n                    *          \"api_name\": \"Annual_Revenue\",\r\n                    *          \"field_label\": \"Annual Revenue\",\r\n                    *          \"value\": \"$1.00\"\r\n                    *        }\r\n                    *      ],\r\n                    *      \"module\": \"Leads\",\r\n                    *      \"rule\": {\r\n                    *        \"name\": \"Name\",\r\n                    *        \"id\": \"111155000000036006\"\r\n                    *      },\r\n                    *      \"id\": \"518440000000222786\",\r\n                    *      \"type\": \"approval\",\r\n                    *      \"entity\": {\r\n                    *        \"name\": \"uk\",\r\n                    *        \"id\": \"111155000000036014\"\r\n                    *      },\r\n                    *      \"default_layout\": true,\r\n                    *      \"waiting_for\": {\r\n                    *        \"name\": \"uk \",\r\n                    *        \"id\": \"111155000000035012\"\r\n                    *      }\r\n                    *    }\r\n                    *  ],\r\n                    *  \"info\": {\r\n                    *    \"per_page\": 200,\r\n                    *    \"count\": 1,\r\n                    *    \"page\": 1,\r\n                    *    \"more_records\": false\r\n                    *  }\r\n                    *}\r\n                    *\r\n                    */\r\n                    getApprovalById: function (data) {\r\n                        data.action = 'GET_APPROVALBYID'\r\n                        return getAllActions(data)\r\n                    },\r\n                    /**\r\n                    * @function getApprovalsHistory\r\n                    * @description View the history of records put up for approval\r\n                    * @return {Promise} Resolved List of records for waiting the approval.\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    *\r\n                    *ZOHO.CRM.API.getApprovalsHistory().then(function(data){\r\n                    *    console.log(data);\r\n                    *});\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"data\": [\r\n                    *    {\r\n                    *      \"audit_time\": \"2018-07-16T15:46:54+05:30\",\r\n                    *      \"done_by\": {\r\n                    *        \"name\": \"milestone2 \",\r\n                    *        \"id\": \"111155000000032023\"\r\n                    *      },\r\n                    *      \"module\": \"Leads\",\r\n                    *      \"record\": {\r\n                    *        \"name\": \"uk\",\r\n                    *        \"id\": \"111155000000036014\"\r\n                    *      },\r\n                    *      \"related_module\": null,\r\n                    *      \"action\": \"Submitted\",\r\n                    *      \"rule\": \"111155000000036006\",\r\n                    *      \"account\": null,\r\n                    *      \"related_name\": \"milestone2 \",\r\n                    *      \"territory\": null\r\n                    *    }\r\n                    *  ],\r\n                    *  \"info\": {\r\n                    *    \"per_page\": 200,\r\n                    *    \"count\": 1,\r\n                    *    \"page\": 1,\r\n                    *    \"more_records\": false\r\n                    *  }\r\n                    *}\r\n                    *\r\n                    *\r\n                    */\r\n                    getApprovalsHistory: function () {\r\n                        const data = {}\r\n                        data.action = 'GET_APPROVALS_HISTORY'\r\n                        return getAllActions(data)\r\n                    },\r\n                    /**\r\n                    * @function approveRecord\r\n                    * @description approve the record\r\n                    * @param {object} config - configuration object\r\n                    * @param {string} config.Entity - SysRefName of module\r\n                    * @param {string} config.RecordID - id of the record.\r\n                    * @param {string} config.actionType - type of action Allowed values  \"approve\" | \"delegate\" | \"resubmit\" | \"reject\"\r\n                    * @param {string} config.comments - comments (optional)\r\n                    * @param {string} config.user - only for delegate\r\n                    * @return {Promise} Resolved with the details of approval\r\n                    * @memberof ZOHO.CRM.API\r\n                    * @example\r\n                    *\r\n                    *\r\n                    * var config = {\r\n                    *   Entity:\"Leads\",\r\n                    *   RecordID:\"111155000000036014\",\r\n                    *   actionType:\"approve\"\r\n                    *}\r\n                    *\r\n                    *\r\n                    *\r\n                    *ZOHO.CRM.API.approveRecord(config).then(function(data){\r\n                    *    console.log(data);\r\n                    *});\r\n                    *\r\n                    *\r\n                    * //prints\r\n                    *\r\n                    *\r\n                    *{\r\n                    *  \"code\": \"SUCCESS\",\r\n                    *  \"details\": {\r\n                    *    \"id\": \"111155000000036014\"\r\n                    *  },\r\n                    *  \"message\": \"Record approved successfully\",\r\n                    *  \"status\": \"success\"\r\n                    *}\r\n                    *\r\n                    */\r\n                    approveRecord: function (data) {\r\n                        data.action = 'UPDATE_APPROVAL'\r\n                        return getAllActions(data)\r\n                    },\r\n                    /**\r\n                     * @function getAllUsers\r\n                     * @description To retrieve list of users in ZohoCRM\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.Type - Allowed values \"AllUsers | ActiveUsers | DeactiveUsers | ConfirmedUsers | NotConfirmedUsers | DeletedUsers | ActiveConfirmedUsers | AdminUsers | ActiveConfirmedAdmins\"\r\n                     * @param {number} [config.page] - To get the list of users from the respective pages\r\n                     * @param {number} [config.per_page] - To get the list of users available per page\r\n                     * @return {Promise} Resolved List of users matching specified Type\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.getAllUsers({Type:\"AllUsers\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * //prints\r\n                     *{\r\n                     *  \"users\": [\r\n                     *    {\r\n                     *      \"confirm\": true,\r\n                     *      \"full_name\": \"NareshTesting \",\r\n                     *      \"role\": {\r\n                     *        \"name\": \"CEO\",\r\n                     *        \"id\": \"3000000029719\"\r\n                     *      },\r\n                     *      \"territories\": [],\r\n                     *      \"profile\": {\r\n                     *        \"name\": \"Administrator\",\r\n                     *        \"id\": \"3000000029725\"\r\n                     *      },\r\n                     *      \"last_name\": null,\r\n                     *      \"alias\": null,\r\n                     *      \"id\": \"3000000031045\",\r\n                     *      \"first_name\": \"NareshTesting\",\r\n                     *      \"email\": \"naresh.babu+dev2@zylker.com\",\r\n                     *      \"zuid\": \"5073288\",\r\n                     *      \"status\": \"active\"\r\n                     *    }\r\n                     *  ],\r\n                     *  \"info\": {\r\n                     *    \"per_page\": 200,\r\n                     *    \"count\": 1,\r\n                     *    \"page\": 1,\r\n                     *    \"more_records\": false\r\n                     *  }\r\n                     *}\r\n                     */\r\n                    getAllUsers: function (data) {\r\n                        const Type = data.Type\r\n                        const page = data.page\r\n                        const per_page = data.per_page\r\n                        return user({ Type: Type, page: page, per_page: per_page })\r\n                    },\r\n                    /**\r\n                     * @function getUser\r\n                     * @description To retrieve list of users in ZohoCRM\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.ID - UserID\r\n                     * @return {Promise} Resolved user matching userID\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.getUser({ID:\"3000000029719\"})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * //prints\r\n                     *{\r\n                     *  \"users\": [\r\n                     *    {\r\n                     *      \"country\": null,\r\n                     *      \"role\": {\r\n                     *        \"name\": \"CEO\",\r\n                     *        \"id\": \"3000000029719\"\r\n                     *      },\r\n                     *      \"customize_info\": {\r\n                     *        \"notes_desc\": null,\r\n                     *        \"show_right_panel\": null,\r\n                     *        \"bc_view\": null,\r\n                     *        \"show_home\": false,\r\n                     *        \"show_detail_view\": true,\r\n                     *        \"unpin_recent_item\": null\r\n                     *      },\r\n                     *      \"city\": null,\r\n                     *      \"signature\": null,\r\n                     *      \"name_format\": \"Salutation,First Name,Last Name\",\r\n                     *      \"language\": \"en_US\",\r\n                     *      \"locale\": \"en_US\",\r\n                     *      \"personal_account\": true,\r\n                     *      \"ntc_notification_type\": [\r\n                     *        3000000020985,\r\n                     *        3000000020988,\r\n                     *        3000000020991,\r\n                     *        3000000020994,\r\n                     *        3000000020997,\r\n                     *        3000000021012,\r\n                     *        3000000021003,\r\n                     *        3000000021006,\r\n                     *        3000000021009,\r\n                     *        3000000021078,\r\n                     *        3000000021072,\r\n                     *        3000000021075,\r\n                     *        3000000021069,\r\n                     *        3000000021081,\r\n                     *        3000000021084,\r\n                     *        3000000021087\r\n                     *      ],\r\n                     *      \"default_tab_group\": \"0\",\r\n                     *      \"street\": null,\r\n                     *      \"alias\": null,\r\n                     *      \"theme\": {\r\n                     *        \"normal_tab\": {\r\n                     *          \"font_color\": \"#FFFFFF\",\r\n                     *          \"background\": \"#222222\"\r\n                     *        },\r\n                     *        \"selected_tab\": {\r\n                     *          \"font_color\": \"#FFFFFF\",\r\n                     *          \"background\": \"#222222\"\r\n                     *        },\r\n                     *        \"new_background\": null,\r\n                     *        \"background\": \"#F3F0EB\",\r\n                     *        \"screen\": \"fixed\",\r\n                     *        \"type\": \"default\"\r\n                     *      },\r\n                     *      \"id\": \"3000000031045\",\r\n                     *      \"state\": null,\r\n                     *      \"country_locale\": \"en_US\",\r\n                     *      \"fax\": null,\r\n                     *      \"first_name\": \"NareshTesting\",\r\n                     *      \"email\": \"naresh.babu+dev2@zylker.com\",\r\n                     *      \"telephony_enabled\": false,\r\n                     *      \"imap_status\": false,\r\n                     *      \"zip\": null,\r\n                     *      \"decimal_separator\": \"en_US\",\r\n                     *      \"website\": null,\r\n                     *      \"time_format\": \"hh:mm a\",\r\n                     *      \"profile\": {\r\n                     *        \"name\": \"Administrator\",\r\n                     *        \"id\": \"3000000029725\"\r\n                     *      },\r\n                     *      \"mobile\": null,\r\n                     *      \"last_name\": null,\r\n                     *      \"time_zone\": \"Asia/Kolkata\",\r\n                     *      \"zuid\": \"5073288\",\r\n                     *      \"confirm\": true,\r\n                     *      \"rtl_enabled\": false,\r\n                     *      \"full_name\": \"NareshTesting \",\r\n                     *      \"ezuid\": \"6ca2127e9d60c217\",\r\n                     *      \"territories\": [],\r\n                     *      \"phone\": null,\r\n                     *      \"dob\": null,\r\n                     *      \"date_format\": \"MM/dd/yyyy\",\r\n                     *      \"ntc_enabled\": true,\r\n                     *      \"status\": \"active\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    getUser: function (data) {\r\n                        const ID = data.ID\r\n                        return user({ ID: ID })\r\n                    },\r\n                    /**\r\n                     * @function getRelatedRecords\r\n                     * @description To retrive related list records\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.Entity - \tSysRefName of the module.\r\n                     * @param {String} config.RecordID - RecordID to associate the notes.\r\n                     * @param {String} config.RelatedListName - \tSysRefName of the relatedList.\r\n                     * @param {Number} [config.page] - To get the list of related records from the respective page.\r\n                     * @param {Number} [config.per_page] - To get the list of related records available per page.\r\n                     * @return {Promise} Resolved user matching userID\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     * ZOHO.CRM.API.getRelatedRecords({Entity:\"Leads\",RecordID:\"1000000030132\",RelatedList:\"Notes\",page:1,per_page:200})\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * //prints\r\n                     *\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"Owner\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Modified_Time\": \"2017-12-22T03:58:20+05:30\",\r\n                     *      \"$attachments\": null,\r\n                     *      \"Created_Time\": \"2017-12-22T03:58:20+05:30\",\r\n                     *      \"Parent_Id\": {\r\n                     *        \"name\": \"Peterson\",\r\n                     *        \"id\": \"3000000040011\"\r\n                     *      },\r\n                     *      \"$editable\": true,\r\n                     *      \"$se_module\": \"Leads\",\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"$size\": null,\r\n                     *      \"$voice_note\": false,\r\n                     *      \"$status\": null,\r\n                     *      \"id\": \"3000000040059\",\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Note_Title\": null,\r\n                     *      \"Note_Content\": \"Notes2\"\r\n                     *    },\r\n                     *    {\r\n                     *      \"Owner\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Modified_Time\": \"2017-12-22T03:58:16+05:30\",\r\n                     *      \"$attachments\": null,\r\n                     *      \"Created_Time\": \"2017-12-22T03:58:16+05:30\",\r\n                     *      \"Parent_Id\": {\r\n                     *        \"name\": \"Peterson\",\r\n                     *        \"id\": \"3000000040011\"\r\n                     *      },\r\n                     *      \"$editable\": true,\r\n                     *      \"$se_module\": \"Leads\",\r\n                     *      \"Modified_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"$size\": null,\r\n                     *      \"$voice_note\": false,\r\n                     *      \"$status\": null,\r\n                     *      \"id\": \"3000000040055\",\r\n                     *      \"Created_By\": {\r\n                     *        \"name\": \"NareshTesting \",\r\n                     *        \"id\": \"3000000031045\"\r\n                     *      },\r\n                     *      \"Note_Title\": null,\r\n                     *      \"Note_Content\": \"Notes1\"\r\n                     *    }\r\n                     *  ],\r\n                     *  \"info\": {\r\n                     *    \"per_page\": 200,\r\n                     *    \"count\": 2,\r\n                     *    \"page\": 1,\r\n                     *    \"more_records\": false\r\n                     *  }\r\n                     *}\r\n                     */\r\n                    getRelatedRecords: function (data) {\r\n                        return getRelatedRecord(data)\r\n                    },\r\n                    /**\r\n                     * @function updateRelatedRecords\r\n                     * @description To update the relation between the records\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.Entity - \tSysRefName of the module.\r\n                     * @param {String} config.RecordID - RecordID to associate the notes.\r\n                     * @param {String} config.RelatedListName - \tSysRefName of the relatedList.\r\n                     * @param {String} config.RelatedRecordID - \tRelated Record ID\r\n                     * @param {String} config.APIData - \tData to be updated in the related record\r\n                     * @return {Promise} Resolved user matching userID\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     *  var APIData = {\r\n                     * \tDescription:\"Test description\"\r\n                     *  }\r\n                     *  ZOHO.CRM.API.updateRelatedRecords({Entity:\"Leads\",RecordID:\"1000000079113\",RelatedList:\"Campaigns\",RelatedRecordID:\"1000000080041\",APIData:APIData})\r\n                     *  .then(function(data){\r\n                     *      console.log(data)\r\n                     *  })\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\":[\r\n                     *   {\r\n                     *     \"code\": \"SUCCESS\",\r\n                     *     \"details\": {\r\n                     *       \"id\": 1000000080041\r\n                     *     },\r\n                     *     \"message\": \"relation updated\",\r\n                     *     \"status\": \"success\"\r\n                     *   }\r\n                     * \t]\r\n                     * }\r\n                     */\r\n                    updateRelatedRecords: function (data) {\r\n                        const Entity = data.Entity\r\n                        const RecordID = data.RecordID\r\n                        const RelatedList = data.RelatedList\r\n                        const RelatedRecordID = data.RelatedRecordID\r\n                        const APIData = data.APIData\r\n                        return updateRelatedRecord(Entity, RecordID, RelatedList, RelatedRecordID, APIData)\r\n                    },\r\n                    /**\r\n                     * @function delinkRelatedRecord\r\n                     * @description To delink the relation between the records\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.Entity - \tSysRefName of the module.\r\n                     * @param {String} config.RecordID - RecordID to associate the notes.\r\n                     * @param {String} config.RelatedListName - \tSysRefName of the relatedList.\r\n                     * @param {String} config.RelatedRecordID - \tRelated Record ID\r\n                     * @return {Promise} Resolved user matching userID\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     *  ZOHO.CRM.API.delinkRelatedRecord({Entity:\"Leads\",RecordID:\"1000000079113\",RelatedList:\"Campaigns\",RelatedRecordID:\"1000000080041\"})\r\n                     *  .then(function(data){\r\n                     *      console.log(data)\r\n                     *  })\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"id\": \"3000000040055\"\r\n                     *      },\r\n                     *      \"message\": \"record deleted\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     */\r\n                    delinkRelatedRecord: function (data) {\r\n                        const Entity = data.Entity\r\n                        const RecordID = data.RecordID\r\n                        const RelatedList = data.RelatedList\r\n                        const RelatedRecordID = data.RelatedRecordID\r\n                        return deleteRelatedRecord(Entity, RecordID, RelatedList, RelatedRecordID)\r\n                    },\r\n                    /**\r\n                     * @function attachFile\r\n                     * @description To delink the relation between the records\r\n                     * @param {object} config - Configuration Object\r\n                     * @param {String} config.Entity - \tSysRefName of the module.\r\n                     * @param {String} config.RecordID - RecordID to associate the notes.\r\n                     * @param {object} config.File - \tFile Object\r\n                     * @param {String} config.File.Name - \tFile Name\r\n                     * @param {object} config.File.Content - \tFile Content\r\n                     * @return {Promise} Resolved user Upload acknowledgement\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @example\r\n                     *\r\n                     * ZOHO.CRM.API.attachFile({Entity:\"Leads\",RecordID:\"1000000031092\",File:{Name:\"myFile.txt\",Content:blob}}).then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     * //prints\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"Modified_Time\": \"2017-12-20T14:22:30+05:30\",\r\n                     *        \"Modified_By\": {\r\n                     *          \"name\": \"NareshTesting\",\r\n                     *          \"id\": \"1000000031157\"\r\n                     *        },\r\n                     *        \"Created_Time\": \"2017-12-20T14:22:30+05:30\",\r\n                     *        \"id\": \"1000000044106\",\r\n                     *        \"Created_By\": {\r\n                     *          \"name\": \"NareshTesting\",\r\n                     *          \"id\": \"1000000031157\"\r\n                     *        }\r\n                     *      },\r\n                     *      \"message\": \"attachment uploaded successfully\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     * */\r\n                    attachFile: function (data) {\r\n                        const Entity = data.Entity\r\n                        const RecordID = data.RecordID\r\n                        const File = data.File\r\n                        var data = {\r\n                            FileName: File.Name,\r\n                            FileData: File.Content\r\n                        }\r\n                        return createRecord(Entity, data, RecordID, 'ATTACHMENT')\r\n                    },\r\n                    /**\r\n                     * @function getAllProfiles\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @description To get all the profiles in the app\r\n                     * @returns {Promise} Resolved with all the profiles present in the app\r\n                     * @example\r\n                     * ZOHO.CRM.API.getAllProfiles().then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     *  {\r\n                     *    \"profiles\": [\r\n                     *     {\r\n                     *        \"created_time\": null,\r\n                     *        \"modified_time\": null,\r\n                     *        \"name\": \"Administrator\",\r\n                     *        \"modified_by\": null,\r\n                     *       \"description\": \"This profile will have all the permissions. Users with Administrator profile will be able to view and manage all the data within the organization *. *        account by default.\",\r\n                     *        \"id\": \"12000000029855\",\r\n                     *        \"category\": false,\r\n                     *        \"created_by\": null\r\n                     *      },\r\n                     *      {\r\n                     *        \"created_time\": null,\r\n                     *        \"modified_time\": null,\r\n                     *        \"name\": \"Standard\",\r\n                     *        \"modified_by\": null,\r\n                     *        \"description\": \"This profile will have all the permissions except administrative privileges.\",\r\n                     *        \"id\": \"12000000029858\",\r\n                     *        \"category\": false,\r\n                     *        \"created_by\": null\r\n                     *      },\r\n                     *      {\r\n                     *        \"created_time\": \"2018-02-05T14:20:38+05:30\",\r\n                     *        \"modified_time\": \"2018-02-05T17:44:58+05:30\",\r\n                     *        \"name\": \"TestUser\",\r\n                     *        \"modified_by\": {\r\n                     *          \"name\": \"Arun \",\r\n                     *          \"id\": \"12000000032013\"\r\n                     *        },\r\n                     *        \"description\": \"TestUser API\",\r\n                     *        \"id\": \"12000000033045\",\r\n                     *        \"category\": true,\r\n                     *        \"created_by\": {\r\n                     *          \"name\": \"Arun \",\r\n                     *          \"id\": \"12000000032013\"\r\n                     *        }\r\n                     *     }\r\n                     *    ]\r\n                     *  }\r\n                     *\r\n                     */\r\n                    getAllProfiles: function (data) {\r\n                        const category = 'PROFILES'\r\n                        const type = 'GET_ALL_PROFILES'\r\n                        return getAllProfiles(category, type)\r\n                    },\r\n                    /**\r\n                     * @function getProfile\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @description To get a particular profile's details with ProfileID as input\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.ID - ProfileID\r\n                     * @returns {Promise} Resolved with the details of the profile for the given ProfileID\r\n                     * @example\r\n                     * ZOHO.CRM.API.getProfile({ID:\"12000000029858\"}).then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     * {\r\n                     *\t\"profiles\": [{\r\n                     *\t\t\"created_time\": null,\r\n                     *\t\t\"modified_time\": null,\r\n                     *\t\t\"permissions_details\": [{\r\n                     *\t\t\t\t\"display_label\": \"Email Integration ( POP3 / IMAP )\",\r\n                     *\t\t\t\t\"module\": null,\r\n                     *\t\t\t\t\"name\": \"Crm_Implied_Zoho_Mail_Integ\",\r\n                     *\t\t\t\t\"id\": \"12000000030788\",\r\n                     *\t\t\t\t\"enabled\": true\r\n                     *\t\t\t},\r\n                     *\t\t\t{\r\n                     *\t\t\t\t\"display_label\": \"BCC Dropbox\",\r\n                     *\t\t\t\t\"module\": null,\r\n                     *\t\t\t\t\"name\": \"Crm_Implied_BCC_Dropbox\",\r\n                     *\t\t\t\t\"id\": \"12000000030752\",\r\n                     *\t\t\t\t\"enabled\": true\r\n                     *\t\t\t},\r\n                     *\t\t\t{\r\n                     *\t\t\t\t\"display_label\": \"Show Chat Bar\",\r\n                     *\t\t\t\t\"module\": null,\r\n                     *\t\t\t\t\"name\": \"Crm_Implied_Chat_Bar\",\r\n                     *\t\t\t\t\"id\": \"12000000030806\",\r\n                     *\t\t\t\t\"enabled\": true\r\n                     *\t\t\t},\r\n                     *\t\t\t{\r\n                     *\t\t\t\t\"display_label\": null,\r\n                     *\t\t\t\t\"module\": null,\r\n                     *\t\t\t\t\"name\": \"Crm_Implied_Social_Integration\",\r\n                     *\t\t\t\t\"id\": \"12000000030734\",\r\n                     *\t\t\t\t\"enabled\": false\r\n                     *\t\t\t}\r\n                     *\t\t],\r\n                     *\t\t\"name\": \"Standard\",\r\n                     *\t\t\"modified_by\": null,\r\n                     *\t\t\"description\": \"This profile will have all the permissions except administrative privileges.\",\r\n                     *\t\t\"id\": \"12000000029858\",\r\n                     *\t\t\"category\": false,\r\n                     *\t\t\"created_by\": null,\r\n                     *\t\t\"sections\": [{\r\n                     *\t\t\t\"name\": \"template\",\r\n                     *\t\t\t\"categories\": [{\r\n                     *\t\t\t\t\t\"display_label\": \"Email & Chat Settings\",\r\n                     *\t\t\t\t\t\"permissions_details\": [\r\n                     *\t\t\t\t\t\t\"12000000030788\",\r\n                     *\t\t\t\t\t\t\"12000000030752\",\r\n                     *\t\t\t\t\t\t\"12000000030806\"\r\n                     *\t\t\t\t\t],\r\n                     *\t\t\t\t\t\"name\": \"email_chat\"\r\n                     *\t\t\t\t},\r\n                     *\t\t\t\t{\r\n                     *\t\t\t\t\t\"display_label\": \"Manage Templates\",\r\n                     *\t\t\t\t\t\"permissions_details\": [\r\n                     *\t\t\t\t\t\t\"12000000029984\",\r\n                     *\t\t\t\t\t\t\"12000000029987\",\r\n                     *\t\t\t\t\t\t\"12000000030698\"\r\n                     *\t\t\t\t\t],\r\n                     *\t\t\t\t\t\"name\": \"template\"\r\n                     *\t\t\t\t}\r\n                     *\t\t\t]\r\n                     *\t\t}]\r\n                     *\t}]\r\n                     * }\r\n                     *\r\n                     */\r\n                    getProfile: function (data) {\r\n                        const category = 'PROFILES'\r\n                        const type = 'GET_PROFILE'\r\n                        const ID = data.ID\r\n                        return getProfile(category, type, ID)\r\n                    },\r\n                    /**\r\n                     * @function updateProfile\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @description To update permissions for the given ProfileID\r\n                     * @param {Object} config - Configuration Object.\r\n                     * @param {String} config.ID - ProfileID\r\n                     * @param {Object} config.APIData - Permission Data (PermissionID : true | false)\r\n                     * @returns {Promise} Resolved with a response message (Success or failure ) after updating the permissions\r\n                     * @example\r\n                     * var permissionData = {\r\n                     *     \"profiles\": [\r\n                     *\t\t{\r\n                     * \t\t\t\t\"permissions_details\": [\r\n                     *\t\t\t\t{\r\n                     * \t\t\t\t\t\"id\": \"12000000030827\",\r\n                     *\t\t\t\t\t\"enabled\": false\r\n                     *\t\t\t\t},\r\n                     *\t\t\t\t{\r\n                     *\t\t\t\t\t\"id\": \"12000000029879\",\r\n                     *\t\t\t\t\t\"enabled\": true\r\n                     * \t\t\t\t}\r\n                     * \t\t\t]\r\n                     *\t\t}\r\n                     *\t]\r\n                     *}\r\n                     * ZOHO.CRM.API.updateProfile({ID:\"12000000033045\",APIData:permissionData}).then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     * {\r\n                     *  \"profiles\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {},\r\n                     *      \"message\": \"profile updated successfully\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     * }\r\n                     *\r\n                     */\r\n                    updateProfile: function (data) {\r\n                        const category = 'UPDATE'\r\n                        const type = 'PROFILE'\r\n                        const ID = data.ID\r\n                        const APIData = data.APIData\r\n                        return updateProfile(category, type, ID, APIData)\r\n                    },\r\n                    /**\r\n                     * @function getOrgVariable\r\n                     * @memberof ZOHO.CRM.API\r\n                     * @description get plugins configuration data\r\n                     * @returns {Promise} Resolved with Plugin Configuration\r\n                     * @example\r\n                     * Example - 1:\r\n                     * ZOHO.CRM.API.getOrgVariable(\"variableNamespace\").then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *  \"Success\": {\r\n                     *   \"Content\": \"12345\"\r\n                     *  }\r\n                     *}\r\n                     *\r\n                     *\r\n                     *\r\n                     *  Example - 2:\r\n                     *\r\n                     * var data = {apiKeys:[\"key1\",\"key2\",\"ke3\"]};\r\n                     * ZOHO.CRM.API.getOrgVariable(data).then(function(data){\r\n                     *      console.log(data);\r\n                     * });\r\n                     *\r\n                     *\r\n                     *{\r\n                     *\"Success\":\r\n                     *{\r\n                     *   \"content\": {\r\n                     *      \"apikey\": {\r\n                     *         \"value\": \"BNMMNBVHJ\"\r\n                     *      },\r\n                     *      \"authtoken\": {\r\n                     *         \"value\": \"IUYTRERTYUI\"\r\n                     *      },\r\n                     *      \"apiscret\": {\r\n                     *         \"value\": \"848ksmduo389jd\"\r\n                     *      }\r\n                     *   }\r\n                     *}\r\n                     *}\r\n                     *\r\n                     *\r\n                     */\r\n                    getOrgVariable: function (nameSpace) {\r\n                        return config('VARIABLE', nameSpace)\r\n                    }\r\n                },\r\n                /**\r\n                 * @module ZOHO.CRM.UI\r\n                 */\r\n                UI: {\r\n                    /**\r\n                     * @namespace ZOHO.CRM.UI\r\n                     */\r\n                    /**\r\n                     * @function Resize\r\n                     * @description Resize Widget to the given dimensions\r\n                     * @param {Object} dimensions - Dimension of Dialer.\r\n                     * @param {Integer} dimensions.height - Height in px\r\n                     * @param {Integer} dimensions.width - Width in px\r\n                     * @returns {Promise} resolved with true | false\r\n                     * @memberof ZOHO.CRM.UI\r\n                     * @example\r\n                     * ZOHO.CRM.UI.Resize({height:\"200\",width:\"1000\"}).then(function(data){\r\n                     * \tconsole.log(data);\r\n                     * });\r\n                     *\r\n                     * //prints\r\n                     * True\r\n                     *\r\n                     */\r\n                    Resize: function (data) {\r\n                        var data = {\r\n                            action: 'RESIZE',\r\n                            data: {\r\n                                width: data.width,\r\n                                height: data.height\r\n                            }\r\n                        }\r\n                        return manipulateUI(data)\r\n                    },\r\n                    /**\r\n                     * @namespace ZOHO.CRM.UI.Dialer\r\n                     */\r\n                    Dialer: {\r\n                        /**\r\n                         * @function maximize\r\n                         * @description maximizes the CallCenter Window\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Dialer\r\n                         */\r\n                        maximize: function () {\r\n                            const data = {\r\n                                action: {\r\n                                    telephony: 'MAXIMIZE'\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        },\r\n                        /**\r\n                         * @function minimize\r\n                         * @description minimize the CallCenter Window\r\n                         * @returns {Promise}  resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Dialer\r\n                         */\r\n                        minimize: function () {\r\n                            const data = {\r\n                                action: {\r\n                                    telephony: 'MINIMIZE'\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        },\r\n                        /**\r\n                         * @function notify\r\n                         * @description notify The user with an audible sound\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Dialer\r\n                         */\r\n                        notify: function () {\r\n                            const data = {\r\n                                action: {\r\n                                    telephony: 'NOTIFY'\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        }\r\n                    },\r\n                    /**\r\n                     * @namespace ZOHO.CRM.UI.Record\r\n                     */\r\n                    Record: {\r\n                        /**\r\n                         * @function open\r\n                         * @description Open DetailPage of the specified Record\r\n                         * @param {object} data - Configuration Object\r\n                         * @param {String} data.Entity - \tSysRefName of the module.\r\n                         * @param {String} data.RecordID - RecordID to open\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Record\r\n                         * @example\r\n                         * ZOHO.CRM.UI.Record.open({Entity:\"Leads\",RecordID:\"1000000036062\"})\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        open: function (data) {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            var data = {\r\n                                action: {\r\n                                    record: 'OPEN'\r\n                                },\r\n                                data: {\r\n                                    Entity: data.Entity,\r\n                                    RecordID: data.RecordID,\r\n                                    target: data.Target\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        },\r\n                        /**\r\n                         * @function edit\r\n                         * @description open EditPage of the specified Record\r\n                         * @param {object} data - Configuration Object\r\n                         * @param {String} data.Entity - \tSysRefName of the module.\r\n                         * @param {String} data.RecordID - RecordID to open\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Record\r\n                         * @example\r\n                         * ZOHO.CRM.UI.Record.edit({Entity:\"Leads\",RecordID:\"1000000036062\"})\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        edit: function (data) {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            var data = {\r\n                                action: {\r\n                                    record: 'EDIT'\r\n                                },\r\n                                data: {\r\n                                    Entity: data.Entity,\r\n                                    RecordID: data.RecordID,\r\n                                    target: data.Target\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        },\r\n                        /**\r\n                         * @function create\r\n                         * @description Open CreatePage of the specified Record\r\n                         * @param {object} data - Configuration Object\r\n                         * @param {String} data.Entity - \tSysRefName of the module.\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Record\r\n                         * @example\r\n                         * ZOHO.CRM.UI.Record.create({Entity:\"Leads\"})\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        create: function (data) {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            var data = {\r\n                                action: {\r\n                                    record: 'CREATE'\r\n                                },\r\n                                data: {\r\n                                    Entity: data.Entity,\r\n                                    RecordID: data.RecordID,\r\n                                    target: data.Target\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        },\r\n                        /**\r\n                         * @function populate\r\n                         * @description Populate the given data in the entity form\r\n                         * @param {object} RecordData\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Record\r\n                         * @example\r\n                         * ZOHO.CRM.UI.Record.populate({Annual_Revenue:\"500\",Description:\"Populating test data\",Phone:\"85663655785\"})\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        populate: function (recordData) {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            const data = {\r\n                                action: {\r\n                                    record: 'POPULATE'\r\n                                },\r\n                                data: recordData\r\n                            }\r\n                            return manipulateUI(data)\r\n                        }\r\n                    },\r\n                    /**\r\n                     * @namespace ZOHO.CRM.UI.Popup\r\n                     */\r\n                    Popup: {\r\n                        /**\r\n                         * @function close\r\n                         * @description Close Widget Popup\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Popup\r\n                         * @example\r\n                         * ZOHO.CRM.UI.Popup.close()\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        close: function () {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            const data = {\r\n                                action: {\r\n                                    popup: 'CLOSE'\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        },\r\n                        /**\r\n                         * @function closeReload\r\n                         * @description Close Widget Popup and reload the View\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Popup\r\n                         * @example\r\n                         * ZOHO.CRM.UI.Popup.closeReload()\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        closeReload: function () {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            const data = {\r\n                                action: {\r\n                                    popup: 'CLOSE_RELOAD'\r\n                                }\r\n                            }\r\n                            return manipulateUI(data)\r\n                        }\r\n                    },\r\n                    /**\r\n                     * @namespace ZOHO.CRM.UI.Widget\r\n                     */\r\n                    Widget: {\r\n                        /**\r\n                         * @function open\r\n                         * @description open a WebTab Widget with custom onLoad Data\r\n                         * @returns {Promise} resolved with true | false\r\n                         * @memberof ZOHO.CRM.UI.Widget\r\n                         * @example\r\n                         * var message = {\r\n                         * \t\targ1:\"Argument 1\",\r\n                         * \t\targ2:\"Argument 2\",\r\n                         * \t\targ3Nested:{\r\n                         * \t\t\t\tsubArg1:\"SubArgument 1\",\r\n                         * \t\t\t\tsubArg2:\"SubArgument 2\",\r\n                         * \t\t\t\tsubArg3:\"SubArgument 3\",\r\n                         * \t\t\t}\r\n                         * }\r\n                         *\r\n                         * ZOHO.CRM.UI.Widget.open({Entity:\"WebTab1_Widget\",Message:message})\r\n                         * .then(function(data){\r\n                         *     console.log(data)\r\n                         * })\r\n                         */\r\n                        open: function (data) {\r\n                            /*\r\n                             * fetch TabName from sysrefName\r\n                             */\r\n                            var data = {\r\n                                action: {\r\n                                \twebTab: 'OPEN'\r\n                                },\r\n                                data: data\r\n                            }\r\n                            return manipulateUI(data)\r\n                        }\r\n                    }\r\n\r\n                },\r\n                /**\r\n                 * @namespace ZOHO.CRM.HTTP\r\n                 */\r\n                HTTP: {\r\n                    /**\r\n                     * @function get\r\n                     * @description Invoke  HTTP get\r\n                     * @returns {Promise} resolved with response of the initiated request\r\n                     * @memberof ZOHO.CRM.HTTP\r\n                     * @param {Object} request - Request Object\r\n                     * @param {Object} request.params - Request Params\r\n                     * @param {Object} request.headers - Request Headers\r\n                     * @example\r\n                     * var request ={\r\n                     * \turl : \"https://crm.zoho.com/crm/private/xml/Users/getUsers\",\r\n                     * \tparams:{\r\n                     * \t\tscope:\"crmapi\",\r\n                     * \t\ttype:\"AllUsers\"\r\n                     * \t},\r\n                     * \theaders:{\r\n                     *\t \tAuthorization:\"******************************\",\r\n                     * \t}\r\n                     * }\r\n                     * ZOHO.CRM.HTTP.get(request)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     * {\r\n                     *   \"users\": {\r\n                     *     \"user\": [\r\n                     *       {\r\n                     *         \"zip\": \"null\",\r\n                     *         \"country\": \"null\",\r\n                     *         \"website\": \"null\",\r\n                     *         \"role\": \"Acquisition Manager\",\r\n                     *         \"city\": \"null\",\r\n                     *         \"timezone\": \"Asia\\/Calcutta\",\r\n                     *         \"profile\": \"Administrator\",\r\n                     *         \"mobile\": \"null\",\r\n                     *         \"language\": \"en_US\",\r\n                     *         \"content\": \"Patricia Boyle\",\r\n                     *         \"zuid\": \"51857638\",\r\n                     *         \"confirm\": \"true\",\r\n                     *         \"phone\": \"null\",\r\n                     *         \"street\": \"null\",\r\n                     *         \"id\": \"1475615000000083003\",\r\n                     *         \"state\": \"null\",\r\n                     *         \"fax\": \"null\",\r\n                     *         \"email\": \"naresh.babu+demo1@zylker.com\",\r\n                     *         \"status\": \"active\"\r\n                     *       },\r\n                     *       {\r\n                     *         \"zip\": \"null\",\r\n                     *         \"country\": \"null\",\r\n                     *         \"website\": \"null\",\r\n                     *         \"role\": \"Standard\",\r\n                     *         \"city\": \"null\",\r\n                     *         \"timezone\": \"Asia\\/Calcutta\",\r\n                     *         \"profile\": \"testProfile\",\r\n                     *         \"mobile\": \"null\",\r\n                     *         \"language\": \"en_US\",\r\n                     *         \"content\": \"Naresh Babu\",\r\n                     *         \"zuid\": \"61712147\",\r\n                     *         \"confirm\": \"true\",\r\n                     *         \"phone\": \"null\",\r\n                     *         \"street\": \"null\",\r\n                     *         \"id\": \"1475615000000185001\",\r\n                     *         \"state\": \"null\",\r\n                     *         \"fax\": \"null\",\r\n                     *         \"email\": \"naresh.babu+demo2@zylker.com\",\r\n                     *         \"status\": \"active\"\r\n                     *       }\r\n                     *     ]\r\n                     *   }\r\n                     * }\r\n                     */\r\n                    get: function (data) {\r\n                        return remoteCall(HTTPRequest.GET, data)\r\n                    },\r\n                    /**\r\n                     * @function post\r\n                     * @description Invoke HTTP post\r\n                     * @returns {Promise} resolved with response of the initiated request\r\n                     * @memberof ZOHO.CRM.HTTP\r\n                     * @param {Object} request - Request Object\r\n                     * @param {Object} request.params - Request Params\r\n                     * @param {Object} request.headers - Request Headers\r\n                     * @param {Object} request.body - Request Body\r\n                     * @example\r\n                     * var data ='<Contacts><row no=\"1\"><FL val=\"First Name\">Amy</FL><FL val=\"Last Name\">Dawson</FL><FL val=\"Email\">testing@testing.com</FL><FL val=\"Title\">Manager</FL><FL val=\"Phone\">1234567890</FL><FL val=\"Mobile\">292827622</FL><FL val=\"Account Name\"> <![CDATA[\"A & A\"]]> </FL></row></Contacts>';\r\n                     * var request ={\r\n                     * \t\turl : \"https://crm.zoho.com/crm/private/xml/CustomModule1/insertRecords\",\r\n                     * \t\tparams:{\r\n                     * \t\t\tscope:\"crmapi\",\r\n                     * \t\t\txmlData:data\r\n                     * \t\t},\r\n                     * \t\theaders:{\r\n                     * \t \t\tAuthorization:\"******************************\",\r\n                     * \t\t}\r\n                     * }\r\n                     * ZOHO.CRM.HTTP.post(request)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     *<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\t\t\t\t\t *<response uri=\"/crm/private/xml/Contacts/insertRecords\">\r\n\t\t\t\t\t *  <result>\r\n\t\t\t\t\t *    <message>Record(s) added successfully</message>\r\n\t\t\t\t\t *    <recorddetail>\r\n\t\t\t\t \t *      <FL val=\"Id\">457154000000952001</FL>\r\n\t\t\t\t\t *      <FL val=\"Created Time\">2018-10-24 13:55:56</FL>\r\n\t\t\t\t\t *      <FL val=\"Modified Time\">2018-10-24 13:55:56</FL>\r\n\t\t\t\t\t *      <FL val=\"Created By\"><![CDATA[NareshAutomation]]></FL>\r\n\t\t\t\t\t *      <FL val=\"Modified By\"><![CDATA[NareshAutomation]]></FL>\r\n\t\t\t\t\t *    </recorddetail>\r\n\t\t\t\t\t *  </result>\r\n\t\t\t\t\t *</response>\r\n                     */\r\n                    post: function (data) {\r\n                        return remoteCall(HTTPRequest.POST, data)\r\n                    },\r\n                    /**\r\n                     * @function put\r\n                     * @description Invoke HTTP put\r\n                     * @returns {Promise} resolved with response of the initiated request\r\n                     * @memberof ZOHO.CRM.HTTP\r\n                     * @param {Object} request - Request Object\r\n                     * @param {Object} request.params - Request Params\r\n                     * @param {Object} request.headers - Request Headers\r\n                     * @param {Object} request.body - Request Body\r\n                     * @example\r\n                     * var apidata =[\r\n                     *{\r\n                     *\t\"Last_Name\":\"testupdate\",\r\n                     *\tid:\"457154000000952001\"\r\n                     *}\r\n                     *]\r\n                     *\r\n                     *\r\n                     * var request ={\r\n                     *      url : \"https://crm.zoho.com/crm/v2/Contacts\",\r\n                     *      headers:{\r\n                     *          Authorization:\"******************************\",\r\n                     *      },\r\n                     *      body:{data:apidata}\r\n                     * }\r\n                     * ZOHO.CRM.HTTP.put(request)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     *{\r\n\t\t\t\t\t *  \"data\": [\r\n\t\t\t\t\t *    {\r\n\t\t\t\t\t *      \"code\": \"SUCCESS\",\r\n\t\t\t\t\t *      \"details\": {\r\n\t\t\t\t\t *        \"Modified_Time\": \"2018-10-24T14:08:57+05:30\",\r\n\t\t\t\t\t *        \"Modified_By\": {\r\n\t\t\t\t\t *          \"name\": \"NareshAutomation\",\r\n\t\t\t\t\t *          \"id\": \"457154000000148011\"\r\n\t\t\t\t\t *        },\r\n\t\t\t\t\t *        \"Created_Time\": \"2018-10-24T13:55:56+05:30\",\r\n\t\t\t\t\t *        \"id\": \"457154000000952001\",\r\n\t\t\t\t\t *        \"Created_By\": {\r\n\t\t\t\t\t *          \"name\": \"NareshAutomation\",\r\n\t\t\t\t\t *          \"id\": \"457154000000148011\"\r\n\t\t\t\t\t *        }\r\n\t\t\t\t\t *      },\r\n\t\t\t\t\t *      \"message\": \"record updated\",\r\n\t\t\t\t\t *      \"status\": \"success\"\r\n\t\t\t\t\t *    }\r\n\t\t\t\t\t *  ]\r\n\t\t\t\t\t *}\r\n                     */\r\n                    put: function (data) {\r\n                        return remoteCall(HTTPRequest.PUT, data)\r\n                    },\r\n                    /**\r\n                     * @function patch\r\n                     * @description Invoke HTTP patch\r\n                     * @returns {Promise} resolved with response of the initiated request\r\n                     * @memberof ZOHO.CRM.HTTP\r\n                     * @param {Object} request - Request Object\r\n                     * @param {Object} request.params - Request Params\r\n                     * @param {Object} request.headers - Request Headers\r\n                     * @param {Object} request.body - Request Body\r\n                     * @example\r\n                     * var data ={\r\n                     * name:\"name\",\r\n                     * age:\"23\"\r\n                     * };\r\n                     * var request ={\r\n                     *      url : \"https://www.example.com/patch\",\r\n                     *      params:{\r\n                     *          scope:\"apiscope\",\r\n                     *      },\r\n                     *      headers:{\r\n                     *          Authorization:\"******************************\",\r\n                     *      },\r\n                     *      body:data\r\n                     * }\r\n                     * ZOHO.CRM.HTTP.patch(request)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     *\r\n                     *{\r\n\t\t\t\t\t *  \"args\": {},\r\n\t\t\t\t\t *  \"data\": \"\",\r\n\t\t\t\t\t *  \"files\": {},\r\n\t\t\t\t\t *  \"form\": {},\r\n\t\t\t\t\t *  \"headers\": {\r\n\t\t\t\t\t *    \"Accept\": \"application/json\",\r\n\t\t\t\t\t *    \"Accept-Language\": \"en-GB,en-US;q=0.9,en;q=0.8\",\r\n\t\t\t\t\t *    \"Content-Length\": \"0\"\r\n\t\t\t\t\t *  },\r\n\t\t\t\t\t *  \"json\": null,\r\n\t\t\t\t\t *  \"url\": \"https://www.example.com/patch\"\r\n\t\t\t\t\t *}\r\n                     *\r\n                     */\r\n                    patch: function (data) {\r\n                        return remoteCall(HTTPRequest.PATCH, data)\r\n                    },\r\n                    /**\r\n                     * @function delete\r\n                     * @description Invoke HTTP delete\r\n                     * @returns {Promise} resolved with response of the initiated request\r\n                     * @memberof ZOHO.CRM.HTTP\r\n                     * @param {Object} request - Request Object\r\n                     * @param {Object} request.params - Request Params\r\n                     * @param {Object} request.headers - Request Headers\r\n                     * @param {Object} request.body - Request Body\r\n                     * @example\r\n                     * var request ={\r\n                     *      url : \"https://crm.zoho.com/crm/v2/Leads/111158000000045188\",\r\n                     *      headers:{\r\n                     *          Authorization:\"******************************\",\r\n                     *      }\r\n                     * }\r\n                     * ZOHO.CRM.HTTP.delete(request)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     *\r\n                     *{\r\n                     *  \"data\": [\r\n                     *    {\r\n                     *      \"code\": \"SUCCESS\",\r\n                     *      \"details\": {\r\n                     *        \"id\": \"111158000000045188\"\r\n                     *      },\r\n                     *      \"message\": \"record deleted\",\r\n                     *      \"status\": \"success\"\r\n                     *    }\r\n                     *  ]\r\n                     *}\r\n                     *\r\n                     */\r\n                    delete: function (data) {\r\n                        return remoteCall(HTTPRequest.DELETE, data)\r\n                    }\r\n                },\r\n                /**\r\n                 * @namespace ZOHO.CRM.CONNECTOR\r\n                 */\r\n                CONNECTOR: {\r\n                    /**\r\n                     * @function invokeAPI\r\n                     * @description Invokes Connector API\r\n                     * @returns {Promise} resolved with response of the Connector API\r\n                     * @memberof ZOHO.CRM.CONNECTOR\r\n                     * @param {String} nameSpace - NameSpace of Connector API to invoke\r\n                     * @param {Object} data - Connector API Data\r\n                     * @param {Object} data.VARIABLES - Dynamic Data represented by placeholders in connectorAPI\r\n                     * @param {Object} data.CONTENT_TYPE - ContentType - multipart for multipart request\r\n                     * @param {Array} data.PARTS - For multipart request provide parts config here\r\n                     * @param {Object} data.FILE - To include a file in your multipart request\r\n                     * @example\r\n                     * var data =\t{\r\n                     * \t \"VARIABLES\":{\r\n                     *           \"apikey\" : \"*********\",\r\n                     *           \"First_Name\" : \"Naresh\",\r\n                     *           \"Last_Name\" : \"Babu\",\r\n                     *           \"email\" : \"naresh.babu@zylker.com\"\r\n                     *         }\r\n                     *     }\r\n                     * ZOHO.CRM.CONNECTOR.invokeAPI(\"MailChimp.sendSubscription\",data)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     * @example\r\n                     *\r\n                     * var data = {\r\n                     *     \"CONTENT_TYPE\":\"multipart\",\r\n                     *     \"PARTS\":[\r\n                     *               {\r\n                     *                   \"headers\": {\r\n                     *                       \"Content-Type\": \"application/json\"\r\n                     *                   },\r\n                     *                   \"content\": {\"mimeType\": \"application/vnd.google-apps.folder\", \"title\": \"NareshFolder\"\r\n                     *                   }\r\n                     *               }\r\n                     *             ]\r\n                     *   }\r\n                     *   ZOHO.CRM.CONNECTOR.invokeAPI(\"ex10.testconnector.uplaodfile\",data)\r\n                     *   .then(function(data){\r\n                     *       console.log(data)\r\n                     *   })\r\n                     * @example\r\n                     * var file = document.getElementById(\"File\").files[0];\r\n                     * var fileType;\r\n                     *   if (file.type === \"application/pdf\"){\r\n                     *     fileType = file.type;\r\n                     *   }\r\n                     *   else if(file.type === \"image/jpeg\"){\r\n                     *     fileType = file.type;\r\n                     *   }\r\n                     *   else if(file.type === \"text/plain\"){\r\n                     *     fileType = \"application/msword\";\r\n                     *   }\r\n                     *   else if(file.type === \"\"){\r\n                     *     fileType = \"application/msword\";\r\n                     *   }\r\n\r\n                     *   console.log(file);\r\n                     *   var data = {\r\n                     *     \"VARIABLES\":{\r\n                     *       \"pathFileName\" : \"/Zoho CRM/myFile/\"+file.name\r\n                     *     },\r\n                     *     \"CONTENT_TYPE\":\"multipart\",\r\n                     *     \"PARTS\":[\r\n                     *               {\r\n                     *                 \"headers\": {\r\n                     *                   \"Content-Type\": \"application/json\"\r\n                     *                 },\r\n                     *                 \"content\": {\"mimeType\": fileType,\"description\": \"TestFile to upload\", \"title\":file.name}\r\n                     *               },{\r\n                     *                 \"headers\": {\r\n                     *                   \"Content-Disposition\": \"file;\"\r\n                     *                 },\r\n                     *                 \"content\": \"__FILE__\"\r\n                     *               }\r\n                     *             ],\r\n                     *     \"FILE\":{\r\n                     *       \"fileParam\":\"content\",\r\n                     *       \"file\":file\r\n                     *     },\r\n                     *   }\r\n                     *   console.log(data);\r\n                     *   ZOHO.CRM.CONNECTOR.invokeAPI(\"ex10.testconnector.uplaodfile\",data)\r\n                     *   .then(function(data){\r\n                     *       console.log(data)\r\n                     *   })\r\n\r\n                     */\r\n                    invokeAPI: function (nameSpace, data) {\r\n                        return remoteCall(nameSpace, data, 'CONNECTOR_API')\r\n                    },\r\n                    /**\r\n                     * @function authorize\r\n                     * @description Prompts the Connector Authorize window\r\n                     * @returns {Promise} resolved with true on successful Authorization\r\n                     * @memberof ZOHO.CRM.CONNECTOR\r\n                     * @param {String} nameSpace - NameSpace of Connector to authorize\r\n                     * @example\r\n                     * var connectorName = \"zoho.authorize\";\r\n                     * ZOHO.CRM.CONNECTOR.authorize(connectorName);\r\n                     *\r\n                     */\r\n                    authorize: function (nameSpace) {\r\n                        return remoteCall(nameSpace, {}, 'CONNECTOR_AUTHORIZE')\r\n                    }\r\n                    /*\r\n                     * @function revokeConnector\r\n                     * @description revoke Connector\r\n                     * @returns {Promise} resolved with response of the Connector\r\n                     * @memberof ZOHO.CRM.CONNECTOR\r\n                     * @param {String} nameSpace - NameSpace of Connector to revoke\r\n                     * @example\r\n                     *   ZOHO.CRM.CONNECTOR.revokeConnector(\"zoho.accounts\")\r\n                     *   .then(function(data){\r\n                     *       console.log(data)\r\n                     *   })\r\n                     *\r\n                     * //prints\r\n                     *{\r\n                     *    \"RESULT\": \"success\"\r\n                     * }\r\n                     *revokeConnector: function(nameSpace) {\r\n                     *    return remoteCall(nameSpace, {}, \"CONNECTOR_REVOKE\");\r\n                     *}\r\n\t\t\t\t\t */\r\n                },\r\n                /**\r\n                 * @namespace ZOHO.CRM.CONNECTION\r\n                 */\r\n                CONNECTION: {\r\n                    /**\r\n                     * @function invoke\r\n                     * @description Invoke a Connection\r\n                     * @returns {Promise} resolved with response of the connection made\r\n                     * @memberof ZOHO.CRM.CONNECTION\r\n                     * @param {String} conn_name - Connection Name\r\n                     * @param {Object} req_data - Request Data\r\n                     * @example\r\n                     * var conn_name = \"mailchimp4\";\r\n                     * var req_data ={\r\n                     *   \"parameters\" : {\r\n                     *       \"param1\" : \"paramvalue1\",\r\n                     *       \"param2\" : \"paramvalue2\"\r\n                     *   },\r\n                     *   \"headers\" : {\r\n                     *       \"header1\" : \"headervalue1\",\r\n                     *       \"header2\" : \"headervalue2\"\r\n                     *   },\r\n                     *   \"method\" : \"POST\",\r\n                     *   \"url\" : \"http://mailchimp.api/sample_api\",\r\n                     *   \"param_type\" : 1\r\n                     * };\r\n                     * ZOHO.CRM.CONNECTION.invoke(conn_name, req_data)\r\n                     * .then(function(data){\r\n                     *     console.log(data)\r\n                     * })\r\n                     *\r\n                     * //Prints\r\n                     * {\r\n                     *   \"code\" : \"SUCCESS\",\r\n                     *   \"details\" : {\r\n                     *       \"CODE\" : 200,\r\n                     *       \"message\" : \"action completed successfully\",\r\n                     *       \"status\" : \"Success\"\r\n                     *    },\r\n                     *   \"message\" : \"Connection invoked successfully\",\r\n                     *   \"status\" : \"success\"\r\n                     *  }\r\n                     */\r\n                    invoke: function (conn_name, req_data) {\r\n                        const request = {}\r\n                        const reqObj = {}\r\n                        reqObj.url = req_data.url\r\n                        reqObj.method = req_data.method\r\n                        reqObj.param_type = req_data.param_type\r\n                        reqObj.parameters = JSON.stringify(req_data.parameters)\r\n                        reqObj.headers = JSON.stringify(req_data.headers)\r\n                        request.data = reqObj\r\n                        const data = {\r\n                            category: 'CRM_CONNECTION', // no i18n\r\n                            connectionName: conn_name,\r\n                            data: request\r\n                        }\r\n                        return newRequestPromise(data)\r\n                    }\r\n                }\r\n            }\r\n        })()\r\n    }\r\n})()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WTemplateBoard\":\"WTemplateBoard_WTemplateBoard__3HTkn\"};"],"sourceRoot":""}